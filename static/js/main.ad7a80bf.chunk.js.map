{"version":3,"sources":["Components/SearchList/index.js","store/actions/addFilteredTickers.js","store/actions/addTicker.js","services/firebase.js","Functions/functions.js","Components/SearchForm/index.js","store/actions/delTicker.js","Components/Ticker/index.js","Components/Tickers/index.js","Components/WeeklyResult/index.js","store/actions/initUserData.js","utils/constants.js","store/selectors/tickersSelectors.js","store/actions/autoComplete.js","store/actions/calculateYearProfit.js","store/actions/calculateWeeklyPortfolioProfitAndCost.js","store/selectors/profileSelectors.js","Components/Main/index.js","hocs/PrivateRoute.js","hocs/PublicRoute.js","Components/SignUp/index.js","Components/LogIn/index.js","store/actions/setTickersInfo.js","Components/MyTickers/index.js","store/actions/calculatePortfolioCost.js","Components/Profile/index.js","Components/Router/index.js","store/initialState.js","store/sagas/profileSaga.js","store/sagas/tickersSaga.js","store/sagas/userDataSaga.js","store/sagas.js","store/reducers/userDataReducer.js","store/reducers/currentUserDataReducer.js","store/reducers/filteredTickersReducer.js","store/store.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","searchListContainer","maxWidth","searchList","listStyle","padding","margin","addButton","border","color","backgroundColor","SearchList","props","classes","className","searchResult","map","item","onClick","event","submitTicker","ticker","descr","classcode","ADD_FILTERED_TICKERS","ADD_TICKER_WITH_SAGA","addTickerWithSaga","description","date","quantity","usdCost","usdTotal","rubCost","rubTotal","eurCost","eurTotal","profitUsdAbs","profitUsdRel","profitRubAbs","profitRubRel","profitEurAbs","profitEurRel","currency","tickerType","type","auth","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","db","getDatabase","getInfoUrl","getHistoryUrl","startDate","finishDate","Math","round","Date","addTicker","prevData","isAutoComplete","isManual","a","friday","getDay","usdUrl","fetch","usdResponse","json","usdData","usdCurrency","c","eurUrl","eurResponse","uerData","eurCurrency","infoUrl","infoResponse","infoData","tickerUrl","tickerResponse","tickerData","s","isNaN","Error","usdCoef","rubCoef","eurCoef","prevDateData","tickerCurrent","ref","currentUser","uid","toISOString","slice","get","snapshot","exists","data","val","undefined","console","log","message","getTickerInfo","tickers","USDUrl","EURUrl","USDresult","USDData","USDCurrency","EURresult","EURData","EURCurrency","tickerTable","result","RUBCost","RUBTotal","USDTotal","USDCost","EURTotal","EURCost","calculatePortfolio","RUBGrandTotal","USDGrandTotal","EURGrandTotal","args","forEach","list","Object","values","filterData","year","month","filteredData","keys","tickerItems","tickerItem","dates","filter","getMonth","getFullYear","filteredTickers","filterWeeklyResult","getYearProfit","allTickers","yearProfit","i","tickerNames","j","sumProfitUsdAbsTemp","sumProfitUsdRelTemp","sumProfitRubAbsTemp","sumProfitRubRelTemp","sumProfitEurAbsTemp","sumProfitEurRelTemp","sumProfitUsdAbs","sumProfitUsdRel","sumProfitRubAbs","sumProfitRubRel","sumProfitEurAbs","sumProfitEurRel","getWekklyPortfolioProfitAndCost","wekklyPortfolioProfitAndCost","no_data","prevPortfolioUsdTotal","prevPortfolioRubTotal","prevPortfolioEurTotal","portfolioUsdTotal","portfolioUsdProfitAbs","portfolioUsdProfitRel","portfolioRubTotal","portfolioRubProfitAbs","portfolioRubProfitRel","portfolioEurTotal","portfolioEurProfitAbs","portfolioEurProfitRel","form","borderRadius","display","flexDirection","formSubmit","searchItem","marginBottom","SearchForm","useState","setTicker","setQuantity","setDate","search","setSearch","setSearchResult","setCurrency","dispatch","useDispatch","buyTicker","preventDefault","addAction","action","onSubmit","label","disabled","value","onChange","target","required","query","then","temp","push","symbol","catch","error","searchedTicker","DEL_TICKER_WITH_SAGA","delTickerWithSaga","marketType","table","overflow","tickerName","width","alignItems","justifyContent","flexShrink","tickerDate","borderLeft","borderRight","tickerHeader","tickerDateCell","borderBottom","green","red","Ticker","setSumProfitUsdAbs","setSumProfitUsdRel","setSumProfitRubAbs","setSumProfitRubRel","setSumProfitEurAbs","setSumProfitEurRel","useEffect","toFixed","TickerPure","React","memo","Tickers","filteredTickersNames","length","delTicker","TickersPure","WeeklyResult","setPortfolioUsdTotal","setPortfolioRubTotal","setPortfolioEurTotal","portfolioUsdTotalTemp","portfolioRubTotalTemp","portfolioEurTotalTemp","weeklyResult","WeeklyResultPure","INIT_USER_DATA","initUserData","userData","INIT_INIT_USER_DATA_WITH_SAGA","HOMEPAGE","EMPTY_OBJECT","getAlltickers","state","getFilteredStocks","stock","getFilteredPif","pif","getFilteredEtf","etf","getFilteredBonds","bonds","getFilteredForex","forex","getDates","AUTOCOMPLETE_TICKER_WITH_SAGA","autoCompleteTickerWithSaga","CALCULATE_YEAR_PROFIT","calculateYearProfit","CALCULATE_YEAR_PROFIT_WITH_SAGA","CALCULATE_WEEKLY_PORTFOLIO_PROFIT_AND_COST","CALCULATE_WEEKLY_PORTFOLIO_PROFIT_AND_COST_WITH_SAGA","getPortfolio","portfolio","getMyCurrentStock","currentUserData","getMyCurrentPif","getMyCurrentEtf","getMyCurrentBonds","getMyCurrentForex","getMyProfileCost","portfolioCost","getMyYearProfit","getWeeklyPortfolioProfitAndCost","weeklyPortfolioProfitAndCost","App","mainContainer","Main","filteredForex","useSelector","filteredStocks","filteredPif","filteredEtf","filteredBonds","weeklyResults","filteredWeeklyResult","setFilteredWeeklyResult","calculateYearProfitWithSaga","calculateWeeklyPortfolioProfitAndCostWithSaga","MainPure","PrivateRoute","authenticated","children","to","pathname","PublicRoute","SignUp","email","setEmail","password","setPassword","setError","handlePassChange","useCallback","e","handleEmailChange","handleSubmit","createUserWithEmailAndPassword","placeholder","name","LogIn","signInWithEmailAndPassword","SET_TICKERS_INFO","setTickersInfo","SET_TICKERS_INFO_WITH_SAGA","setTickersInfoWithSaga","flexGrow","tickerDataCell","tickerHeaders","MyTickers","myProfit","MyTickersPure","CALCULATE_PORTFOLIO_COST","calculatePortfolioCost","CALCULATE_PORTFOLIO_COST_WITH_SAGA","Profile","yearPortfolioProfit","setYearPortfolioProfit","myCurrentStock","myCurrentPif","myCurrentEtf","myCurrentBonds","myCurrentForex","myPortfolioCost","myYearProfit","calculatePortfolioCostWithSaga","yearResult","yearProfitUsdAbs","yearProfitUsdRel","yearProfitRubAbs","yearProfitRubRel","yearProfitEurAbs","yearProfitEurRel","calculateYearPortfolioProfit","ProfilePure","Router","authed","setAuthed","onAuthStateChanged","user","signOutUser","signOut","exact","path","element","initialState","onCalculatePortfolioCostWithSaga","call","put","onCalculateYearProfitWithSaga","onCalculateWeeklyPortfolioProfitAndCostWithSaga","onAddTickerWithSaga","newTicker","set","onDelTickerWithSaga","remove","onAutoCompleteTickersWithSaga","autoCompleteAction","onSetTickersInfoWithSaga","onInitUserDataWithSaga","onValue","store","mySaga","takeLatest","takeEvery","userDataReducer","currentUserDataReducer","filteredTickersReducer","combine","combineReducers","options","onError","stack","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","key","storage","persistedReducer","persistReducer","createStore","applyMiddleware","run","persistor","persistStore","mainTheme","createTheme","palette","primary","main","secondary","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad7a80bf.chunk.js","sourcesContent":["import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n\tsearchListContainer: {\n\t\tmaxWidth: '500px',\n\t},\n\tsearchList: {\n\t\tlistStyle: 'none',\n\t\tpadding: '0',\n\t\tmargin: '0',\n\t},\n\taddButton: {\n\t\tborder: 'none',\n\t\t'&:hover': {\n\t\t\tcolor: '#fff',\n\t\t\tbackgroundColor: '#222',\n\t\t}\n\t},\n}));\n\nfunction SearchList(props) {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={classes.searchListContainer}>\n\t\t\t<ul className={classes.searchList}>\n\t\t\t\t{props.searchResult.map((item) =>\n\t\t\t\t\t<li key={item.ticker + item.classcode}><button onClick={(event) => props.submitTicker(event, item.ticker)} className={classes.addButton}>{item.descr}</button></li>\n\t\t\t\t)}\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n\nexport default SearchList;\n","export const ADD_FILTERED_TICKERS = 'TICKERS::ADD_FILTERED_TICKERS';\r\n\r\nexport const addFilteredTickers = (filteredTickers) => {\r\n    return {\r\n        type: ADD_FILTERED_TICKERS,\r\n        filteredTickers\r\n    };\r\n};","export const ADD_TICKER_WITH_SAGA = 'TICKERS::ADD_TICKER_WITH_SAGA';\n\nexport const addTickerWithSaga = (\n    ticker, \n    description, \n    date, \n    quantity, \n    usdCost, \n    usdTotal,\n    rubCost, \n    rubTotal,\n    eurCost, \n    eurTotal,\n    profitUsdAbs,\n    profitUsdRel,\n    profitRubAbs,\n    profitRubRel,\n    profitEurAbs,\n    profitEurRel,\n    currency, \n    tickerType\n    ) => {\n    return {\n        type: ADD_TICKER_WITH_SAGA,\n        ticker, \n        description, \n        date, \n        quantity, \n        usdCost, \n        usdTotal,\n        rubCost, \n        rubTotal,\n        eurCost, \n        eurTotal,\n        profitUsdAbs,\n        profitUsdRel,\n        profitRubAbs,\n        profitRubRel,\n        profitEurAbs,\n        profitEurRel,\n        currency, \n        tickerType\n    };\n};","import { getAuth } from \"@firebase/auth\";\nimport { getDatabase } from \"@firebase/database\";\nimport { initializeApp } from \"firebase/app\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAS0Sazo-Bbg-TouSxSrenj5hTYa5bnjN8\",\n  authDomain: \"investor-8a0c2.firebaseapp.com\",\n  projectId: \"investor-8a0c2\",\n  storageBucket: \"investor-8a0c2.appspot.com\",\n  messagingSenderId: \"949350207446\",\n  appId: \"1:949350207446:web:c6cf85c9033c3ed2491e77\"\n};\n\nexport const firebaseInitialize = initializeApp(firebaseConfig);\nexport const auth = getAuth();\nexport const db = getDatabase();","import { addFilteredTickers } from \"../store/actions/addFilteredTickers\";\r\nimport { addTickerWithSaga } from \"../store/actions/addTicker\";\r\nimport { auth, db } from '../services/firebase';\r\nimport { ref, get } from '@firebase/database';\r\n\r\nexport const getSearchUrl = (query) => {\r\n    return `https://api.bcs.ru/udfdatafeed/v1/search?query=${query}&limit=10&fulldescription=on`;\r\n};\r\n\r\nexport const getInfoUrl = (ticker) => {\r\n    return `https://api.bcs.ru/udfdatafeed/v1/symbols?symbol=${ticker}`;\r\n};\r\n\r\nexport const getHistoryUrl = (ticker, startDate, finishDate) => {\r\n    if (+startDate && +finishDate) {\r\n        return `https://api.bcs.ru/udfdatafeed/v1/history?symbol=${ticker}&resolution=d&from=${Math.round((+(new Date(startDate)))/1000)}&to=${Math.round((+(new Date(finishDate)))/1000)}`;\r\n    } else {\r\n        return `https://api.bcs.ru/udfdatafeed/v1/history?symbol=${ticker}&resolution=d&from=${Math.round((+(new Date()))/1000)}&to=${Math.round((+(new Date()))/1000)}`;\r\n    }\r\n    \r\n};\r\n\r\nexport const addTicker = async (ticker, date, quantity, currency, prevData, isAutoComplete, isManual) => {\r\n    let friday = +(new Date(date));\r\n    while ((new Date(friday)).getDay() !== 5){\r\n        friday += 86400000;\r\n    }\r\n\r\n    try {\r\n        if(!isManual){\r\n            const usdUrl = getHistoryUrl('RUR',friday,friday + 82800000);\r\n            const usdResponse = await fetch(usdUrl);\r\n            const usdData = await usdResponse.json();\r\n            const usdCurrency = usdData.c[0];\r\n\r\n            const eurUrl = getHistoryUrl('EUR_RUB',friday,friday + 82800000);\r\n            const eurResponse = await fetch(eurUrl);\r\n            const uerData = await eurResponse.json();\r\n            const eurCurrency = uerData.c[0];\r\n\r\n            const infoUrl = getInfoUrl(ticker);\r\n            const infoResponse = await fetch(infoUrl);\r\n            const infoData = await infoResponse.json();\r\n\r\n            const tickerUrl = getHistoryUrl(ticker, friday, friday + 82800000);\r\n            const tickerResponse = await fetch(tickerUrl);\r\n            const tickerData = await tickerResponse.json();\r\n\r\n            if(tickerData.s === 'no_data' || isNaN(tickerData.c[0])){ throw new Error ('Нет данных')}\r\n\r\n            let usdCoef = 1;\r\n            if (currency === 'rur') {usdCoef = 1/usdCurrency} else if (currency === 'usd') {usdCoef = 1} else if (currency === 'eur') {usdCoef = eurCurrency/usdCurrency};\r\n            let rubCoef = 1;\r\n            if (currency === 'rur') {rubCoef = 1} else if (currency === 'usd') {rubCoef = usdCurrency} else if (currency === 'eur') {rubCoef = eurCurrency};\r\n            let eurCoef = 1;\r\n            if (currency === 'rur') {eurCoef = 1/eurCurrency} else if (currency === 'usd') {eurCoef = usdCurrency/eurCurrency} else if (currency === 'eur') {eurCoef = eurCurrency/usdCurrency};\r\n            \r\n            const usdCost = (infoData.type !== 'bonds') ? tickerData.c[0] * usdCoef : tickerData.c[0] * usdCoef * 10;\r\n            const usdTotal = (infoData.type !== 'bonds') ? tickerData.c[0] * usdCoef * quantity : tickerData.c[0] * usdCoef * quantity * 10;\r\n            const rubCost = (infoData.type !== 'bonds') ? tickerData.c[0] * rubCoef : tickerData.c[0] * rubCoef * 10;\r\n            const rubTotal = (infoData.type !== 'bonds') ? tickerData.c[0] * rubCoef * quantity : tickerData.c[0] * rubCoef * quantity * 10;\r\n            const eurCost = (infoData.type !== 'bonds') ? tickerData.c[0] * eurCoef : tickerData.c[0] * eurCoef * 10;\r\n            const eurTotal = (infoData.type !== 'bonds') ? tickerData.c[0] * eurCoef * quantity : tickerData.c[0] * eurCoef * quantity * 10;\r\n            let prevDateData = prevData;\r\n            if (!isAutoComplete){\r\n                const tickerCurrent = ref(db, `${auth.currentUser.uid}/tickers/${infoData.type}/${ticker}/data/${(new Date(friday - 604800000)).toISOString().slice(0, 10)}`);\r\n                const snapshot = await get(tickerCurrent);\r\n                if (snapshot.exists()){\r\n                    const data = snapshot.val();\r\n                    prevDateData.ticker = data.ticker;\r\n                    prevDateData.rubCost = data.rubCost;\r\n                    prevDateData.usdCost = data.usdCost;\r\n                    prevDateData.eurCost = data.eurCost;\r\n                    prevDateData.quantity = data.quantity;\r\n                };\r\n            }\r\n\r\n            if(prevDateData.ticker === undefined){\r\n                return addTickerWithSaga(ticker, \r\n                    infoData.description, \r\n                    (new Date(friday)).toISOString().slice(0, 10), \r\n                    quantity, \r\n                    usdCost, \r\n                    usdTotal,\r\n                    rubCost, \r\n                    rubTotal,\r\n                    eurCost, \r\n                    eurTotal,\r\n                    0,\r\n                    0,\r\n                    0,\r\n                    0,\r\n                    0,\r\n                    0,\r\n                    currency, \r\n                    infoData.type,\r\n                );\r\n            } else {\r\n                const profitUsdAbs = (usdCost - prevDateData.usdCost) * prevDateData.quantity;\r\n                const profitUsdRel = (usdCost - prevDateData.usdCost) / prevDateData.usdCost * 100;\r\n                const profitRubAbs = (rubCost - prevDateData.rubCost) * prevDateData.quantity;\r\n                const profitRubRel = (rubCost - prevDateData.rubCost) / prevDateData.rubCost * 100;\r\n                const profitEurAbs = (eurCost - prevDateData.eurCost) * prevDateData.quantity;\r\n                const profitEurRel = (eurCost - prevDateData.eurCost) / prevDateData.eurCost * 100;\r\n                return addTickerWithSaga(ticker, \r\n                    infoData.description, \r\n                    (new Date(friday)).toISOString().slice(0, 10), \r\n                    quantity, \r\n                    usdCost, \r\n                    usdTotal,\r\n                    rubCost, \r\n                    rubTotal,\r\n                    eurCost, \r\n                    eurTotal,\r\n                    profitUsdAbs,\r\n                    profitUsdRel,\r\n                    profitRubAbs,\r\n                    profitRubRel,\r\n                    profitEurAbs,\r\n                    profitEurRel,\r\n                    currency, \r\n                    infoData.type,\r\n                );\r\n            }                           \r\n        };\r\n        \r\n\r\n    }\r\n\r\n    catch(err) {\r\n        console.log(err.message);\r\n    }\r\n};\r\n\r\nexport const getTickerInfo = async (tickers, type) => {\r\n    const USDUrl = getHistoryUrl('RUR',null,null);\r\n    const EURUrl = getHistoryUrl('EUR_RUB',null,null);\r\n    const USDresult = await fetch(USDUrl);\r\n    const USDData = await USDresult.json();\r\n    const USDCurrency = USDData.c[0];\r\n    const EURresult = await fetch(EURUrl);\r\n    const EURData = await EURresult.json();\r\n    const EURCurrency = EURData.c[0];\r\n    let RUBCost;\r\n    let RUBTotal; \r\n    let USDCost;\r\n    let USDTotal;\r\n    let EURCost;\r\n    let EURTotal;\r\n\r\n    let tickerTable = {};\r\n    for (let ticker in tickers) {\r\n        const tickerUrl = getHistoryUrl(ticker,null,null);\r\n        const result = await fetch(tickerUrl);\r\n        const data = await result.json(); \r\n        \r\n        if (tickers[ticker].currency === 'rur'){\r\n            RUBCost = data.c[0];\r\n            RUBTotal = RUBCost * tickers[ticker].quantity; \r\n            USDCost = RUBCost / USDCurrency;\r\n            USDTotal = USDCost * tickers[ticker].quantity;\r\n            EURCost = RUBCost / EURCurrency;\r\n            EURTotal = EURCost  * tickers[ticker].quantity;\r\n        } else if (tickers[ticker].currency === 'usd') {\r\n            USDCost = data.c[0];\r\n            USDTotal = USDCost * tickers[ticker].quantity;\r\n            RUBCost = USDCost * USDCurrency;\r\n            RUBTotal = RUBCost * tickers[ticker].quantity; \r\n            EURCost = RUBCost / EURCurrency;\r\n            EURTotal = EURCost  * tickers[ticker].quantity;\r\n        } else if (tickers[ticker].currency === 'eur') {\r\n            EURCost = data.c[0];\r\n            EURTotal = EURCost * tickers[ticker].quantity;\r\n            RUBCost = EURCost * EURCurrency;\r\n            RUBTotal = RUBCost * tickers[ticker].quantity; \r\n            USDCost = RUBCost / USDCurrency;\r\n            USDTotal = USDCost  * tickers[ticker].quantity;\r\n        }\r\n        if (type === 'bonds'){\r\n            RUBCost *= 10;\r\n            RUBTotal *= 10; \r\n            USDCost *= 10;\r\n            USDTotal *= 10;\r\n            EURCost *= 10;\r\n            EURTotal *= 10;\r\n        }\r\n        \r\n        tickerTable = {...tickerTable, \r\n            [ticker]: {\r\n                quantity: tickers[ticker].quantity, \r\n                RUBCost: RUBCost, \r\n                RUBTotal: RUBTotal, \r\n                USDCost: USDCost, \r\n                USDTotal: USDTotal,\r\n                EURCost: EURCost, \r\n                EURTotal: EURTotal,\r\n                currency: tickers[ticker].currency,\r\n                description: tickers[ticker].description\r\n            },\r\n                }\r\n    }\r\n    return tickerTable;\r\n};\r\n\r\nexport const calculatePortfolio = (...args) => {\r\n    let RUBGrandTotal = 0;\r\n    let USDGrandTotal = 0;\r\n    let EURGrandTotal = 0;\r\n    args.forEach((list) => {\r\n        Object.values(list).forEach((item) => {\r\n            RUBGrandTotal += +item.RUBTotal;\r\n            USDGrandTotal += +item.USDTotal;\r\n            EURGrandTotal += +item.EURTotal;\r\n        })\r\n    });\r\n    return({RUBGrandTotal: RUBGrandTotal, USDGrandTotal: USDGrandTotal, EURGrandTotal: EURGrandTotal});\r\n};\r\n\r\nexport const filterData = (data, year, month) => {\r\n    \r\n    let filteredData = {};\r\n    const tickerTypes = Object.keys(data);\r\n    tickerTypes.forEach((tickerType) => {\r\n        const tickerItems = Object.keys(data[tickerType]);\r\n        filteredData = {\r\n            ...filteredData,\r\n            [tickerType]: {}\r\n        };\r\n        tickerItems.forEach((tickerItem) => {\r\n            const dates = Object.keys(data[tickerType][tickerItem].data);\r\n            filteredData = {\r\n                ...filteredData,\r\n                [tickerType]: {\r\n                    ...filteredData[tickerType],\r\n                    [tickerItem]: {data:{}}\r\n                }\r\n            };\r\n            const filteredDates = dates.filter(date => ((new Date(date).getMonth() === month) && (new Date(date).getFullYear() === year)));\r\n            filteredDates.forEach((date) => {\r\n                filteredData = {\r\n                    ...filteredData,\r\n                    [tickerType]: {\r\n                        ...filteredData[tickerType],\r\n                        [tickerItem]: {data:{\r\n                            ...filteredData[tickerType][tickerItem].data,\r\n                            [date]: data[tickerType][tickerItem].data[date]\r\n                        }}\r\n                    }\r\n                };\r\n            });\r\n            \r\n        });\r\n    });\r\n    return addFilteredTickers(filteredData);\r\n};\r\n\r\nexport const filterWeeklyResult = (data, year, month) => {\r\n    let filteredData = {};\r\n    const dates = Object.keys(data);\r\n    let filteredDates = [];\r\n    if (month !== undefined){\r\n        filteredDates = dates.filter(date => ((new Date(date).getMonth() === month) && (new Date(date).getFullYear() === year)));  \r\n    } else {\r\n        filteredDates = dates.filter(date => ((new Date(date).getFullYear() === year)));\r\n    }\r\n    \r\n    filteredDates.forEach((date) => {\r\n        filteredData = {\r\n            ...filteredData,\r\n            [date]: data[date]\r\n        }\r\n    });\r\n\r\n    return filteredData;\r\n};\r\n\r\n\r\nexport const getYearProfit = (allTickers) => {\r\n\r\n    let yearProfit = {};\r\n\r\n    Object.values(allTickers).forEach((type, i) => {\r\n        const tickerNames = Object.keys(type);\r\n        yearProfit = {...yearProfit,\r\n            [Object.keys(allTickers)[i]]: {}\r\n        };\r\n        Object.values(type).forEach((ticker, j) => {\r\n            let sumProfitUsdAbsTemp = 0;\r\n            let sumProfitUsdRelTemp = 1;\r\n            let sumProfitRubAbsTemp = 0;\r\n            let sumProfitRubRelTemp = 1;\r\n            let sumProfitEurAbsTemp = 0;\r\n            let sumProfitEurRelTemp = 1;\r\n            Object.values(ticker.data).forEach((date) => {\r\n                sumProfitUsdAbsTemp += +date.profitUsdAbs;\r\n                sumProfitUsdRelTemp *= 1 + +date.profitUsdRel/100;\r\n                sumProfitRubAbsTemp += +date.profitRubAbs;\r\n                sumProfitRubRelTemp *= 1 + +date.profitRubRel/100;\r\n                sumProfitEurAbsTemp += +date.profitEurAbs;\r\n                sumProfitEurRelTemp *= 1 + +date.profitEurRel/100;\r\n            });\r\n\r\n            sumProfitUsdRelTemp = (sumProfitUsdRelTemp - 1) * 100;\r\n            sumProfitRubRelTemp = (sumProfitRubRelTemp - 1) * 100;\r\n            sumProfitEurRelTemp = (sumProfitEurRelTemp - 1) * 100;\r\n\r\n            yearProfit = {...yearProfit,  \r\n                [Object.keys(allTickers)[i]]: {\r\n                    ...yearProfit[Object.keys(allTickers)[i]],\r\n                    [tickerNames[j]]: {\r\n                        sumProfitUsdAbs: sumProfitUsdAbsTemp,\r\n                        sumProfitUsdRel: sumProfitUsdRelTemp,\r\n                        sumProfitRubAbs: sumProfitRubAbsTemp,\r\n                        sumProfitRubRel: sumProfitRubRelTemp,\r\n                        sumProfitEurAbs: sumProfitEurAbsTemp,\r\n                        sumProfitEurRel: sumProfitEurRelTemp\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n    return yearProfit;\r\n};\r\n\r\nexport const getWekklyPortfolioProfitAndCost = (allTickers, dates) => {\r\n    let wekklyPortfolioProfitAndCost = {};\r\n    if (dates.no_data){return wekklyPortfolioProfitAndCost};\r\n    let prevPortfolioUsdTotal = undefined;\r\n    let prevPortfolioRubTotal = undefined;\r\n    let prevPortfolioEurTotal = undefined;\r\n    \r\n    Object.keys(dates).forEach((date) => {\r\n        let portfolioUsdTotal = 0;\r\n        let portfolioUsdProfitAbs = 0;\r\n        let portfolioUsdProfitRel = 0;\r\n        let portfolioRubTotal = 0;\r\n        let portfolioRubProfitAbs = 0;\r\n        let portfolioRubProfitRel = 0;\r\n        let portfolioEurTotal = 0;\r\n        let portfolioEurProfitAbs = 0;\r\n        let portfolioEurProfitRel = 0;\r\n\r\n        \r\n\r\n        Object.values(allTickers).forEach((type, i) => {\r\n\r\n            Object.values(type).forEach((ticker, j) => {\r\n                if(ticker.data[date] !== undefined){\r\n                    portfolioUsdTotal += +ticker.data[date].usdTotal;\r\n                    portfolioUsdProfitAbs += +ticker.data[date].profitUsdAbs;\r\n                    portfolioRubTotal += +ticker.data[date].rubTotal;\r\n                    portfolioRubProfitAbs += +ticker.data[date].profitRubAbs;\r\n                    portfolioEurTotal += +ticker.data[date].eurTotal;\r\n                    portfolioEurProfitAbs += +ticker.data[date].profitEurAbs;\r\n                    \r\n                }\r\n            });\r\n        });\r\n\r\n        if (prevPortfolioUsdTotal !== undefined && prevPortfolioUsdTotal !== 0) {\r\n            portfolioUsdProfitRel = portfolioUsdProfitAbs/ prevPortfolioUsdTotal * 100;\r\n            portfolioRubProfitRel = portfolioRubProfitAbs/ prevPortfolioRubTotal * 100;\r\n            portfolioEurProfitRel = portfolioEurProfitAbs/ prevPortfolioEurTotal * 100;\r\n        }\r\n\r\n        prevPortfolioUsdTotal = portfolioUsdTotal;\r\n        prevPortfolioRubTotal = portfolioRubTotal;\r\n        prevPortfolioEurTotal = portfolioEurTotal;\r\n\r\n        wekklyPortfolioProfitAndCost = {\r\n            ...wekklyPortfolioProfitAndCost,\r\n            [date]: {\r\n                portfolioUsdTotal: portfolioUsdTotal,\r\n                portfolioUsdProfitAbs: portfolioUsdProfitAbs,\r\n                portfolioUsdProfitRel: portfolioUsdProfitRel,\r\n                portfolioRubTotal: portfolioRubTotal,\r\n                portfolioRubProfitAbs: portfolioRubProfitAbs,\r\n                portfolioRubProfitRel: portfolioRubProfitRel,\r\n                portfolioEurTotal: portfolioEurTotal,\r\n                portfolioEurProfitAbs: portfolioEurProfitAbs,\r\n                portfolioEurProfitRel: portfolioEurProfitRel,\r\n            }\r\n        }\r\n    });\r\n\r\n    return wekklyPortfolioProfitAndCost;\r\n};\r\n\r\nexport const calculateYearPortfolioProfit = (wekklyPortfolioProfitAndCost, year) => {\r\n    let yearPortfolioProfit = {};\r\n\r\n    const yearResult = filterWeeklyResult(wekklyPortfolioProfitAndCost, year);\r\n    let yearProfitUsdAbs = 0;\r\n    let yearProfitUsdRel = 1;\r\n    let yearProfitRubAbs = 0;\r\n    let yearProfitRubRel = 1;\r\n    let yearProfitEurAbs = 0;\r\n    let yearProfitEurRel = 1;\r\n\r\n    Object.values(yearResult).forEach((date) => {\r\n        yearProfitUsdAbs += +date.portfolioUsdProfitAbs;\r\n        yearProfitUsdRel *= 1 + +date.portfolioUsdProfitRel/100;\r\n        yearProfitRubAbs += +date.portfolioRubProfitAbs;\r\n        yearProfitRubRel *= 1 + +date.portfolioRubProfitRel/100;\r\n        yearProfitEurAbs += +date.portfolioEurProfitAbs;\r\n        yearProfitEurRel *= 1 + +date.portfolioEurProfitRel/100;\r\n    });\r\n\r\n    yearProfitUsdRel = (yearProfitUsdRel - 1)*100;\r\n    yearProfitRubRel = (yearProfitRubRel - 1)*100;\r\n    yearProfitEurRel = (yearProfitEurRel - 1)*100;\r\n\r\n    yearPortfolioProfit = {\r\n        yearProfitUsdAbs: yearProfitUsdAbs,\r\n        yearProfitUsdRel: yearProfitUsdRel,\r\n        yearProfitRubAbs: yearProfitRubAbs,\r\n        yearProfitRubRel: yearProfitRubRel,\r\n        yearProfitEurAbs: yearProfitEurAbs,\r\n        yearProfitEurRel: yearProfitEurRel\r\n    }\r\n\r\n    return yearPortfolioProfit;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nexport const addTicker = (ticker, date, quantity, currency, prevData) => {\r\n    let friday = +(new Date(date));\r\n    while ((new Date(friday)).getDay() !== 5){\r\n        friday += 86400000;\r\n    }\r\n    const tickerUrl = getHistoryUrl(ticker, friday, friday + 82800000);\r\n    const infoUrl = getInfoUrl(ticker);\r\n    let currencyTicker = '';\r\n    if (currency === 'rur') {currencyTicker = ''} else if (currency === 'usd') {currencyTicker = 'RUR'} else if (currency === 'eur') {currencyTicker = 'EUR_RUB'};\r\n    const currencyUrl = getHistoryUrl(currencyTicker, friday, friday + 82800000);\r\n    let currencyCourse = 1;\r\n    \r\n        return fetch(currencyUrl)\r\n            .then(result => result.json())\r\n            .then(course =>{\r\n                if (course.errmsg === 'unknown_symbol'){\r\n                    currencyCourse = 1;\r\n                } else {\r\n                    currencyCourse = course.c[0];\r\n                }\r\n                return fetch(tickerUrl)\r\n                .then(result => result.json())\r\n                .then(data => {\r\n                    if(data.s === 'no_data'){ throw new Error ('Нет данных')}\r\n                    return fetch(infoUrl)\r\n                        .then(result => result.json())\r\n                        .then((info) => {\r\n                            if(prevData.ticker === undefined){\r\n                                const cost = (info.type !== 'bonds') ? data.c[0] : data.c[0] * 10;\r\n                                const total = (info.type !== 'bonds') ? data.c[0] * quantity : data.c[0] * quantity * 10;\r\n                                const roubleCost = (info.type !== 'bonds') ? data.c[0] * currencyCourse : data.c[0] * currencyCourse * 10;\r\n                                const roubleTotal = (info.type !== 'bonds') ? data.c[0] * currencyCourse * quantity : data.c[0] * currencyCourse * quantity * 10;\r\n                                if (isNaN(data.c[0])) {throw new Error('Нет данных')};\r\n                                return addTickerWithSaga(ticker, \r\n                                    info.description, \r\n                                    (new Date(friday)).toISOString().slice(0, 10), \r\n                                    quantity, \r\n                                    cost.toFixed(2), \r\n                                    total.toFixed(2), \r\n                                    roubleCost.toFixed(2), \r\n                                    roubleTotal.toFixed(2), \r\n                                    currency, \r\n                                    info.type,\r\n                                    0,\r\n                                    0,\r\n                                    0,\r\n                                    0);\r\n                            } else {\r\n                                const cost = (info.type !== 'bonds') ? data.c[0] : data.c[0] * 10;\r\n                                const total = (info.type !== 'bonds') ? data.c[0] * quantity : data.c[0] * quantity * 10;\r\n                                const roubleCost = (info.type !== 'bonds') ? data.c[0] * currencyCourse : data.c[0] * currencyCourse * 10;\r\n                                const roubleTotal = (info.type !== 'bonds') ? data.c[0] * currencyCourse * quantity : data.c[0] * currencyCourse * quantity * 10;\r\n                                const profitCurrencyAbs = (cost - prevData.cost) * prevData.quantity;\r\n                                const profitCurrencyRel = (cost - prevData.cost) / prevData.cost * 100;\r\n                                const profitRubAbs = (roubleCost - prevData.roubleCost) * prevData.quantity;\r\n                                const profitRubRel = (roubleCost - prevData.roubleCost) / prevData.roubleCost * 100;\r\n                                if (isNaN(data.c[0])) {throw new Error('Нет данных')};\r\n                                return addTickerWithSaga(ticker, \r\n                                    info.description, \r\n                                    (new Date(friday)).toISOString().slice(0, 10), \r\n                                    quantity, cost.toFixed(2), \r\n                                    total.toFixed(2), \r\n                                    roubleCost.toFixed(2), \r\n                                    roubleTotal.toFixed(2), \r\n                                    currency, \r\n                                    info.type,\r\n                                    profitCurrencyAbs.toFixed(2),\r\n                                    profitCurrencyRel.toFixed(2),\r\n                                    profitRubAbs.toFixed(2),\r\n                                    profitRubRel.toFixed(2));\r\n                            }\r\n                            \r\n                            \r\n                        })\r\n                        .catch(error => {\r\n                            console.log(error);\r\n                        })\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n};\r\n*/","import React, { useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core';\nimport SearchList from '../SearchList'\nimport {addTicker, getSearchUrl} from '../../Functions/functions.js';\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        maxWidth: '400px',\n        border: '1px solid black',\n        borderRadius: '10px',\n        display: 'flex',\n        flexDirection: 'column',\n        margin: '10px',\n    },\n    formSubmit: {\n        display: 'block',\n    },\n    searchItem: {\n        margin: '5px 10px',\n        marginBottom: '5px'\n    },\n}));\n\nfunction SearchForm() {\n\n    const [ticker, setTicker] = useState('');\n    const [quantity, setQuantity] = useState('');\n    const [date, setDate] = useState('');\n    const [search, setSearch] = useState('');\n    const [searchResult, setSearchResult] = useState([]);\n    const [currency, setCurrency] = useState('rur');\n\n    const handleTicker = (event) => {\n        setTicker(event.target.value);\n    };\n\n    const handleQuantity = (event) => {\n        setQuantity(event.target.value);\n    };\n\n    const handleDate = (event) => {\n        setDate(event.target.value);\n    };\n\n    const submitTicker = (event, searchedTicker) => {\n        event.preventDefault();\n        setTicker(searchedTicker);\n    }\n\n    const handleCurrency = (event) => {\n        setCurrency(event.target.value);\n    };\n\n    const dispatch = useDispatch();\n\n    const handleSearch = (event) => {\n        setSearch(event.target.value);\n        const search = getSearchUrl(event.target.value);\n        fetch(search)\n            .then(result => result.json())\n            .then(data => {\n                let temp = [];\n                data.forEach((item, i) => {\n                    temp.push({\n                        ticker: item.symbol,\n                        descr: item.description,\n                        classcode: item.classcode\n                    });\n                });\n                setSearchResult(temp);\n            })\n            .catch(error => {\n                console.log(error);\n            })\n\n    };\n\n    const buyTicker = async (event) => {\n        event.preventDefault();\n        setSearchResult([]);\n        const addAction = await addTicker(ticker, date, quantity, currency, {}, false, false);\n        addAction && dispatch(addAction);\n    };\n\n    const classes = useStyles();\n\n    return (\n        <form action=\"\" onSubmit={buyTicker} className={classes.form} label=\"Ticker\">\n            <input type=\"text\" disabled className={classes.searchItem} value={ticker} onChange={handleTicker} required></input>\n            <select required onChange={handleCurrency} className={classes.searchItem}>\n                <option value='rur'>rur</option>\n                <option value='usd'>usd</option>\n                <option value='eur'>eur</option>\n            </select>\n            <input type=\"number\" className={classes.searchItem} value={quantity} onChange={handleQuantity} required></input>\n            <input type=\"date\" className={classes.searchItem} value={date} onChange={handleDate} required></input>\n            <input type=\"submit\" className={classes.formSubmit + ' ' + classes.searchItem} value=\"Add\"></input>\n            <input type=\"text\" className={classes.searchItem} value={search} onChange={handleSearch}></input>\n            <SearchList className={classes.searchItem} searchResult={searchResult} submitTicker={submitTicker} />\n        </form>\n\n    );\n}\n\nexport default SearchForm;\n","export const DEL_TICKER_WITH_SAGA = 'TICKERS::DEL_TICKER_WITH_SAGA';\r\n\r\nexport const delTickerWithSaga = (ticker, marketType) => {\r\n    return {\r\n        type: DEL_TICKER_WITH_SAGA,\r\n        ticker, marketType\r\n    };\r\n};","import React, { useEffect, useState } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttable: {\r\n\t\tmaxWidth: '100%'\r\n\t},\r\n\tticker: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n\t\tborder: '1px solid black',\r\n\t\tmargin: '10px',\r\n\t\toverflow: 'auto'\r\n\t},\r\n\ttickerName: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\twidth: '110px',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'space-around',\r\n\t\tpadding: '5px',\r\n\t\tflexShrink: '0'\r\n\t},\r\n\ttickerTable: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row'\r\n\t},\r\n\ttickerDate: {\r\n\t\twidth: '100px',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tborderLeft: '1px solid black',\r\n\t\t'&:last-child': {\r\n\t\t\tborderRight: '1px solid black'\r\n\t\t}\r\n\t},\r\n    tickerHeader: {\r\n        width:'200px',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tborderLeft: '1px solid black',\r\n\t\t'&:last-child': {\r\n\t\t\tborderRight: '1px solid black'\r\n\t\t}\r\n\t},\r\n\ttickerDateCell: {\r\n\t\tborderBottom: '1px solid black',\r\n\t\tmargin: '0',\r\n\t\tpadding: '5px',\r\n\t\t'&:last-child': {\r\n\t\t\tborderBottom: 'none'\r\n\t\t}\r\n\t},\r\n\tgreen: {\r\n\t\tbackgroundColor: '\t#66CC66',\r\n\t},\r\n\tred: {\r\n\t\tbackgroundColor: '#FF6666',\r\n\t},\r\n}));\r\n\r\n\r\n\r\nfunction Ticker(props) {\r\n\r\n\tconst [sumProfitUsdAbs, setSumProfitUsdAbs] = useState(0);\r\n\tconst [sumProfitUsdRel, setSumProfitUsdRel] = useState(1);\r\n\tconst [sumProfitRubAbs, setSumProfitRubAbs] = useState(0);\r\n\tconst [sumProfitRubRel, setSumProfitRubRel] = useState(1);\r\n\tconst [sumProfitEurAbs, setSumProfitEurAbs] = useState(0);\r\n\tconst [sumProfitEurRel, setSumProfitEurRel] = useState(1);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet sumProfitUsdAbsTemp = 0;\r\n\t\tlet sumProfitUsdRelTemp = 1;\r\n\t\tlet sumProfitRubAbsTemp = 0;\r\n\t\tlet sumProfitRubRelTemp = 1;\r\n\t\tlet sumProfitEurAbsTemp = 0;\r\n\t\tlet sumProfitEurRelTemp = 1;\r\n\t\tObject.values(props.ticker.data).forEach((date) => {\r\n\t\t\tsumProfitUsdAbsTemp += +date.profitUsdAbs;\r\n\t\t\tsumProfitUsdRelTemp *= 1 + date.profitUsdRel/100;\r\n\t\t\tsumProfitRubAbsTemp += +date.profitRubAbs;\r\n\t\t\tsumProfitRubRelTemp *= 1 + date.profitRubRel/100;\r\n\t\t\tsumProfitEurAbsTemp += +date.profitEurAbs;\r\n\t\t\tsumProfitEurRelTemp *= 1 + date.profitEurRel/100;\r\n\t\t});\r\n\t\tsumProfitUsdRelTemp = (sumProfitUsdRelTemp - 1) * 100;\r\n\t\tsumProfitRubRelTemp = (sumProfitRubRelTemp - 1) * 100;\r\n\t\tsumProfitEurRelTemp = (sumProfitEurRelTemp - 1) * 100;\r\n\r\n\t\tsetSumProfitUsdAbs(sumProfitUsdAbsTemp);\r\n\t\tsetSumProfitUsdRel(sumProfitUsdRelTemp);\r\n\t\tsetSumProfitRubAbs(sumProfitRubAbsTemp);\r\n\t\tsetSumProfitRubRel(sumProfitRubRelTemp);\r\n\t\tsetSumProfitEurAbs(sumProfitEurAbsTemp);\r\n\t\tsetSumProfitEurRel(sumProfitEurRelTemp);\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [props]);\r\n\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div className={classes.tickerTable}>\r\n            <div className={classes.tickerHeader}>\r\n                <p className={classes.tickerDateCell}>Дата</p>\r\n\t\t\t\t<p className={classes.tickerDateCell}>Количество</p>\r\n\t\t\t\t{(props.currency === 'usd' ? <p className={classes.tickerDateCell}>Стоимость в $</p> : '')}\r\n\t\t\t\t{(props.currency === 'usd' ? <p className={classes.tickerDateCell}>Общая стоимость в $</p> : '')}\r\n\t\t\t\t{(props.currency === 'rur' ? <p className={classes.tickerDateCell}>Стоимость в ₽</p> : '')}\r\n\t\t\t\t{(props.currency === 'rur' ? <p className={classes.tickerDateCell}>Общая стоимость в ₽</p> : '')}\r\n\t\t\t\t{(props.currency === 'eur' ? <p className={classes.tickerDateCell}>Стоимость в €</p> : '')}\r\n\t\t\t\t{(props.currency === 'eur' ? <p className={classes.tickerDateCell}>Общая стоимость в €</p> : '')}\r\n\t\t\t\t{(props.currency === 'usd' ? <p className={classes.tickerDateCell}>Доходность в $, абс</p> : '')}\r\n\t\t\t\t{(props.currency === 'usd' ? <p className={classes.tickerDateCell}>Доходность в $, %</p> : '')}\r\n\t\t\t\t{(props.currency === 'rur' ? <p className={classes.tickerDateCell}>Доходность в ₽, абс</p> : '')}\r\n\t\t\t\t{(props.currency === 'rur' ? <p className={classes.tickerDateCell}>Доходность в ₽, %</p> : '')}\r\n\t\t\t\t{(props.currency === 'eur' ? <p className={classes.tickerDateCell}>Доходность в €, абс</p> : '')}\r\n\t\t\t\t{(props.currency === 'eur' ? <p className={classes.tickerDateCell}>Доходность в €, %</p> : '')}\r\n            </div>\r\n\t\t\t{Object.values(props.ticker.data).map((date, i) =>\r\n\t\t\t\t<div key={date.ticker + Object.keys(props.ticker.data)[i]} className={classes.tickerDate}>\r\n\t\t\t\t\t<p className={classes.tickerDateCell}>{Object.keys(props.ticker.data)[i]}</p>\r\n\t\t\t\t\t<p className={classes.tickerDateCell}>{date.quantity}</p>\r\n\t\t\t\t\t{(props.currency === 'usd' ? <p className={classes.tickerDateCell}>{(+date.usdCost).toFixed(2)}</p> : '')}\r\n\t\t\t\t\t{(props.currency === 'usd' ? <p className={classes.tickerDateCell}>{(+date.usdTotal).toFixed(2)}</p> : '')}\r\n\t\t\t\t\t{(props.currency === 'rur' ? <p className={classes.tickerDateCell}>{(+date.rubCost).toFixed(2)}</p> : '')}\r\n\t\t\t\t\t{(props.currency === 'rur' ? <p className={classes.tickerDateCell}>{(+date.rubTotal).toFixed(2)}</p> : '')}\r\n\t\t\t\t\t{(props.currency === 'eur' ? <p className={classes.tickerDateCell}>{(+date.eurCost).toFixed(2)}</p> : '')}\r\n\t\t\t\t\t{(props.currency === 'eur' ? <p className={classes.tickerDateCell}>{(+date.eurTotal).toFixed(2)}</p> : '')}\r\n\t\t\t\t\t{(props.currency === 'usd' ? <p className={classes.tickerDateCell + ' ' + (date.profitUsdAbs >= 0 ? classes.green : classes.red)}>{(+date.profitUsdAbs).toFixed(2) + ' $'}</p> : '')}\r\n\t\t\t\t\t{(props.currency === 'usd' ? <p className={classes.tickerDateCell + ' ' + (date.profitUsdAbs >= 0 ? classes.green : classes.red)}>{(+date.profitUsdRel).toFixed(2) + ' %'}</p> : '')}\r\n\t\t\t\t\t{(props.currency === 'rur' ? <p className={classes.tickerDateCell + ' ' + (date.profitRubAbs >= 0 ? classes.green : classes.red)}>{(+date.profitRubAbs).toFixed(2) + ' ₽'}</p> : '')}\r\n\t\t\t\t\t{(props.currency === 'rur' ? <p className={classes.tickerDateCell + ' ' + (date.profitRubAbs >= 0 ? classes.green : classes.red)}>{(+date.profitRubRel).toFixed(2) + ' %'}</p> : '')}\r\n\t\t\t\t\t{(props.currency === 'eur' ? <p className={classes.tickerDateCell + ' ' + (date.profitEurAbs >= 0 ? classes.green : classes.red)}>{(+date.profitEurAbs).toFixed(2) + ' €'}</p> : '')}\r\n\t\t\t\t\t{(props.currency === 'eur' ? <p className={classes.tickerDateCell + ' ' + (date.profitEurAbs >= 0 ? classes.green : classes.red)}>{(+date.profitEurRel).toFixed(2) + ' %'}</p> : '')}\r\n\t\t\t\t</div>\r\n\t    \t)}\r\n\t\t\t<div className={classes.tickerDate}>\r\n                <p className={classes.tickerDateCell}>-</p>\r\n\t\t\t\t<p className={classes.tickerDateCell}>-</p>\r\n\t\t\t\t<p className={classes.tickerDateCell}>-</p>\r\n\t\t\t\t<p className={classes.tickerDateCell}>-</p>\r\n\t\t\t\t{(props.currency === 'usd' ? <p className={classes.tickerDateCell + ' ' + (sumProfitUsdAbs >= 0 ? classes.green : classes.red)}>{sumProfitUsdAbs.toFixed(2) + ' $'}</p> : '')}\r\n\t\t\t\t{(props.currency === 'usd' ? <p className={classes.tickerDateCell + ' ' + (sumProfitUsdAbs >= 0 ? classes.green : classes.red)}>{sumProfitUsdRel.toFixed(2) + ' %'}</p> : '')}\r\n\t\t\t\t{(props.currency === 'rur' ? <p className={classes.tickerDateCell + ' ' + (sumProfitRubAbs >= 0 ? classes.green : classes.red)}>{sumProfitRubAbs.toFixed(2) + ' ₽'}</p> : '')}\r\n\t\t\t\t{(props.currency === 'rur' ? <p className={classes.tickerDateCell + ' ' + (sumProfitRubAbs >= 0 ? classes.green : classes.red)}>{sumProfitRubRel.toFixed(2) + ' %'}</p> : '')}\r\n\t\t\t\t{(props.currency === 'eur' ? <p className={classes.tickerDateCell + ' ' + (sumProfitEurAbs >= 0 ? classes.green : classes.red)}>{sumProfitEurAbs.toFixed(2) + ' €'}</p> : '')}\r\n\t\t\t\t{(props.currency === 'eur' ? <p className={classes.tickerDateCell + ' ' + (sumProfitEurAbs >= 0 ? classes.green : classes.red)}>{sumProfitEurRel.toFixed(2) + ' %'}</p> : '')}\r\n            </div>\r\n    \t</div>\r\n\t);\r\n}\r\nconst TickerPure = React.memo(Ticker);\r\nexport default TickerPure;","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch } from 'react-redux';\nimport { delTickerWithSaga } from '../../store/actions/delTicker';\nimport Ticker from '../Ticker';\n\nconst useStyles = makeStyles((theme) => ({\n\ttable: {\n\t\tmaxWidth: '100%'\n\t},\n\tticker: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t\tborder: '1px solid black',\n\t\tmargin: '10px',\n\t\toverflow: 'auto'\n\t},\n\tdescription:{\n\t\tmargin: '5px'\n\t},\n\ttickerName: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\twidth: '110px',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'space-around',\n\t\tpadding: '5px',\n\t\tflexShrink: '0'\n\t},\n}));\n\nfunction Tickers(props) {\n\tconst dispatch = useDispatch();\n\n\tconst delTicker = (ticker, marketType) => {\n\t\tdispatch(delTickerWithSaga(ticker, marketType));\n\t};\n\n\tconst classes = useStyles();\n\n\tconst filteredTickers = Object.values(props.filteredTickers || {});\n\tconst filteredTickersNames = Object.keys(props.filteredTickers || {});\n\n\treturn (\n\t\t<div>\n\t\t\t<div className={classes.table}>\n\t\t\t\t{filteredTickers.map((ticker, i) =>\n\t\t\t\t\t(Object.keys(ticker.data).length !== 0)&&(<div key={filteredTickersNames[i]} className={classes.ticker}>\n\t\t\t\t\t\t<div className={classes.tickerName}>\n\t\t\t\t\t\t\t<p className={classes.description}>{filteredTickersNames[i]}</p>\n\t\t\t\t\t\t\t<p className={classes.description}>{ticker.data[Object.keys(ticker.data)[Object.keys(ticker.data).length - 1]].description}</p>\n\t\t\t\t\t\t\t<p className={classes.description}>{ticker.data[Object.keys(ticker.data)[Object.keys(ticker.data).length - 1]].currency}</p>\n\t\t\t\t\t\t\t<button onClick={() => delTicker(filteredTickersNames[i], props.type)}>del</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Ticker ticker={ticker}  currency={props.currency}/>\n\n\t\t\t\t\t</div>)\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nconst TickersPure = React.memo(Tickers);\nexport default TickersPure;","import React, { useEffect, useState } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttable: {\r\n\t\tmaxWidth: '100%'\r\n\t},\r\n\tticker: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n\t\tborder: '1px solid black',\r\n\t\tmargin: '10px',\r\n\t\toverflow: 'auto'\r\n\t},\r\n\ttickerName: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\twidth: '110px',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'space-around',\r\n\t\tpadding: '5px',\r\n\t\tflexShrink: '0'\r\n\t},\r\n\ttickerTable: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n        margin: '10px',\r\n\t},\r\n\ttickerDate: {\r\n\t\twidth: '100px',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tborderLeft: '1px solid black',\r\n\t\t'&:last-child': {\r\n\t\t\tborderRight: '1px solid black'\r\n\t\t}\r\n\t},\r\n    tickerHeader: {\r\n        width:'321px',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tborderLeft: '1px solid black',\r\n\t\t'&:last-child': {\r\n\t\t\tborderRight: '1px solid black'\r\n\t\t}\r\n\t},\r\n\ttickerDateCell: {\r\n\t\tborderBottom: '1px solid black',\r\n\t\tmargin: '0',\r\n\t\tpadding: '5px',\r\n\t\t'&:last-child': {\r\n\t\t\tborderBottom: 'none'\r\n\t\t}\r\n\t},\r\n\tgreen: {\r\n\t\tbackgroundColor: '\t#66CC66',\r\n\t},\r\n\tred: {\r\n\t\tbackgroundColor: '#FF6666',\r\n\t},\r\n}));\r\n\r\n\r\n\r\nfunction WeeklyResult(props) {\r\n\r\n\tconst classes = useStyles();\r\n\r\n    const [portfolioUsdTotal, setPortfolioUsdTotal] = useState(0);\r\n    const [sumProfitUsdAbs, setSumProfitUsdAbs] = useState(0);\r\n\tconst [sumProfitUsdRel, setSumProfitUsdRel] = useState(1);\r\n    const [portfolioRubTotal, setPortfolioRubTotal] = useState(0);\r\n\tconst [sumProfitRubAbs, setSumProfitRubAbs] = useState(0);\r\n\tconst [sumProfitRubRel, setSumProfitRubRel] = useState(1);\r\n    const [portfolioEurTotal, setPortfolioEurTotal] = useState(0);\r\n\tconst [sumProfitEurAbs, setSumProfitEurAbs] = useState(0);\r\n\tconst [sumProfitEurRel, setSumProfitEurRel] = useState(1);\r\n\r\n\tuseEffect(() => {\r\n        let portfolioUsdTotalTemp = 0;\r\n\t\tlet sumProfitUsdAbsTemp = 0;\r\n\t\tlet sumProfitUsdRelTemp = 1;\r\n        let portfolioRubTotalTemp = 0;\r\n\t\tlet sumProfitRubAbsTemp = 0;\r\n\t\tlet sumProfitRubRelTemp = 1;\r\n        let portfolioEurTotalTemp = 0;\r\n\t\tlet sumProfitEurAbsTemp = 0;\r\n\t\tlet sumProfitEurRelTemp = 1;\r\n\t\tObject.values(props.weeklyResult).forEach((date) => {\r\n            portfolioUsdTotalTemp = +date.portfolioUsdTotal;\r\n\t\t\tsumProfitUsdAbsTemp += +date.portfolioUsdProfitAbs;\r\n\t\t\tsumProfitUsdRelTemp *= 1 + date.portfolioUsdProfitRel/100;\r\n            portfolioRubTotalTemp = +date.portfolioRubTotal;\r\n\t\t\tsumProfitRubAbsTemp += +date.portfolioRubProfitAbs;\r\n\t\t\tsumProfitRubRelTemp *= 1 + date.portfolioRubProfitRel/100;\r\n            portfolioEurTotalTemp = +date.portfolioEurTotal;\r\n\t\t\tsumProfitEurAbsTemp += +date.portfolioEurProfitAbs;\r\n\t\t\tsumProfitEurRelTemp *= 1 + date.portfolioEurProfitRel/100;\r\n\t\t});\r\n\t\tsumProfitUsdRelTemp = (sumProfitUsdRelTemp - 1) * 100;\r\n\t\tsumProfitRubRelTemp = (sumProfitRubRelTemp - 1) * 100;\r\n\t\tsumProfitEurRelTemp = (sumProfitEurRelTemp - 1) * 100;\r\n\r\n        setPortfolioUsdTotal(portfolioUsdTotalTemp);\r\n\t\tsetSumProfitUsdAbs(sumProfitUsdAbsTemp);\r\n\t\tsetSumProfitUsdRel(sumProfitUsdRelTemp);\r\n        setPortfolioRubTotal(portfolioRubTotalTemp);\r\n\t\tsetSumProfitRubAbs(sumProfitRubAbsTemp);\r\n\t\tsetSumProfitRubRel(sumProfitRubRelTemp);\r\n        setPortfolioEurTotal(portfolioEurTotalTemp);\r\n\t\tsetSumProfitEurAbs(sumProfitEurAbsTemp);\r\n\t\tsetSumProfitEurRel(sumProfitEurRelTemp);\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [props]);\r\n\r\n\treturn (\r\n\t\t<div className={classes.tickerTable}>\r\n            <div className={classes.tickerHeader}>\r\n                <p className={classes.tickerDateCell}>Дата</p>\r\n\t\t\t\t{(props.currency === 'usd' ? <p className={classes.tickerDateCell}>Стоимость в $</p> : '')}\r\n\t\t\t\t{(props.currency === 'usd' ? <p className={classes.tickerDateCell}>Доходность абс в $ </p> : '')}\r\n                {(props.currency === 'usd' ? <p className={classes.tickerDateCell}>Доходность % в $ </p> : '')}\r\n\t\t\t\t{(props.currency === 'rur' ? <p className={classes.tickerDateCell}>Стоимость в ₽</p> : '')}\r\n\t\t\t\t{(props.currency === 'rur' ? <p className={classes.tickerDateCell}>Доходность абс в ₽</p> : '')}\r\n                {(props.currency === 'rur' ? <p className={classes.tickerDateCell}>Доходность % в ₽</p> : '')}\r\n\t\t\t\t{(props.currency === 'eur' ? <p className={classes.tickerDateCell}>Стоимость в €</p> : '')}\r\n\t\t\t\t{(props.currency === 'eur' ? <p className={classes.tickerDateCell}>Доходность абс в €</p> : '')}\r\n                {(props.currency === 'eur' ? <p className={classes.tickerDateCell}>Доходность % в €</p> : '')}\r\n            </div>\r\n\t\t\t{Object.values(props.weeklyResult).map((date, i) =>\r\n\t\t\t\t<div key={Object.keys(props.weeklyResult)[i]} className={classes.tickerDate}>\r\n\t\t\t\t\t<p className={classes.tickerDateCell}>{Object.keys(props.weeklyResult)[i]}</p>\r\n\t\t\t\t\t{(props.currency === 'usd' ? <p className={classes.tickerDateCell}>{date.portfolioUsdTotal.toFixed(2) + ' $'}</p> : '')}\r\n\t\t\t\t\t{(props.currency === 'usd' ? <p className={classes.tickerDateCell + ' ' + (date.portfolioUsdProfitAbs >= 0 ? classes.green : classes.red)}>{date.portfolioUsdProfitAbs.toFixed(2) + ' $'}</p> : '')}\r\n                    {(props.currency === 'usd' ? <p className={classes.tickerDateCell + ' ' + (date.portfolioUsdProfitAbs >= 0 ? classes.green : classes.red)}>{date.portfolioUsdProfitRel.toFixed(2) + ' %'}</p> : '')}\r\n\t\t\t\t\t{(props.currency === 'rur' ? <p className={classes.tickerDateCell}>{date.portfolioRubTotal.toFixed(2) + ' ₽'}</p> : '')}\r\n\t\t\t\t\t{(props.currency === 'rur' ? <p className={classes.tickerDateCell + ' ' + (date.portfolioRubProfitAbs >= 0 ? classes.green : classes.red)}>{date.portfolioRubProfitAbs.toFixed(2) + ' ₽'}</p> : '')}\r\n                    {(props.currency === 'rur' ? <p className={classes.tickerDateCell + ' ' + (date.portfolioRubProfitAbs >= 0 ? classes.green : classes.red)}>{date.portfolioRubProfitRel.toFixed(2) + ' %'}</p> : '')}\r\n\t\t\t\t\t{(props.currency === 'eur' ? <p className={classes.tickerDateCell}>{date.portfolioEurTotal.toFixed(2) + ' €'}</p> : '')}\r\n\t\t\t\t\t{(props.currency === 'eur' ? <p className={classes.tickerDateCell + ' ' + (date.portfolioEurProfitAbs >= 0 ? classes.green : classes.red)}>{date.portfolioEurProfitAbs.toFixed(2) + ' €'}</p> : '')}\r\n                    {(props.currency === 'eur' ? <p className={classes.tickerDateCell + ' ' + (date.portfolioEurProfitAbs >= 0 ? classes.green : classes.red)}>{date.portfolioEurProfitRel.toFixed(2) + ' %'}</p> : '')}\r\n\t\t\t\t</div>\r\n\t    \t)}\r\n            <div className={classes.tickerDate}>\r\n\t\t\t\t<p className={classes.tickerDateCell}>-</p>\r\n                {(props.currency === 'usd' ? <p className={classes.tickerDateCell}>{portfolioUsdTotal.toFixed(2) + ' $'}</p> : '')}\r\n\t\t\t\t{(props.currency === 'usd' ? <p className={classes.tickerDateCell + ' ' + (sumProfitUsdAbs >= 0 ? classes.green : classes.red)}>{sumProfitUsdAbs.toFixed(2) + ' $'}</p> : '')}\r\n\t\t\t\t{(props.currency === 'usd' ? <p className={classes.tickerDateCell + ' ' + (sumProfitUsdAbs >= 0 ? classes.green : classes.red)}>{sumProfitUsdRel.toFixed(2) + ' %'}</p> : '')}\r\n                {(props.currency === 'rur' ? <p className={classes.tickerDateCell}>{portfolioRubTotal.toFixed(2) + ' ₽'}</p> : '')}\r\n\t\t\t\t{(props.currency === 'rur' ? <p className={classes.tickerDateCell + ' ' + (sumProfitRubAbs >= 0 ? classes.green : classes.red)}>{sumProfitRubAbs.toFixed(2) + ' ₽'}</p> : '')}\r\n\t\t\t\t{(props.currency === 'rur' ? <p className={classes.tickerDateCell + ' ' + (sumProfitRubAbs >= 0 ? classes.green : classes.red)}>{sumProfitRubRel.toFixed(2) + ' %'}</p> : '')}\r\n                {(props.currency === 'eur' ? <p className={classes.tickerDateCell}>{portfolioEurTotal.toFixed(2) + ' €'}</p> : '')}\r\n\t\t\t\t{(props.currency === 'eur' ? <p className={classes.tickerDateCell + ' ' + (sumProfitEurAbs >= 0 ? classes.green : classes.red)}>{sumProfitEurAbs.toFixed(2) + ' €'}</p> : '')}\r\n\t\t\t\t{(props.currency === 'eur' ? <p className={classes.tickerDateCell + ' ' + (sumProfitEurAbs >= 0 ? classes.green : classes.red)}>{sumProfitEurRel.toFixed(2) + ' %'}</p> : '')}\r\n            </div>\r\n    \t</div>\r\n\t);\r\n}\r\nconst WeeklyResultPure = React.memo(WeeklyResult);\r\nexport default WeeklyResultPure;","export const INIT_USER_DATA = 'USER::INIT_USER_DATA';\n\nexport const initUserData = (userData) => {\n    return {\n        type: INIT_USER_DATA,\n        userData\n    };\n};\n\nexport const INIT_INIT_USER_DATA_WITH_SAGA = 'USER::INIT_USER_DATA_WITH_SAGA';\n\nexport const initUserDataWithSaga = () => {\n    return {\n        type: INIT_INIT_USER_DATA_WITH_SAGA,\n    };\n};","export const URL_NEWS = \"https://api.currentsapi.services/v1/latest-news?language=ru&apiKey=6qmiCnF5XcC6Zt8s4fj5gRg9kBKB58XFqw8Rw6QqsYOtD1M8\";\r\nexport const URL_WEATHER = 'https://api.openweathermap.org/data/2.5/weather?id=498817&appid=f0694cc740867c7440b3be0552c0bf8f';\r\n\r\nexport const HOMEPAGE = \"\";\r\n\r\nexport const MKRKETSTACK_APIKEY ='880bb985b6ee8c60422ef715002a485b';\r\n\r\nexport const EMPTY_OBJECT = {};","import { EMPTY_OBJECT } from \"../../utils/constants\"\r\n\r\n\r\nexport function getStocks(state) { if (state.userData.stock) { return state.userData.tickers.stock} else { return EMPTY_OBJECT } };\r\nexport function getPif(state) { if (state.userData.pif) {return state.userData.tickers.pif}  else {return EMPTY_OBJECT} };\r\nexport function getEtf(state) { if (state.userData.etf) {return state.userData.tickers.etf}  else {return EMPTY_OBJECT} };\r\nexport function getBonds(state) { if (state.userData.bonds) {return state.userData.tickers.bonds} else {return EMPTY_OBJECT} };\r\nexport function getForex(state) { if (state.userData.forex) {return state.userData.tickers.forex} else { return EMPTY_OBJECT} };\r\nexport function getAlltickers(state) { if (state.userData.tickers) {return state.userData.tickers} else { return EMPTY_OBJECT} };\r\n\r\nexport function getFilteredStocks(state) { if (state.filteredTickers.stock) { return state.filteredTickers.stock} else { return EMPTY_OBJECT } };\r\nexport function getFilteredPif(state) { if (state.filteredTickers.pif) {return state.filteredTickers.pif}  else {return EMPTY_OBJECT} };\r\nexport function getFilteredEtf(state) { if (state.filteredTickers.etf) {return state.filteredTickers.etf}  else {return EMPTY_OBJECT} };\r\nexport function getFilteredBonds(state) { if (state.filteredTickers.bonds) {return state.filteredTickers.bonds} else {return EMPTY_OBJECT} };\r\nexport function getFilteredForex(state) { if (state.filteredTickers.forex) {return state.filteredTickers.forex} else { return EMPTY_OBJECT} };\r\n\r\nexport function getDates(state) { if (state.userData.dates) {return state.userData.dates} else { return EMPTY_OBJECT} };","export const AUTOCOMPLETE_TICKER_WITH_SAGA = 'TICKERS::AUTOCOMPLETE_TICKER_WITH_SAGA';\r\n\r\nexport const autoCompleteTickerWithSaga = (ticker, date, quantity, currency, prevData ) => {\r\n    return {\r\n        type: AUTOCOMPLETE_TICKER_WITH_SAGA,\r\n        ticker, date, quantity, currency, prevData\r\n    };\r\n};","export const CALCULATE_YEAR_PROFIT = 'PROFILE::CALCULATE_YEAR_PROFIT';\r\n\r\nexport const calculateYearProfit = ( yearProfit ) => {\r\n    return {\r\n        type: CALCULATE_YEAR_PROFIT,\r\n        yearProfit\r\n    };\r\n};\r\n\r\nexport const CALCULATE_YEAR_PROFIT_WITH_SAGA = 'PROFILE::CALCULATE_YEAR_PROFIT_WITH_SAGA';\r\n\r\nexport const calculateYearProfitWithSaga = (allTickers ) => {\r\n    return {\r\n        type: CALCULATE_YEAR_PROFIT_WITH_SAGA,\r\n        allTickers  \r\n    };\r\n};","export const CALCULATE_WEEKLY_PORTFOLIO_PROFIT_AND_COST = 'PROFILE::CALCULATE_WEEKLY_PORTFOLIO_PROFIT_AND_COST';\r\n\r\nexport const calculateWeeklyPortfolioProfitAndCost = ( weeklyPortfolioProfitAndCost ) => {\r\n    return {\r\n        type: CALCULATE_WEEKLY_PORTFOLIO_PROFIT_AND_COST,\r\n        weeklyPortfolioProfitAndCost\r\n    };\r\n};\r\n\r\nexport const CALCULATE_WEEKLY_PORTFOLIO_PROFIT_AND_COST_WITH_SAGA = 'PROFILE::CALCULATE_WEEKLY_PORTFOLIO_PROFIT_AND_COST_WITH_SAGA';\r\n\r\nexport const calculateWeeklyPortfolioProfitAndCostWithSaga = (allTickers, dates ) => {\r\n    return {\r\n        type: CALCULATE_WEEKLY_PORTFOLIO_PROFIT_AND_COST_WITH_SAGA,\r\n        allTickers,\r\n        dates  \r\n    };\r\n};","import { EMPTY_OBJECT } from \"../../utils/constants\"\r\n\r\nexport function getPortfolio(state) { if (state.userData.portfolio) { return state.userData.portfolio} else { return EMPTY_OBJECT } };\r\n\r\nexport function getMyCurrentStock(state) { if (state.currentUserData.stock) { return state.currentUserData.stock} else { return EMPTY_OBJECT } };\r\nexport function getMyCurrentPif(state) { if (state.currentUserData.pif) { return state.currentUserData.pif} else { return EMPTY_OBJECT } };\r\nexport function getMyCurrentEtf(state) { if (state.currentUserData.etf) { return state.currentUserData.etf} else { return EMPTY_OBJECT } };\r\nexport function getMyCurrentBonds(state) { if (state.currentUserData.bonds) { return state.currentUserData.bonds} else { return EMPTY_OBJECT } };\r\nexport function getMyCurrentForex(state) { if (state.currentUserData.forex) { return state.currentUserData.forex} else { return EMPTY_OBJECT } };\r\n\r\nexport function getMyProfileCost(state) { if (state.currentUserData.portfolioCost) { return state.currentUserData.portfolioCost} else { return EMPTY_OBJECT } };\r\n\r\nexport function getMyYearProfit(state) { if (state.currentUserData.yearProfit) { return state.currentUserData.yearProfit} else { return EMPTY_OBJECT } }\r\n\r\nexport function getWeeklyPortfolioProfitAndCost(state) { if (state.currentUserData.weeklyPortfolioProfitAndCost) { return state.currentUserData.weeklyPortfolioProfitAndCost} else { return EMPTY_OBJECT } }","import React, { useEffect, useState } from 'react';\nimport SearchForm from '../SearchForm';\n\nimport Tickers from '../Tickers';\nimport WeeklyResult from '../WeeklyResult';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { initUserDataWithSaga } from '../../store/actions/initUserData';\nimport { getAlltickers, getDates, getFilteredBonds, getFilteredEtf, getFilteredForex, getFilteredPif, getFilteredStocks } from '../../store/selectors/tickersSelectors';\nimport { makeStyles } from '@material-ui/core';\nimport { filterData, filterWeeklyResult } from '../../Functions/functions';\nimport { autoCompleteTickerWithSaga } from '../../store/actions/autoComplete';\nimport { calculateYearProfitWithSaga } from '../../store/actions/calculateYearProfit';\nimport { calculateWeeklyPortfolioProfitAndCostWithSaga } from '../../store/actions/calculateWeeklyPortfolioProfitAndCost';\nimport { getWeeklyPortfolioProfitAndCost } from '../../store/selectors/profileSelectors';\n\nconst useStyles = makeStyles((theme) => ({\n    App: {\n        margin: '0 auto'\n    },\n    mainContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: '#EEE'\n    },\n}));\n\nfunction Main() {\n\n    const dispatch = useDispatch();\n\n    const filteredForex = useSelector(getFilteredForex);\n    const filteredStocks = useSelector(getFilteredStocks);\n    const filteredPif = useSelector(getFilteredPif);\n    const filteredEtf = useSelector(getFilteredEtf);\n    const filteredBonds = useSelector(getFilteredBonds);\n    const allTickers = useSelector(getAlltickers);\n    const dates = useSelector(getDates);\n    const weeklyResults = useSelector(getWeeklyPortfolioProfitAndCost);\n\n    const [currency, setCurrency] = useState('rur');\n    const [date, setDate] = useState((new Date()).toISOString().slice(0, 7));\n    const [filteredWeeklyResult, setFilteredWeeklyResult] = useState({});\n\n    const handleDate = (event) => {\n        setDate(event.target.value);\n    };\n\n    const handleCurrency = (event) => {\n        setCurrency(event.target.value);\n    };\n\n    useEffect(() => {\n        dispatch(initUserDataWithSaga());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n\n        Object.values(allTickers).forEach((type) => {\n            Object.values(type).forEach((ticker, i) => {\n                const prevData = {\n                    ticker: Object.keys(type)[i],\n                    quantity: Object.values(ticker.data)[Object.keys(ticker.data).length - 1].quantity,\n                    usdCost: Object.values(ticker.data)[Object.keys(ticker.data).length - 1].usdCost,\n                    usdTotal:Object.values(ticker.data)[Object.keys(ticker.data).length - 1].usdTotal,\n                    rubCost: Object.values(ticker.data)[Object.keys(ticker.data).length - 1].rubCost,\n                    rubTotal:Object.values(ticker.data)[Object.keys(ticker.data).length - 1].rubTotal,\n                    eurCost: Object.values(ticker.data)[Object.keys(ticker.data).length - 1].eurCost,\n                    eurTotal:Object.values(ticker.data)[Object.keys(ticker.data).length - 1].eurTotal,\n                };\n                dispatch(\n                    autoCompleteTickerWithSaga(\n                        Object.keys(type)[i], \n                        Object.keys(ticker.data)[Object.keys(ticker.data).length - 1], \n                        Object.values(ticker.data)[Object.keys(ticker.data).length - 1].quantity, \n                        Object.values(ticker.data)[Object.keys(ticker.data).length - 1].currency,\n                        prevData\n                    )\n                );\n            });\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        dispatch(\n            filterData(\n                allTickers, \n                new Date(date).getFullYear(), \n                new Date(date).getMonth()\n            )\n        );\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [date]);\n\n    useEffect(() => {\n        setFilteredWeeklyResult(\n            filterWeeklyResult(\n                weeklyResults, \n                new Date(date).getFullYear(), \n                new Date(date).getMonth()\n            )\n        );\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [date]);\n\n    useEffect(() => {\n        dispatch(calculateYearProfitWithSaga(allTickers));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [dispatch]);\n\n    useEffect(() => {\n        dispatch(calculateWeeklyPortfolioProfitAndCostWithSaga(allTickers, dates));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [dates]);\n\n    \n    const classes = useStyles();\n\n    return (\n        <div className={classes.App + ' ' + classes.mainContainer}>\n            <select required onChange={handleCurrency} className={classes.searchItem}>\n                <option value='rur'>rur</option>\n                <option value='usd'>usd</option>\n                <option value='eur'>eur</option>\n            </select>\n            <input type='month' onChange={handleDate} value={date}/>\n            <SearchForm />\n            <div>Валюта</div>\n            <Tickers  filteredTickers={filteredForex} type ='forex' currency={currency} date={date}/>\n            <div>Акции</div>\n            <Tickers  filteredTickers={filteredStocks} type ='stock' currency={currency} date={date}/>\n            <div>Фонды</div>\n            <Tickers filteredTickers={filteredPif} type ='pif' currency={currency} date={date}/>\n            <Tickers filteredTickers={filteredEtf} type ='etf' currency={currency} date={date}/>\n            <div>Облигации</div>\n            <Tickers filteredTickers={filteredBonds} type ='bonds' currency={currency} date={date}/>\n            <div>Сумма</div>\n            <WeeklyResult weeklyResult={filteredWeeklyResult} currency={currency} date={date}/>\n        </div>\n    );\n}\nconst MainPure = React.memo(Main);\nexport default MainPure;","import React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport {HOMEPAGE} from '../utils/constants';\n\nexport default function PrivateRoute({ authenticated, children }) {\n  return authenticated ? (\n    children\n  ) : (\n    <Navigate to={{ pathname: `${HOMEPAGE}/login` }} />\n  );\n};","import React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { HOMEPAGE } from '../utils/constants';\n\nexport default function PublicRoute({ authenticated, children }) {\n  return !authenticated ?  children : <Navigate to={`${HOMEPAGE}/`} />;\n};","import React, { useState, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from '../../services/firebase';\n\nfunction SignUp() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handlePassChange = useCallback((e) => {\n    setPassword(e.target.value);\n  },[]);\n\n  const handleEmailChange = useCallback((e) => {\n    setEmail(e.target.value);\n  },[]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <p>Fill in the form below to register new account.</p>\n        <div>\n          <input\n            placeholder=\"Email\"\n            name=\"email\"\n            type=\"email\"\n            onChange={handleEmailChange}\n            value={email}\n          />\n        </div>\n        <div>\n          <input\n            placeholder=\"Password\"\n            name=\"password\"\n            onChange={handlePassChange}\n            value={password}\n            type=\"password\"\n          />\n        </div>\n        <div>\n          {error && <p>{error}</p>}\n          <button type=\"submit\">Login</button>\n        </div>\n        <hr />\n        <p>\n          Already have an account? <Link to=\"/gbCourse5Hw/login\">Sign in</Link>\n        </p>\n      </form>\n    </div>\n  );\n};\nexport default SignUp;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from '../../services/firebase';\n\nfunction LogIn() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handlePassChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <p>Fill in the form below to login to your account.</p>\n        <div>\n          <input\n            placeholder=\"Email\"\n            name=\"email\"\n            type=\"email\"\n            onChange={handleEmailChange}\n            value={email}\n          />\n        </div>\n        <div>\n          <input\n            placeholder=\"Password\"\n            name=\"password\"\n            onChange={handlePassChange}\n            value={password}\n            type=\"password\"\n          />\n        </div>\n        <div>\n          {error && <p>{error}</p>}\n          <button type=\"submit\">Login</button>\n        </div>\n        <hr />\n        <p>\n          Don't have an account? <Link to=\"/gbCourse5Hw/signup\">Sign up</Link>\n        </p>\n      </form>\n    </div>\n  );\n};\nexport default LogIn;","export const SET_TICKERS_INFO = 'PROFILE::SET_TICKERS_INFO';\r\n\r\nexport const setTickersInfo = ( tickerTable, tickerType) => {\r\n    return {\r\n        type: SET_TICKERS_INFO,\r\n        tickerTable,\r\n        tickerType\r\n    };\r\n};\r\n\r\nexport const SET_TICKERS_INFO_WITH_SAGA = 'PROFILE::SET_TICKERS_INFO_WITH_SAGA';\r\n\r\nexport const setTickersInfoWithSaga = (tickers, tickerType ) => {\r\n    return {\r\n        type: SET_TICKERS_INFO_WITH_SAGA,\r\n        tickers,\r\n        tickerType   \r\n    };\r\n};","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch } from 'react-redux';\r\nimport { delTickerWithSaga } from '../../store/actions/delTicker';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttable: {\r\n\t\tmaxWidth: '400px'\r\n\t},\r\n\tticker: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n\t\tborder: '1px solid black',\r\n\t\tmargin: '10px',\r\n\t},\r\n\ttickerName: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\twidth: '110px',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'space-around',\r\n\t\tpadding: '5px',\r\n\t\tflexShrink: '0'\r\n\t},\r\n\ttickerTable: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row'\r\n\t},\r\n\ttickerData: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tborderLeft: '1px solid black',\r\n        flexGrow: '1'\r\n\t},\r\n\ttickerDataCell: {\r\n\t\tborderBottom: '1px solid black',\r\n\t\tmargin: '0',\r\n\t\tpadding: '5px',\r\n\t\t'&:last-child': {\r\n\t\t\tborderBottom: 'none'\r\n\t\t}\r\n\t},\r\n    tickerHeaders: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tborderLeft: '1px solid black',\r\n        flexGrow: '0'\r\n\t},\r\n\ttickerHeader: {\r\n\t\tborderBottom: '1px solid black',\r\n\t\tmargin: '0',\r\n\t\tpadding: '5px',\r\n\t\t'&:last-child': {\r\n\t\t\tborderBottom: 'none'\r\n\t\t}\r\n\t},\r\n}));\r\n\r\nfunction MyTickers(props) {\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst delTicker = (ticker, marketType) => {\r\n\t\tdispatch(delTickerWithSaga(ticker, marketType));\r\n\t};\r\n\r\n\tconst classes = useStyles();\r\n\r\n\tconst tickers = Object.keys(props.tickers || {});\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={classes.table}>\r\n\t\t\t\t{tickers.map((ticker) =>\r\n\t\t\t\t\t<div key={ticker} className={classes.ticker}>\r\n\t\t\t\t\t\t<div className={classes.tickerName}>\r\n\t\t\t\t\t\t\t<p>{ticker}</p>\r\n                            <p>{props.tickers[ticker].description}</p>\r\n\t\t\t\t\t\t\t<button onClick={() => delTicker(ticker, props.type)}>del</button>\r\n\t\t\t\t\t\t</div>\r\n                        <div className={classes.tickerHeaders}>\r\n\t\t\t\t\t\t\t<p className={classes.tickerHeader}>Количество</p>\r\n\t\t\t\t\t\t\t<p className={classes.tickerHeader}>Цена,  {(((props.currency === 'rur') && <span>&#8381;</span>) || ((props.currency === 'usd') && <span>$</span>) || ((props.currency === 'eur') && <span>&euro;</span>))}</p>\r\n\t\t\t\t\t\t\t<p className={classes.tickerHeader}>Сумма,  {(((props.currency === 'rur') && <span>&#8381;</span>) || ((props.currency === 'usd') && <span>$</span>) || ((props.currency === 'eur') && <span>&euro;</span>))}</p>\r\n\t\t\t\t\t\t\t<p className={classes.tickerHeader}>Годовая доходность, {(((props.currency === 'rur') && <span>&#8381;</span>) || ((props.currency === 'usd') && <span>$</span>) || ((props.currency === 'eur') && <span>&euro;</span>))}</p>\r\n\t\t\t\t\t\t\t<p className={classes.tickerHeader}>Годовая доходность,  %</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={classes.tickerData}>\r\n\t\t\t\t\t\t\t<p className={classes.tickerDataCell}>{props.tickers[ticker].quantity}</p>\r\n\t\t\t\t\t\t\t<p className={classes.tickerDataCell}>{(((props.currency === 'rur') && <span>{(+props.tickers[ticker].RUBCost).toFixed(2)}</span>) || ((props.currency === 'usd') && <span>{(+props.tickers[ticker].USDCost).toFixed(2)}</span>) || ((props.currency === 'eur') && <span>{(+props.tickers[ticker].EURCost).toFixed(2)}</span>))}</p>\r\n\t\t\t\t\t\t\t<p className={classes.tickerDataCell}>{(((props.currency === 'rur') && <span>{(+props.tickers[ticker].RUBTotal).toFixed(2)}</span>) || ((props.currency === 'usd') && <span>{(+props.tickers[ticker].USDTotal).toFixed(2)}</span>) || ((props.currency === 'eur') && <span>{(+props.tickers[ticker].EURTotal).toFixed(2)}</span>))}</p>\r\n\t\t\t\t\t\t\t<p className={classes.tickerDataCell}>{(((props.currency === 'rur') && <span>{props.myProfit && props.myProfit[ticker] && (+props.myProfit[ticker].sumProfitRubAbs).toFixed(2)}</span>) || ((props.currency === 'usd') && <span>{props.myProfit && props.myProfit[ticker] && (+props.myProfit[ticker].sumProfitUsdAbs).toFixed(2)}</span>) || ((props.currency === 'eur') && <span>{props.myProfit && props.myProfit[ticker] && (+props.myProfit[ticker].sumProfitEurAbs).toFixed(2)}</span>))}</p>\r\n\t\t\t\t\t\t\t<p className={classes.tickerDataCell}>{(((props.currency === 'rur') && <span>{props.myProfit && props.myProfit[ticker] && (+props.myProfit[ticker].sumProfitRubRel).toFixed(2)}</span>) || ((props.currency === 'usd') && <span>{props.myProfit && props.myProfit[ticker] && (+props.myProfit[ticker].sumProfitUsdRel).toFixed(2)}</span>) || ((props.currency === 'eur') && <span>{props.myProfit && props.myProfit[ticker] && (+props.myProfit[ticker].sumProfitEurRel).toFixed(2)}</span>))}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nconst MyTickersPure = React.memo(MyTickers);\r\nexport default  MyTickersPure;","export const CALCULATE_PORTFOLIO_COST = 'PROFILE::CALCULATE_PORTFOLIO_COST';\r\n\r\nexport const calculatePortfolioCost = ( portfolioCost ) => {\r\n    return {\r\n        type: CALCULATE_PORTFOLIO_COST,\r\n        portfolioCost\r\n    };\r\n};\r\n\r\nexport const CALCULATE_PORTFOLIO_COST_WITH_SAGA = 'PROFILE::CALCULATE_PORTFOLIO_COST_WITH_SAGA';\r\n\r\nexport const calculatePortfolioCostWithSaga = (stock, pif, etf, bonds, forex ) => {\r\n    return {\r\n        type: CALCULATE_PORTFOLIO_COST_WITH_SAGA,\r\n        stock,\r\n        pif,\r\n        etf,\r\n        bonds,\r\n        forex   \r\n    };\r\n};","import React, { useEffect, useState } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport {  getMyCurrentBonds, getMyCurrentEtf, getMyCurrentForex, getMyCurrentPif, getMyCurrentStock, getMyProfileCost, getMyYearProfit, getPortfolio, getWeeklyPortfolioProfitAndCost } from '../../store/selectors/profileSelectors';\r\nimport { auth } from '../../services/firebase';\r\nimport { setTickersInfoWithSaga } from '../../store/actions/setTickersInfo';\r\nimport MyTickers from '../MyTickers';\r\nimport { calculatePortfolioCostWithSaga } from '../../store/actions/calculatePortfolioCost';\r\nimport { calculateYearPortfolioProfit } from '../../Functions/functions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    App: {\r\n        margin: '0 auto'\r\n    },\r\n    mainContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        backgroundColor: '#EEE'\r\n    },\r\n}));\r\n\r\nfunction Profile() {\r\n    const [currency, setCurrency] = useState('rur');\r\n    const [yearPortfolioProfit, setYearPortfolioProfit] = useState({});\r\n    const portfolio = useSelector(getPortfolio);\r\n    const { stock, bonds, forex, pif, etf } = portfolio;\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleCurrency = (event) => {\r\n        setCurrency(event.target.value);\r\n    };\r\n\r\n    const myCurrentStock = useSelector(getMyCurrentStock);\r\n    const myCurrentPif = useSelector(getMyCurrentPif);\r\n    const myCurrentEtf = useSelector(getMyCurrentEtf);\r\n    const myCurrentBonds = useSelector(getMyCurrentBonds);\r\n    const myCurrentForex = useSelector(getMyCurrentForex);\r\n    const myPortfolioCost = useSelector(getMyProfileCost);\r\n    const weeklyResults = useSelector(getWeeklyPortfolioProfitAndCost);\r\n\r\n    const myYearProfit = useSelector(getMyYearProfit);\r\n\r\n    useEffect(() => {\r\n        dispatch(setTickersInfoWithSaga(stock, 'stock'));\r\n        dispatch(setTickersInfoWithSaga(pif, 'pif'));\r\n        dispatch(setTickersInfoWithSaga(etf, 'etf'));\r\n        dispatch(setTickersInfoWithSaga(bonds, 'bonds'));\r\n        dispatch(setTickersInfoWithSaga(forex, 'forex'));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        dispatch(calculatePortfolioCostWithSaga(myCurrentStock, myCurrentPif, myCurrentEtf, myCurrentBonds, myCurrentForex));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [myCurrentStock, myCurrentPif, myCurrentEtf, myCurrentBonds, myCurrentForex]);\r\n\r\n    useEffect(() => {\r\n        setYearPortfolioProfit(calculateYearPortfolioProfit(weeklyResults, 2021));\r\n    }, [weeklyResults]);\r\n\r\n    return (\r\n        <div>\r\n            <select required onChange={handleCurrency} className={classes.searchItem}>\r\n                <option value='rur'>rur</option>\r\n                <option value='usd'>usd</option>\r\n                <option value='eur'>eur</option>\r\n            </select>\r\n            <div>Валюта</div>\r\n            <MyTickers tickers={myCurrentForex} myProfit={myYearProfit.forex} type='forex' currency={currency}/>\r\n            <div>Акции</div>\r\n            <MyTickers tickers={myCurrentStock} myProfit={myYearProfit.stock} type='stock' currency={currency}/>\r\n            <div>Фонды</div>\r\n            <MyTickers tickers={myCurrentPif} myProfit={myYearProfit.pif} type='pif' currency={currency}/>\r\n            <MyTickers tickers={myCurrentEtf} myProfit={myYearProfit.etf} type='etf' currency={currency}/>\r\n            <div>Облигации</div>\r\n            <MyTickers tickers={myCurrentBonds} myProfit={myYearProfit.bonds} type='bonds' currency={currency}/>\r\n            <h1>{auth.currentUser ? auth.currentUser.email : ''}</h1>\r\n            <p>Стоимость портфеля, &#8381; <b>{myPortfolioCost ? (+myPortfolioCost.RUBGrandTotal).toFixed(2) : ''}</b></p>\r\n            <p>Доходность абс, &#8381; <b>{yearPortfolioProfit ? (+yearPortfolioProfit.yearProfitRubAbs).toFixed(2) : ''}</b></p>\r\n            <p>Доходность %, &#8381; <b>{yearPortfolioProfit ? (+yearPortfolioProfit.yearProfitRubRel).toFixed(2) : ''}</b></p>\r\n            <p>Стоимость портфеля, $ <b>{myPortfolioCost ? (+myPortfolioCost.USDGrandTotal).toFixed(2) : ''}</b></p>\r\n            <p>Доходность абс, $; <b>{yearPortfolioProfit ? (+yearPortfolioProfit.yearProfitUsdAbs).toFixed(2) : ''}</b></p>\r\n            <p>Доходность %, $; <b>{yearPortfolioProfit ? (+yearPortfolioProfit.yearProfitUsdRel).toFixed(2) : ''}</b></p>\r\n            <p>Стоимость портфеля, &euro; <b>{myPortfolioCost ? (+myPortfolioCost.EURGrandTotal).toFixed(2) : ''}</b></p>\r\n            <p>Доходность абс, &euro; <b>{yearPortfolioProfit ? (+yearPortfolioProfit.yearProfitEurAbs).toFixed(2) : ''}</b></p>\r\n            <p>Доходность %, &euro; <b>{yearPortfolioProfit ? (+yearPortfolioProfit.yearProfitEurRel).toFixed(2) : ''}</b></p>\r\n        </div>\r\n    );\r\n}\r\nconst ProfilePure = React.memo(Profile);\r\nexport default ProfilePure;","import React, { useCallback, useEffect, useState } from 'react';\nimport { HashRouter as MyRouter, Link, Route, Routes } from 'react-router-dom';\nimport Main from '../Main';\nimport PrivateRoute from '../../hocs/PrivateRoute';\nimport PublicRoute from '../../hocs/PublicRoute';\nimport { auth } from '../../services/firebase';\nimport { HOMEPAGE } from '../../utils/constants';\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\nimport SignUp from '../SignUp';\nimport LogIn from '../LogIn';\nimport Profile from '../Profile';\n\nfunction Router() {\n    const [authed, setAuthed] = useState(false);\n\n    useEffect(() => {\n\n        const unsubscribe = onAuthStateChanged(auth, (user) => {\n            if (user) {\n                setAuthed(true);\n            } else {\n                setAuthed(false);\n            }\n        });\n        return unsubscribe;\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const signOutUser = useCallback(() => {\n\t\tsignOut(auth).then(() => {\n\t\t}).catch((error) => {\n\t\t});\n\t},[]);\n\n    return (\n        <MyRouter>\n            <header>\n                <Link to={`${HOMEPAGE}/`}>Main</Link>\n                <Link to={`${HOMEPAGE}/profile`}>Profile</Link>\n                <Link to={`${HOMEPAGE}/signup`}>Registration</Link>\n                <Link to={`${HOMEPAGE}/login`}>Login</Link>\n                <button onClick={signOutUser}>Sign Out</button>\n            </header>\n            <Routes>\n                <Route authenticated={authed} exact path={`${HOMEPAGE}/`}\n                    element = {\n                        <PrivateRoute authenticated={authed}>\n                            <Main />\n                        </PrivateRoute>\n                    }\n                />\n                \n                <Route authenticated={authed} exact path={`${HOMEPAGE}/profile`}\n                    element = {\n                        <PrivateRoute authenticated={authed}>\n                            <Profile />\n                        </PrivateRoute>\n                    }\n                />\n                \n                <Route authenticated={authed} path={`${HOMEPAGE}/signup`}\n                    element = {\n                        <PublicRoute authenticated={authed}>\n                            <SignUp />\n                        </PublicRoute>\n                    }\n                />\n                    \n                <Route authenticated={authed} path={`${HOMEPAGE}/login`}\n                    element = {\n                        <PublicRoute authenticated={authed}>\n                            <LogIn />\n                        </PublicRoute>\n                    }\n                />\n                <Route element={<h4>404</h4>}/>\n                    \n                \n            </Routes>\n        </MyRouter>\n    );\n}\n\nexport default Router;","const initialState = {\r\n\tuserData: {\r\n\r\n\t},\r\n\tcurrentUserData: {\r\n\t\t\r\n\t},\r\n\tfilteredTickers: {\r\n\r\n\t},\r\n};\r\n\r\nexport default initialState;","import { calculatePortfolio, getWekklyPortfolioProfitAndCost, getYearProfit } from '../../Functions/functions';\r\nimport { call, put } from '@redux-saga/core/effects';\r\n\r\nimport { calculatePortfolioCost } from '../actions/calculatePortfolioCost';\r\nimport { calculateYearProfit } from '../actions/calculateYearProfit';\r\nimport { calculateWeeklyPortfolioProfitAndCost } from '../actions/calculateWeeklyPortfolioProfitAndCost';\r\n\r\nexport const onCalculatePortfolioCostWithSaga = function* (action){\r\n    try {\r\n        const portfolioCost = yield call(calculatePortfolio, action.stock, action.pif, action.etf, action.bonds, action.forex);\r\n        yield put(calculatePortfolioCost(portfolioCost));\r\n    } catch (err) {\r\n        console.log(err);\r\n    };\r\n};\r\n\r\nexport const onCalculateYearProfitWithSaga = function* (action){\r\n    try {\r\n        const yearProfit = yield call(getYearProfit, action.allTickers);\r\n        yield put(calculateYearProfit(yearProfit));\r\n    } catch (err) {\r\n        console.log(err);\r\n    };\r\n};\r\n\r\nexport const onCalculateWeeklyPortfolioProfitAndCostWithSaga = function* (action){\r\n    try {\r\n        const wekklyPortfolioProfitAndCost = yield call(getWekklyPortfolioProfitAndCost, action.allTickers, action.dates);\r\n        yield put(calculateWeeklyPortfolioProfitAndCost(wekklyPortfolioProfitAndCost));\r\n    } catch (err) {\r\n        console.log(err);\r\n    };\r\n};","import { auth, db } from '../../services/firebase';\nimport { ref, set, remove } from '@firebase/database';\nimport { addTicker, getTickerInfo } from '../../Functions/functions';\nimport { call, put } from '@redux-saga/core/effects';\nimport { setTickersInfo } from '../actions/setTickersInfo';\nimport { autoCompleteTickerWithSaga } from '../actions/autoComplete';\n\nexport const onAddTickerWithSaga = function* (action) {\n    try {\n        const newTicker = yield ref(db, `${auth.currentUser.uid}/tickers/${action.tickerType}/${action.ticker}/data/${action.date}`);\n        yield set(newTicker, { \n            ticker: action.ticker, \n            description: action.description, \n            quantity: action.quantity, \n            usdCost: action.usdCost, \n            usdTotal: action.usdTotal,\n            rubCost: action.rubCost, \n            rubTotal: action.rubTotal,\n            eurCost: action.eurCost, \n            eurTotal: action.eurTotal,\n            profitUsdAbs: action.profitUsdAbs,\n            profitUsdRel: action.profitUsdRel,\n            profitRubAbs: action.profitRubAbs,\n            profitRubRel: action.profitRubRel,\n            profitEurAbs: action.profitEurAbs,\n            profitEurRel: action.profitEurRel,\n            currency: action.currency,\n        });\n        const tickerCurrent = yield ref(db, `${auth.currentUser.uid}/portfolio/${action.tickerType}/${action.ticker}/`);\n        yield set(tickerCurrent, {ticker: action.ticker, quantity: action.quantity, currency: action.currency, description: action.description});\n        const dates = yield ref(db, `${auth.currentUser.uid}/dates/${action.date}`);\n        yield set(dates, 'yes');\n        const prevData = yield {\n            ticker: action.ticker,\n            quantity: action.quantity,\n            usdCost: action.usdCost, \n            usdTotal: action.usdTotal,\n            rubCost: action.rubCost, \n            rubTotal: action.rubTotal,\n            eurCost: action.eurCost, \n            eurTotal: action.eurTotal\n        };\n        yield put(autoCompleteTickerWithSaga(action.ticker, action.date, action.quantity, action.currency, prevData));\n    } catch (err) {\n        console.log(err);\n    };\n};\n\nexport const onDelTickerWithSaga = function* (action) {\n    try {\n        const tickerCurrent = yield ref(db, `${auth.currentUser.uid}/portfolio/${action.marketType}/${action.ticker}`);\n        yield remove(tickerCurrent);\n        const ticker = yield ref(db, `${auth.currentUser.uid}/tickers/${action.marketType}/${action.ticker}`);\n        yield remove(ticker);\n    } catch (err) {\n        console.log(err);\n    };\n};\n\nexport const onAutoCompleteTickersWithSaga = function* (action) {\n    try {\n        if (+(new Date(action.date)) < (+(new Date()) - 691200000)){\n            const autoCompleteAction = yield call(addTicker, action.ticker,  new Date(+(new Date(action.date)) + 604800000), action.quantity, action.currency, action.prevData, true, false);\n            yield put(autoCompleteAction);\n        }\n    } catch (err) {\n        console.log(err);\n    };\n};\n\nexport const onSetTickersInfoWithSaga = function* (action){\n    try {\n        const tickerTable = yield call(getTickerInfo, action.tickers, action.tickerType);\n        yield put(setTickersInfo(tickerTable, action.tickerType));\n    } catch (err) {\n        console.log(err);\n    };\n};","import { auth, db } from '../../services/firebase';\r\nimport { ref, onValue } from '@firebase/database';\r\n\r\nimport { store } from '../store';\r\nimport { initUserData } from '../actions/initUserData';\r\n\r\nexport const onInitUserDataWithSaga = function* () {\r\n    try {\r\n        const tickers = yield ref(db, `${auth.currentUser.uid}`);\r\n        yield onValue(tickers, (snapshot) => {\r\n            const data = snapshot.val();\r\n            store.dispatch(initUserData(data || {}));\r\n        });\r\n    } catch (err) {\r\n        console.log(err.message);\r\n    }\r\n};","import { takeLatest, takeEvery } from 'redux-saga/effects';\r\nimport { ADD_TICKER_WITH_SAGA } from './actions/addTicker';\r\nimport { AUTOCOMPLETE_TICKER_WITH_SAGA } from './actions/autoComplete';\r\nimport { CALCULATE_PORTFOLIO_COST_WITH_SAGA } from './actions/calculatePortfolioCost';\r\nimport { CALCULATE_WEEKLY_PORTFOLIO_PROFIT_AND_COST_WITH_SAGA } from './actions/calculateWeeklyPortfolioProfitAndCost';\r\nimport { CALCULATE_YEAR_PROFIT_WITH_SAGA } from './actions/calculateYearProfit';\r\nimport { DEL_TICKER_WITH_SAGA } from './actions/delTicker';\r\n\r\nimport { INIT_INIT_USER_DATA_WITH_SAGA } from './actions/initUserData';\r\nimport { SET_TICKERS_INFO_WITH_SAGA } from './actions/setTickersInfo';\r\nimport { onCalculatePortfolioCostWithSaga, onCalculateWeeklyPortfolioProfitAndCostWithSaga, onCalculateYearProfitWithSaga } from './sagas/profileSaga';\r\nimport { onAddTickerWithSaga, onAutoCompleteTickersWithSaga, onDelTickerWithSaga, onSetTickersInfoWithSaga } from './sagas/tickersSaga';\r\nimport { onInitUserDataWithSaga } from './sagas/userDataSaga';\r\n\r\nfunction* mySaga() {\r\n\tyield takeLatest(INIT_INIT_USER_DATA_WITH_SAGA, onInitUserDataWithSaga);\r\n\tyield takeEvery(ADD_TICKER_WITH_SAGA, onAddTickerWithSaga);\r\n\tyield takeLatest(DEL_TICKER_WITH_SAGA, onDelTickerWithSaga);\r\n\tyield takeEvery(AUTOCOMPLETE_TICKER_WITH_SAGA, onAutoCompleteTickersWithSaga);\r\n\tyield takeEvery(SET_TICKERS_INFO_WITH_SAGA, onSetTickersInfoWithSaga);\r\n\tyield takeLatest(CALCULATE_PORTFOLIO_COST_WITH_SAGA, onCalculatePortfolioCostWithSaga);\r\n\tyield takeLatest(CALCULATE_YEAR_PROFIT_WITH_SAGA, onCalculateYearProfitWithSaga);\r\n\tyield takeLatest(CALCULATE_WEEKLY_PORTFOLIO_PROFIT_AND_COST_WITH_SAGA, onCalculateWeeklyPortfolioProfitAndCostWithSaga);\r\n};\r\n\r\nexport default mySaga;","import { INIT_USER_DATA } from '../actions/initUserData';\nimport initialState from '../initialState';\n\nconst { userData } = initialState;\n\nfunction userDataReducer(state = userData, action) {\n    switch (action.type) {\n        case INIT_USER_DATA:\n            return {\n                ...action.userData\n            };\n\n        default: return state;\n    }\n};\n\nexport default userDataReducer;","\r\nimport { CALCULATE_PORTFOLIO_COST } from '../actions/calculatePortfolioCost';\r\nimport { CALCULATE_WEEKLY_PORTFOLIO_PROFIT_AND_COST } from '../actions/calculateWeeklyPortfolioProfitAndCost';\r\nimport { CALCULATE_YEAR_PROFIT } from '../actions/calculateYearProfit';\r\nimport { SET_TICKERS_INFO } from '../actions/setTickersInfo';\r\nimport initialState from '../initialState';\r\n\r\nconst { currentUserData } = initialState;\r\n\r\nfunction currentUserDataReducer(state = currentUserData, action) {\r\n    switch (action.type) {\r\n        case SET_TICKERS_INFO:\r\n            return {\r\n                ...state,\r\n                [action.tickerType]: action.tickerTable\r\n            };\r\n\r\n        case CALCULATE_PORTFOLIO_COST:\r\n            return{\r\n                ...state,\r\n                portfolioCost: action.portfolioCost\r\n            }\r\n\r\n        case CALCULATE_YEAR_PROFIT:\r\n            return {\r\n                ...state,\r\n                yearProfit: action.yearProfit,\r\n            }\r\n\r\n        case CALCULATE_WEEKLY_PORTFOLIO_PROFIT_AND_COST:\r\n            return {\r\n                ...state,\r\n                weeklyPortfolioProfitAndCost: action.weeklyPortfolioProfitAndCost,\r\n            }\r\n\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default currentUserDataReducer;","\r\nimport { ADD_FILTERED_TICKERS } from '../actions/addFilteredTickers';\r\nimport initialState from '../initialState';\r\n\r\nconst { filteredTickers } = initialState;\r\n\r\nfunction filteredTickersReducer(state = filteredTickers, action) {\r\n    switch (action.type) {\r\n        case ADD_FILTERED_TICKERS:\r\n            return {\r\n                ...action.filteredTickers\r\n            };\r\n\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default filteredTickersReducer;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport initialState from './initialState';\r\n\r\nimport mySaga from './sagas.js';\r\nimport userData from './reducers/userDataReducer';\r\nimport currentUserData from './reducers/currentUserDataReducer';\r\nimport filteredTickers from './reducers/filteredTickersReducer';\r\n\r\nexport const combine = combineReducers({ userData, currentUserData, filteredTickers });\r\n\r\nconst onErrorSaga = (error, stack) => { console.log('qqq' + error); console.log(stack) };\r\nconst options = { onError: onErrorSaga };\r\nconst sagaMiddleware = createSagaMiddleware(options);\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst persistConfig = {\r\n\tkey: 'root',\r\n\tstorage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, combine);\r\n\r\nexport const store = createStore(\r\n\tpersistedReducer,\r\n\tinitialState,\r\n\tcomposeEnhancers(applyMiddleware(sagaMiddleware)));\r\n\r\nsagaMiddleware.run(mySaga);\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/es/integration/react';\n\nimport { ThemeProvider, createTheme } from '@material-ui/core/styles';\n\nimport Router from './Components/Router';\nimport { store } from './store/store';\nimport { persistor } from './store/store';\n\nconst mainTheme = createTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: \"#708238\",\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: \"#0098FF\",\n\t\t},\n\t},\n});\n\nfunction App() {\n\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<PersistGate persistor={persistor}>\n\t\t\t\t<ThemeProvider theme={mainTheme}>\n\t\t\t\t\t\t<Router />\n\t\t\t\t</ThemeProvider>\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}