{"version":3,"sources":["Components/SearchList/index.js","store/actions/addFilteredTickers.js","store/actions/addTicker.js","Functions/functions.js","Components/SearchForm/index.js","store/actions/delTicker.js","Components/Tickers/index.js","store/actions/initUserData.js","services/firebase.js","store/selectors/tickersSelectors.js","Components/Main/index.js","utils/constants.js","hocs/PrivateRoute.js","hocs/PublicRoute.js","Components/SignUp/index.js","Components/LogIn/index.js","store/selectors/profileSelectors.js","store/actions/setTickersInfo.js","Components/MyTickers/index.js","store/actions/calculatePortfolioCost.js","Components/Profile/index.js","Components/Router/index.js","store/initialState.js","store/actions/autoComplete.js","store/sagas/profileSaga.js","store/sagas/tickersSaga.js","store/sagas/userDataSaga.js","store/sagas.js","store/reducers/userDataReducer.js","store/reducers/currentUserDataReducer.js","store/reducers/filteredTickersReducer.js","store/store.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","searchListContainer","maxWidth","searchList","listStyle","padding","margin","addButton","border","color","backgroundColor","SearchList","props","classes","className","searchResult","map","item","onClick","event","submitTicker","ticker","descr","classcode","ADD_FILTERED_TICKERS","ADD_TICKER_WITH_SAGA","getHistoryUrl","startDate","finishDate","Math","round","Date","addTicker","date","quantity","currency","friday","getDay","tickerUrl","infoUrl","getInfoUrl","currencyTicker","currencyUrl","currencyCourse","fetch","then","result","json","course","errmsg","c","data","s","Error","info","cost","type","total","roubleCost","roubleTotal","isNaN","description","tickerType","addTickerWithSaga","toISOString","slice","toFixed","catch","error","console","log","getTickerInfo","tickers","a","USDUrl","EURUrl","USDresult","USDData","USDCurrency","EURresult","EURData","EURCurrency","tickerTable","RUBCost","RUBTotal","USDTotal","USDCost","EURTotal","EURCost","calculatePortfolio","RUBGrandTotal","USDGrandTotal","EURGrandTotal","args","forEach","list","Object","values","filterData","year","month","filteredData","keys","tickerItems","tickerItem","dates","filter","getMonth","getFullYear","filteredTickers","form","borderRadius","display","flexDirection","formSubmit","searchItem","marginBottom","SearchForm","useState","setTicker","setQuantity","setDate","search","setSearch","setSearchResult","setCurrency","dispatch","useDispatch","buyTicker","preventDefault","addAction","action","onSubmit","label","disabled","value","onChange","target","required","query","temp","i","push","symbol","searchedTicker","DEL_TICKER_WITH_SAGA","delTickerWithSaga","marketType","table","overflow","tickerName","width","alignItems","justifyContent","flexShrink","tickerDate","borderLeft","borderRight","tickerDateCell","borderBottom","Tickers","length","delTicker","INIT_USER_DATA","initUserData","userData","INIT_INIT_USER_DATA_WITH_SAGA","auth","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","db","getDatabase","getAlltickers","state","currentUser","uid","getFilteredStocks","stock","getFilteredPif","pif","getFilteredEtf","etf","getFilteredBonds","bonds","getFilteredForex","forex","App","mainContainer","Main","filteredForex","useSelector","filteredStocks","filteredPif","filteredEtf","filteredBonds","allTickers","useEffect","HOMEPAGE","PrivateRoute","authenticated","rest","to","pathname","PublicRoute","SignUp","email","setEmail","password","setPassword","setError","handlePassChange","useCallback","e","handleEmailChange","handleSubmit","createUserWithEmailAndPassword","message","placeholder","name","LogIn","signInWithEmailAndPassword","getPortfolio","portfolio","getMyCurrentStock","currentUserData","getMyCurrentPif","getMyCurrentEtf","getMyCurrentBonds","getMyCurrentForex","getMyProfileCost","portfolioCost","SET_TICKERS_INFO","setTickersInfo","SET_TICKERS_INFO_WITH_SAGA","setTickersInfoWithSaga","tickerData","flexGrow","tickerDataCell","tickerHeaders","tickerHeader","MyTickers","CALCULATE_PORTFOLIO_COST","calculatePortfolioCost","CALCULATE_PORTFOLIO_COST_WITH_SAGA","Profile","myCurrentStock","myCurrentPif","myCurrentEtf","myCurrentBonds","myCurrentForex","myPortfolioCost","calculatePortfolioCostWithSaga","Router","authed","setAuthed","onAuthStateChanged","user","signOutUser","signOut","exact","path","initialState","AUTOCOMPLETE_TICKER_WITH_SAGA","onCalculatePortfolioCostWithSaga","call","put","onAddTickerWithSaga","ref","newTicker","set","tickerCurrent","onDelTickerWithSaga","remove","onAutoCompleteTickersWithSaga","autoCompleteAction","onSetTickersInfoWithSaga","onInitUserDataWithSaga","onValue","snapshot","val","store","mySaga","takeLatest","takeEvery","userDataReducer","currentUserDataReducer","filteredTickersReducer","combine","combineReducers","options","onError","stack","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","key","storage","persistedReducer","persistReducer","createStore","applyMiddleware","run","persistor","persistStore","mainTheme","createTheme","palette","primary","main","secondary","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4d7fa6c.chunk.js","sourcesContent":["import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n\tsearchListContainer: {\n\t\tmaxWidth: '500px',\n\t},\n\tsearchList: {\n\t\tlistStyle: 'none',\n\t\tpadding: '0',\n\t\tmargin: '0',\n\t},\n\taddButton: {\n\t\tborder: 'none',\n\t\t'&:hover': {\n\t\t\tcolor: '#fff',\n\t\t\tbackgroundColor: '#222',\n\t\t}\n\t},\n}));\n\nfunction SearchList(props) {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={classes.searchListContainer}>\n\t\t\t<ul className={classes.searchList}>\n\t\t\t\t{props.searchResult.map((item) =>\n\t\t\t\t\t<li key={item.ticker + item.classcode}><button onClick={(event) => props.submitTicker(event, item.ticker)} className={classes.addButton}>{item.descr}</button></li>\n\t\t\t\t)}\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n\nexport default SearchList;\n","export const ADD_FILTERED_TICKERS = 'TICKERS::ADD_FILTERED_TICKERS';\r\n\r\nexport const addFilteredTickers = (filteredTickers) => {\r\n    return {\r\n        type: ADD_FILTERED_TICKERS,\r\n        filteredTickers\r\n    };\r\n};","export const ADD_TICKER_WITH_SAGA = 'TICKERS::ADD_TICKER_WITH_SAGA';\n\nexport const addTickerWithSaga = (ticker, description, date, quantity, cost, total, roubleCost, roubleTotal, currency, tickerType) => {\n    return {\n        type: ADD_TICKER_WITH_SAGA,\n        ticker, description, date, quantity, cost, total, roubleCost, roubleTotal, currency, tickerType\n    };\n};","import { addFilteredTickers } from \"../store/actions/addFilteredTickers\";\r\nimport { addTickerWithSaga } from \"../store/actions/addTicker\";\r\n\r\nexport const getSearchUrl = (query) => {\r\n    return `https://api.bcs.ru/udfdatafeed/v1/search?query=${query}&limit=10&fulldescription=on`;\r\n};\r\n\r\nexport const getInfoUrl = (ticker) => {\r\n    return `https://api.bcs.ru/udfdatafeed/v1/symbols?symbol=${ticker}`;\r\n};\r\n\r\nexport const getHistoryUrl = (ticker, startDate, finishDate) => {\r\n    if (+startDate && +finishDate) {\r\n        return `https://api.bcs.ru/udfdatafeed/v1/history?symbol=${ticker}&resolution=d&from=${Math.round((+(new Date(startDate)))/1000)}&to=${Math.round((+(new Date(finishDate)))/1000)}`;\r\n    } else {\r\n        return `https://api.bcs.ru/udfdatafeed/v1/history?symbol=${ticker}&resolution=d&from=${Math.round((+(new Date()))/1000)}&to=${Math.round((+(new Date()))/1000)}`;\r\n    }\r\n    \r\n};\r\n\r\nexport const addTicker = (ticker, date, quantity, currency) => {\r\n    let friday = +(new Date(date));\r\n    while ((new Date(friday)).getDay() !== 5){\r\n        friday += 86400000;\r\n    }\r\n    const tickerUrl = getHistoryUrl(ticker, friday, friday + 82800000);\r\n    const infoUrl = getInfoUrl(ticker);\r\n    let currencyTicker = '';\r\n    if (currency === 'rur') {currencyTicker = ''} else if (currency === 'usd') {currencyTicker = 'RUR'} else if (currency === 'eur') {currencyTicker = 'EUR_RUB'};\r\n    const currencyUrl = getHistoryUrl(currencyTicker, friday, friday + 82800000);\r\n    let currencyCourse = 1;\r\n    \r\n        return fetch(currencyUrl)\r\n            .then(result => result.json())\r\n            .then(course =>{\r\n                if (course.errmsg === 'unknown_symbol'){\r\n                    currencyCourse = 1;\r\n                } else {\r\n                    currencyCourse = course.c[0];\r\n                }\r\n                return fetch(tickerUrl)\r\n                .then(result => result.json())\r\n                .then(data => {\r\n                    if(data.s === 'no_data'){ throw new Error ('Нет данных')}\r\n                    return fetch(infoUrl)\r\n                        .then(result => result.json())\r\n                        .then((info) => {\r\n                            const cost = (info.type !== 'bonds') ? data.c[0] : data.c[0] * 10;\r\n                            const total = (info.type !== 'bonds') ? data.c[0] * quantity : data.c[0] * quantity * 10;\r\n                            const roubleCost = (info.type !== 'bonds') ? data.c[0] * currencyCourse : data.c[0] * currencyCourse * 10;\r\n                            const roubleTotal = (info.type !== 'bonds') ? data.c[0] * currencyCourse * quantity : data.c[0] * currencyCourse * quantity * 10;\r\n                            if (isNaN(data.c[0])) {throw new Error('Нет данных')};\r\n                            return addTickerWithSaga(ticker, info.description, (new Date(friday)).toISOString().slice(0, 10), quantity, cost.toFixed(2), total.toFixed(2), roubleCost.toFixed(2), roubleTotal.toFixed(2), currency, info.type);\r\n                        })\r\n                        .catch(error => {\r\n                            console.log(error);\r\n                        })\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n};\r\n\r\nexport const getTickerInfo = async (tickers, type) => {\r\n    const USDUrl = getHistoryUrl('RUR',null,null);\r\n    const EURUrl = getHistoryUrl('EUR_RUB',null,null);\r\n    const USDresult = await fetch(USDUrl);\r\n    const USDData = await USDresult.json();\r\n    const USDCurrency = USDData.c[0];\r\n    const EURresult = await fetch(EURUrl);\r\n    const EURData = await EURresult.json();\r\n    const EURCurrency = EURData.c[0];\r\n    let RUBCost;\r\n    let RUBTotal; \r\n    let USDCost;\r\n    let USDTotal;\r\n    let EURCost;\r\n    let EURTotal;\r\n\r\n    let tickerTable = {};\r\n    for (let ticker in tickers) {\r\n        const tickerUrl = getHistoryUrl(ticker,null,null);\r\n        const result = await fetch(tickerUrl);\r\n        const data = await result.json(); \r\n        \r\n        if (tickers[ticker].currency === 'rur'){\r\n            RUBCost = data.c[0];\r\n            RUBTotal = RUBCost * tickers[ticker].quantity; \r\n            USDCost = RUBCost / USDCurrency;\r\n            USDTotal = USDCost * tickers[ticker].quantity;\r\n            EURCost = RUBCost / EURCurrency;\r\n            EURTotal = EURCost  * tickers[ticker].quantity;\r\n        } else if (tickers[ticker].currency === 'usd') {\r\n            USDCost = data.c[0];\r\n            USDTotal = USDCost * tickers[ticker].quantity;\r\n            RUBCost = USDCost * USDCurrency;\r\n            RUBTotal = RUBCost * tickers[ticker].quantity; \r\n            EURCost = RUBCost / EURCurrency;\r\n            EURTotal = EURCost  * tickers[ticker].quantity;\r\n        } else if (tickers[ticker].currency === 'eur') {\r\n            EURCost = data.c[0];\r\n            EURTotal = EURCost * tickers[ticker].quantity;\r\n            RUBCost = EURCost * EURCurrency;\r\n            RUBTotal = RUBCost * tickers[ticker].quantity; \r\n            USDCost = RUBCost / USDCurrency;\r\n            USDTotal = USDCost  * tickers[ticker].quantity;\r\n        }\r\n        if (type === 'bonds'){\r\n            RUBCost *= 10;\r\n            RUBTotal *= 10; \r\n            USDCost *= 10;\r\n            USDTotal *= 10;\r\n            EURCost *= 10;\r\n            EURTotal *= 10;\r\n        }\r\n        \r\n        tickerTable = {...tickerTable, \r\n            [ticker]: {\r\n                quantity: tickers[ticker].quantity, \r\n                RUBCost: RUBCost.toFixed(2), \r\n                RUBTotal: RUBTotal.toFixed(2), \r\n                USDCost: USDCost.toFixed(2), \r\n                USDTotal: USDTotal.toFixed(2),\r\n                EURCost: EURCost.toFixed(2), \r\n                EURTotal: EURTotal.toFixed(2),\r\n                currency: tickers[ticker].currency,\r\n                description: tickers[ticker].description\r\n            },\r\n                }\r\n    }\r\n    return tickerTable;\r\n};\r\n\r\nexport const calculatePortfolio = (...args) => {\r\n    let RUBGrandTotal = 0;\r\n    let USDGrandTotal = 0;\r\n    let EURGrandTotal = 0;\r\n    args.forEach((list) => {\r\n        Object.values(list).forEach((item) => {\r\n            RUBGrandTotal += +item.RUBTotal;\r\n            USDGrandTotal += +item.USDTotal;\r\n            EURGrandTotal += +item.EURTotal;\r\n        })\r\n    });\r\n    return({RUBGrandTotal: RUBGrandTotal.toFixed(1), USDGrandTotal: USDGrandTotal.toFixed(1), EURGrandTotal: EURGrandTotal.toFixed(1)});\r\n};\r\n\r\nexport const filterData = (data, year, month) => {\r\n    \r\n    let filteredData = {};\r\n    const tickerTypes = Object.keys(data);\r\n    tickerTypes.forEach((tickerType) => {\r\n        const tickerItems = Object.keys(data[tickerType]);\r\n        filteredData = {\r\n            ...filteredData,\r\n            [tickerType]: {}\r\n        };\r\n        tickerItems.forEach((tickerItem) => {\r\n            const dates = Object.keys(data[tickerType][tickerItem].data);\r\n            filteredData = {\r\n                ...filteredData,\r\n                [tickerType]: {\r\n                    ...filteredData[tickerType],\r\n                    [tickerItem]: {data:{}}\r\n                }\r\n            };\r\n            const filteredDates = dates.filter(date => ((new Date(date).getMonth() === month) && (new Date(date).getFullYear() === year)));\r\n            filteredDates.forEach((date) => {\r\n                filteredData = {\r\n                    ...filteredData,\r\n                    [tickerType]: {\r\n                        ...filteredData[tickerType],\r\n                        [tickerItem]: {data:{\r\n                            ...filteredData[tickerType][tickerItem].data,\r\n                            [date]: data[tickerType][tickerItem].data[date]\r\n                        }}\r\n                    }\r\n                };\r\n            });\r\n            \r\n        });\r\n    });\r\n    return addFilteredTickers(filteredData);\r\n};","import React, { useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core';\nimport SearchList from '../SearchList'\nimport {addTicker, getSearchUrl} from '../../Functions/functions.js';\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        maxWidth: '400px',\n        border: '1px solid black',\n        borderRadius: '10px',\n        display: 'flex',\n        flexDirection: 'column',\n        margin: '10px',\n    },\n    formSubmit: {\n        display: 'block',\n    },\n    searchItem: {\n        margin: '5px 10px',\n        marginBottom: '5px'\n    },\n}));\n\nfunction SearchForm() {\n\n    const [ticker, setTicker] = useState('');\n    const [quantity, setQuantity] = useState('');\n    const [date, setDate] = useState('');\n    const [search, setSearch] = useState('');\n    const [searchResult, setSearchResult] = useState([]);\n    const [currency, setCurrency] = useState('rur');\n\n    const handleTicker = (event) => {\n        setTicker(event.target.value);\n    };\n\n    const handleQuantity = (event) => {\n        setQuantity(event.target.value);\n    };\n\n    const handleDate = (event) => {\n        setDate(event.target.value);\n    };\n\n    const submitTicker = (event, searchedTicker) => {\n        event.preventDefault();\n        setTicker(searchedTicker);\n    }\n\n    const handleCurrency = (event) => {\n        setCurrency(event.target.value);\n    };\n\n    const dispatch = useDispatch();\n\n    const handleSearch = (event) => {\n        setSearch(event.target.value);\n        const search = getSearchUrl(event.target.value);\n        fetch(search)\n            .then(result => result.json())\n            .then(data => {\n                let temp = [];\n                data.forEach((item, i) => {\n                    temp.push({\n                        ticker: item.symbol,\n                        descr: item.description,\n                        classcode: item.classcode\n                    });\n                });\n                setSearchResult(temp);\n            })\n            .catch(error => {\n                console.log(error);\n            })\n\n    };\n\n    const buyTicker = async (event) => {\n        event.preventDefault();\n        setSearchResult([]);\n        const addAction = await addTicker(ticker, date, quantity, currency);\n        addAction && dispatch(addAction);\n    };\n\n    const classes = useStyles();\n\n    return (\n        <form action=\"\" onSubmit={buyTicker} className={classes.form} label=\"Ticker\">\n            <input type=\"text\" disabled className={classes.searchItem} value={ticker} onChange={handleTicker} required></input>\n            <select required onChange={handleCurrency} className={classes.searchItem}>\n                <option value='rur'>rur</option>\n                <option value='usd'>usd</option>\n                <option value='eur'>eur</option>\n            </select>\n            <input type=\"number\" className={classes.searchItem} value={quantity} onChange={handleQuantity} required></input>\n            <input type=\"date\" className={classes.searchItem} value={date} onChange={handleDate} required></input>\n            <input type=\"submit\" className={classes.formSubmit + ' ' + classes.searchItem} value=\"Add\"></input>\n            <input type=\"text\" className={classes.searchItem} value={search} onChange={handleSearch}></input>\n            <SearchList className={classes.searchItem} searchResult={searchResult} submitTicker={submitTicker} />\n        </form>\n\n    );\n}\n\nexport default SearchForm;\n","export const DEL_TICKER_WITH_SAGA = 'TICKERS::DEL_TICKER_WITH_SAGA';\r\n\r\nexport const delTickerWithSaga = (ticker, marketType) => {\r\n    return {\r\n        type: DEL_TICKER_WITH_SAGA,\r\n        ticker, marketType\r\n    };\r\n};","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch } from 'react-redux';\nimport { delTickerWithSaga } from '../../store/actions/delTicker';\n\nconst useStyles = makeStyles((theme) => ({\n\ttable: {\n\t\tmaxWidth: '100%'\n\t},\n\tticker: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t\tborder: '1px solid black',\n\t\tmargin: '10px',\n\t\toverflow: 'auto'\n\t},\n\ttickerName: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\twidth: '110px',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'space-around',\n\t\tpadding: '5px',\n\t\tflexShrink: '0'\n\t},\n\ttickerTable: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row'\n\t},\n\ttickerDate: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tborderLeft: '1px solid black',\n\t\t'&:last-child': {\n\t\t\tborderRight: '1px solid black'\n\t\t}\n\t},\n\ttickerDateCell: {\n\t\tborderBottom: '1px solid black',\n\t\tmargin: '0',\n\t\tpadding: '5px',\n\t\t'&:last-child': {\n\t\t\tborderBottom: 'none'\n\t\t}\n\t},\n}));\n\nfunction Tickers(props) {\n\tconst dispatch = useDispatch();\n\n\tconst delTicker = (ticker, marketType) => {\n\t\tdispatch(delTickerWithSaga(ticker, marketType));\n\t};\n\n\tconst classes = useStyles();\n\n\tconst filteredTickers = Object.keys(props.filteredTickers || {});\n\n\treturn (\n\t\t<div>\n\t\t\t<div className={classes.table}>\n\t\t\t\t{filteredTickers.map((ticker) =>\n\t\t\t\t\t(Object.keys(props.filteredTickers[ticker].data).length !== 0)&&(<div key={ticker} className={classes.ticker}>\n\t\t\t\t\t\t<div className={classes.tickerName}>\n\t\t\t\t\t\t\t<p>{ticker}</p>\n\t\t\t\t\t\t\t<p>{props.filteredTickers[ticker].data[Object.keys(props.filteredTickers[ticker].data)[Object.keys(props.filteredTickers[ticker].data).length - 1]].description}</p>\n\t\t\t\t\t\t\t<p>{props.filteredTickers[ticker].data[Object.keys(props.filteredTickers[ticker].data)[Object.keys(props.filteredTickers[ticker].data).length - 1]].currency}</p>\n\t\t\t\t\t\t\t<button onClick={() => delTicker(ticker, props.type)}>del</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={classes.tickerTable}>\n\t\t\t\t\t\t\t{Object.keys(props.filteredTickers[ticker].data).map((date) =>\n\t\t\t\t\t\t\t\t<div key={props.filteredTickers[ticker].data[date].ticker + date} className={classes.tickerDate}>\n\t\t\t\t\t\t\t\t\t<p className={classes.tickerDateCell}>{date}</p>\n\t\t\t\t\t\t\t\t\t<p className={classes.tickerDateCell}>{props.filteredTickers[ticker].data[date].quantity}</p>\n\t\t\t\t\t\t\t\t\t<p className={classes.tickerDateCell}>{props.filteredTickers[ticker].data[date].cost}</p>\n\t\t\t\t\t\t\t\t\t<p className={classes.tickerDateCell}>{props.filteredTickers[ticker].data[date].total}</p>\n\t\t\t\t\t\t\t\t\t{((props.filteredTickers[ticker].data[date].currency !== 'rur') ? <p className={classes.tickerDateCell}>{props.filteredTickers[ticker].data[date].roubleCost}</p> : '')}\n\t\t\t\t\t\t\t\t\t{((props.filteredTickers[ticker].data[date].currency !== 'rur') ? <p className={classes.tickerDateCell}>{props.filteredTickers[ticker].data[date].roubleTotal}</p> : '')}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>)\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Tickers;","export const INIT_USER_DATA = 'USER::INIT_USER_DATA';\n\nexport const initUserData = (userData) => {\n    return {\n        type: INIT_USER_DATA,\n        userData\n    };\n};\n\nexport const INIT_INIT_USER_DATA_WITH_SAGA = 'USER::INIT_USER_DATA_WITH_SAGA';\n\nexport const initUserDataWithSaga = () => {\n    return {\n        type: INIT_INIT_USER_DATA_WITH_SAGA,\n    };\n};","import { getAuth } from \"@firebase/auth\";\nimport { getDatabase } from \"@firebase/database\";\nimport { initializeApp } from \"firebase/app\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAS0Sazo-Bbg-TouSxSrenj5hTYa5bnjN8\",\n  authDomain: \"investor-8a0c2.firebaseapp.com\",\n  projectId: \"investor-8a0c2\",\n  storageBucket: \"investor-8a0c2.appspot.com\",\n  messagingSenderId: \"949350207446\",\n  appId: \"1:949350207446:web:c6cf85c9033c3ed2491e77\"\n};\n\nexport const firebaseInitialize = initializeApp(firebaseConfig);\nexport const auth = getAuth();\nexport const db = getDatabase();","import { auth } from \"../../services/firebase\"\r\n\r\nexport function getStocks(state) { if (state.userData[auth.currentUser.uid]) { return state.userData[auth.currentUser.uid].tickers.stock} else { return {} } };\r\nexport function getPif(state) { if (state.userData[auth.currentUser.uid]) {return state.userData[auth.currentUser.uid].tickers.pif}  else {return {}} };\r\nexport function getEtf(state) { if (state.userData[auth.currentUser.uid]) {return state.userData[auth.currentUser.uid].tickers.etf}  else {return {}} };\r\nexport function getBonds(state) { if (state.userData[auth.currentUser.uid]) {return state.userData[auth.currentUser.uid].tickers.bonds} else {return {}} };\r\nexport function getForex(state) { if (state.userData[auth.currentUser.uid]) {return state.userData[auth.currentUser.uid].tickers.forex} else { return {}} };\r\nexport function getAlltickers(state) { if (state.userData[auth.currentUser.uid]) {return state.userData[auth.currentUser.uid].tickers} else { return {}} };\r\n\r\nexport function getFilteredStocks(state) { if (state.filteredTickers) { return state.filteredTickers.stock} else { return {} } };\r\nexport function getFilteredPif(state) { if (state.filteredTickers) {return state.filteredTickers.pif}  else {return {}} };\r\nexport function getFilteredEtf(state) { if (state.filteredTickers) {return state.filteredTickers.etf}  else {return {}} };\r\nexport function getFilteredBonds(state) { if (state.filteredTickers) {return state.filteredTickers.bonds} else {return {}} };\r\nexport function getFilteredForex(state) { if (state.filteredTickers) {return state.filteredTickers.forex} else { return {}} };","import React, { useEffect, useState } from 'react';\nimport SearchForm from '../SearchForm'\n\nimport Tickers from '../Tickers'\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { initUserDataWithSaga } from '../../store/actions/initUserData';\nimport { getAlltickers, getFilteredBonds, getFilteredEtf, getFilteredForex, getFilteredPif, getFilteredStocks } from '../../store/selectors/tickersSelectors';\nimport { makeStyles } from '@material-ui/core';\nimport { filterData } from '../../Functions/functions';\n\nconst useStyles = makeStyles((theme) => ({\n    App: {\n        margin: '0 auto'\n    },\n    mainContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: '#EEE'\n    },\n}));\n\nfunction Main() {\n\n    const dispatch = useDispatch();\n\n    const filteredForex = useSelector(getFilteredForex);\n    const filteredStocks = useSelector(getFilteredStocks);\n    const filteredPif = useSelector(getFilteredPif);\n    const filteredEtf = useSelector(getFilteredEtf);\n    const filteredBonds = useSelector(getFilteredBonds);\n    const allTickers = useSelector(getAlltickers);\n\n    const [date, setDate] = useState((new Date()).toISOString().slice(0, 7));\n\n    const handleDate = (event) => {\n        setDate(event.target.value);\n        \n    };\n\n    useEffect(() => {\n        dispatch(initUserDataWithSaga());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        dispatch(filterData(allTickers, new Date(date).getFullYear(), new Date(date).getMonth()));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [date]);\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.App + ' ' + classes.mainContainer}>\n            <input type='month' onChange={handleDate} value={date}/>\n            <SearchForm />\n            <div>Валюта</div>\n            <Tickers  filteredTickers={filteredForex} type ='forex'/>\n            <div>Акции</div>\n            <Tickers  filteredTickers={filteredStocks} type ='stock'/>\n            <div>Фонды</div>\n            <Tickers filteredTickers={filteredPif} type ='pif'/>\n            <Tickers filteredTickers={filteredEtf} type ='etf'/>\n            <div>Облигации</div>\n            <Tickers filteredTickers={filteredBonds} type ='bonds'/>\n        </div>\n    );\n}\n\nexport default Main;","export const URL_NEWS = \"https://api.currentsapi.services/v1/latest-news?language=ru&apiKey=6qmiCnF5XcC6Zt8s4fj5gRg9kBKB58XFqw8Rw6QqsYOtD1M8\";\r\nexport const URL_WEATHER = 'https://api.openweathermap.org/data/2.5/weather?id=498817&appid=f0694cc740867c7440b3be0552c0bf8f';\r\n\r\nexport const HOMEPAGE = \"\";\r\n\r\nexport const MKRKETSTACK_APIKEY ='880bb985b6ee8c60422ef715002a485b';","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport {HOMEPAGE} from '../utils/constants';\n\nexport default function PrivateRoute({ authenticated, ...rest }) {\n  return authenticated ? (\n    <Route {...rest} />\n  ) : (\n    <Redirect to={{ pathname: `${HOMEPAGE}/login` }} />\n  );\n};","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { HOMEPAGE } from '../utils/constants';\n\nexport default function PublicRoute({ authenticated, ...rest }) {\n  return !authenticated ? <Route {...rest} /> : <Redirect to={`${HOMEPAGE}/`} />;\n};","import React, { useState, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from '../../services/firebase';\n\nfunction SignUp() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handlePassChange = useCallback((e) => {\n    setPassword(e.target.value);\n  },[]);\n\n  const handleEmailChange = useCallback((e) => {\n    setEmail(e.target.value);\n  },[]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <p>Fill in the form below to register new account.</p>\n        <div>\n          <input\n            placeholder=\"Email\"\n            name=\"email\"\n            type=\"email\"\n            onChange={handleEmailChange}\n            value={email}\n          />\n        </div>\n        <div>\n          <input\n            placeholder=\"Password\"\n            name=\"password\"\n            onChange={handlePassChange}\n            value={password}\n            type=\"password\"\n          />\n        </div>\n        <div>\n          {error && <p>{error}</p>}\n          <button type=\"submit\">Login</button>\n        </div>\n        <hr />\n        <p>\n          Already have an account? <Link to=\"/gbCourse5Hw/login\">Sign in</Link>\n        </p>\n      </form>\n    </div>\n  );\n};\nexport default SignUp;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from '../../services/firebase';\n\nfunction LogIn() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handlePassChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <p>Fill in the form below to login to your account.</p>\n        <div>\n          <input\n            placeholder=\"Email\"\n            name=\"email\"\n            type=\"email\"\n            onChange={handleEmailChange}\n            value={email}\n          />\n        </div>\n        <div>\n          <input\n            placeholder=\"Password\"\n            name=\"password\"\n            onChange={handlePassChange}\n            value={password}\n            type=\"password\"\n          />\n        </div>\n        <div>\n          {error && <p>{error}</p>}\n          <button type=\"submit\">Login</button>\n        </div>\n        <hr />\n        <p>\n          Don't have an account? <Link to=\"/gbCourse5Hw/signup\">Sign up</Link>\n        </p>\n      </form>\n    </div>\n  );\n};\nexport default LogIn;","import { auth } from \"../../services/firebase\"\r\n\r\nexport function getPortfolio(state) { if (state.userData[auth.currentUser.uid]) { return state.userData[auth.currentUser.uid].portfolio} else { return {} } };\r\n\r\nexport function getMyCurrentStock(state) { if (state.currentUserData) { return state.currentUserData.stock} else { return {} } };\r\nexport function getMyCurrentPif(state) { if (state.currentUserData) { return state.currentUserData.pif} else { return {} } };\r\nexport function getMyCurrentEtf(state) { if (state.currentUserData) { return state.currentUserData.etf} else { return {} } };\r\nexport function getMyCurrentBonds(state) { if (state.currentUserData) { return state.currentUserData.bonds} else { return {} } };\r\nexport function getMyCurrentForex(state) { if (state.currentUserData) { return state.currentUserData.forex} else { return {} } };\r\n\r\nexport function getMyProfileCost(state) { if (state.currentUserData) { return state.currentUserData.portfolioCost} else { return {} } };","export const SET_TICKERS_INFO = 'PROFILE::SET_TICKERS_INFO';\r\n\r\nexport const setTickersInfo = ( tickerTable, tickerType) => {\r\n    return {\r\n        type: SET_TICKERS_INFO,\r\n        tickerTable,\r\n        tickerType\r\n    };\r\n};\r\n\r\nexport const SET_TICKERS_INFO_WITH_SAGA = 'PROFILE::SET_TICKERS_INFO_WITH_SAGA';\r\n\r\nexport const setTickersInfoWithSaga = (tickers, tickerType ) => {\r\n    return {\r\n        type: SET_TICKERS_INFO_WITH_SAGA,\r\n        tickers,\r\n        tickerType   \r\n    };\r\n};","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch } from 'react-redux';\r\nimport { delTickerWithSaga } from '../../store/actions/delTicker';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttable: {\r\n\t\tmaxWidth: '400px'\r\n\t},\r\n\tticker: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n\t\tborder: '1px solid black',\r\n\t\tmargin: '10px',\r\n\t},\r\n\ttickerName: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\twidth: '110px',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'space-around',\r\n\t\tpadding: '5px',\r\n\t\tflexShrink: '0'\r\n\t},\r\n\ttickerTable: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row'\r\n\t},\r\n\ttickerData: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tborderLeft: '1px solid black',\r\n        flexGrow: '1'\r\n\t},\r\n\ttickerDataCell: {\r\n\t\tborderBottom: '1px solid black',\r\n\t\tmargin: '0',\r\n\t\tpadding: '5px',\r\n\t\t'&:last-child': {\r\n\t\t\tborderBottom: 'none'\r\n\t\t}\r\n\t},\r\n    tickerHeaders: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tborderLeft: '1px solid black',\r\n        flexGrow: '0'\r\n\t},\r\n\ttickerHeader: {\r\n\t\tborderBottom: '1px solid black',\r\n\t\tmargin: '0',\r\n\t\tpadding: '5px',\r\n\t\t'&:last-child': {\r\n\t\t\tborderBottom: 'none'\r\n\t\t}\r\n\t},\r\n}));\r\n\r\nfunction MyTickers(props) {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst delTicker = (ticker, marketType) => {\r\n\t\tdispatch(delTickerWithSaga(ticker, marketType));\r\n\t};\r\n\r\n\tconst classes = useStyles();\r\n\r\n\tconst tickers = Object.keys(props.tickers || {});\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={classes.table}>\r\n\t\t\t\t{tickers.map((ticker) =>\r\n\t\t\t\t\t<div key={ticker} className={classes.ticker}>\r\n\t\t\t\t\t\t<div className={classes.tickerName}>\r\n\t\t\t\t\t\t\t<p>{ticker}</p>\r\n                            <p>{props.tickers[ticker].description}</p>\r\n\t\t\t\t\t\t\t<button onClick={() => delTicker(ticker, props.type)}>del</button>\r\n\t\t\t\t\t\t</div>\r\n                        <div className={classes.tickerHeaders}>\r\n\t\t\t\t\t\t\t<p className={classes.tickerHeader}>Количество</p>\r\n\t\t\t\t\t\t\t<p className={classes.tickerHeader}>Цена,  {(((props.currency === 'rur') && <span>&#8381;</span>) || ((props.currency === 'usd') && <span>$</span>) || ((props.currency === 'eur') && <span>&euro;</span>))}</p>\r\n\t\t\t\t\t\t\t<p className={classes.tickerHeader}>Сумма,  {(((props.currency === 'rur') && <span>&#8381;</span>) || ((props.currency === 'usd') && <span>$</span>) || ((props.currency === 'eur') && <span>&euro;</span>))}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={classes.tickerData}>\r\n\t\t\t\t\t\t\t<p className={classes.tickerDataCell}>{props.tickers[ticker].quantity}</p>\r\n\t\t\t\t\t\t\t<p className={classes.tickerDataCell}>{(((props.currency === 'rur') && <span>{props.tickers[ticker].RUBCost}</span>) || ((props.currency === 'usd') && <span>{props.tickers[ticker].USDCost}</span>) || ((props.currency === 'eur') && <span>{props.tickers[ticker].EURCost}</span>))}</p>\r\n\t\t\t\t\t\t\t<p className={classes.tickerDataCell}>{(((props.currency === 'rur') && <span>{props.tickers[ticker].RUBTotal}</span>) || ((props.currency === 'usd') && <span>{props.tickers[ticker].USDTotal}</span>) || ((props.currency === 'eur') && <span>{props.tickers[ticker].EURTotal}</span>))}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default MyTickers;","export const CALCULATE_PORTFOLIO_COST = 'PROFILE::CALCULATE_PORTFOLIO_COST';\r\n\r\nexport const calculatePortfolioCost = ( portfolioCost ) => {\r\n    return {\r\n        type: CALCULATE_PORTFOLIO_COST,\r\n        portfolioCost\r\n    };\r\n};\r\n\r\nexport const CALCULATE_PORTFOLIO_COST_WITH_SAGA = 'PROFILE::CALCULATE_PORTFOLIO_COST_WITH_SAGA';\r\n\r\nexport const calculatePortfolioCostWithSaga = (stock, pif, etf, bonds, forex ) => {\r\n    return {\r\n        type: CALCULATE_PORTFOLIO_COST_WITH_SAGA,\r\n        stock,\r\n        pif,\r\n        etf,\r\n        bonds,\r\n        forex   \r\n    };\r\n};","import React, { useEffect, useState } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport {  getMyCurrentBonds, getMyCurrentEtf, getMyCurrentForex, getMyCurrentPif, getMyCurrentStock, getMyProfileCost, getPortfolio } from '../../store/selectors/profileSelectors';\r\nimport { auth } from '../../services/firebase';\r\nimport { setTickersInfoWithSaga } from '../../store/actions/setTickersInfo';\r\nimport MyTickers from '../MyTickers';\r\nimport { calculatePortfolioCostWithSaga } from '../../store/actions/calculatePortfolioCost';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    App: {\r\n        margin: '0 auto'\r\n    },\r\n    mainContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        backgroundColor: '#EEE'\r\n    },\r\n}));\r\n\r\nfunction Profile() {\r\n    const [currency, setCurrency] = useState('rur');\r\n    const portfolio = useSelector(getPortfolio);\r\n    const { stock, bonds, forex, pif, etf } = portfolio;\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleCurrency = (event) => {\r\n        setCurrency(event.target.value);\r\n    };\r\n\r\n    const myCurrentStock = useSelector(getMyCurrentStock);\r\n    const myCurrentPif = useSelector(getMyCurrentPif);\r\n    const myCurrentEtf = useSelector(getMyCurrentEtf);\r\n    const myCurrentBonds = useSelector(getMyCurrentBonds);\r\n    const myCurrentForex = useSelector(getMyCurrentForex);\r\n    const myPortfolioCost = useSelector(getMyProfileCost);\r\n\r\n    useEffect(() => {\r\n        dispatch(setTickersInfoWithSaga(stock, 'stock'));\r\n        dispatch(setTickersInfoWithSaga(pif, 'pif'));\r\n        dispatch(setTickersInfoWithSaga(etf, 'etf'));\r\n        dispatch(setTickersInfoWithSaga(bonds, 'bonds'));\r\n        dispatch(setTickersInfoWithSaga(forex, 'forex'));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        dispatch(calculatePortfolioCostWithSaga(myCurrentStock, myCurrentPif, myCurrentEtf, myCurrentBonds, myCurrentForex));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [myCurrentStock, myCurrentPif, myCurrentBonds, myCurrentForex]);\r\n\r\n    return (\r\n        <div>\r\n            <select required onChange={handleCurrency} className={classes.searchItem}>\r\n                <option value='rur'>rur</option>\r\n                <option value='usd'>usd</option>\r\n                <option value='eur'>eur</option>\r\n            </select>\r\n            <div>Валюта</div>\r\n            <MyTickers tickers={myCurrentForex} type='forex' currency={currency}/>\r\n            <div>Акции</div>\r\n            <MyTickers tickers={myCurrentStock} type='stock' currency={currency}/>\r\n            <div>Фонды</div>\r\n            <MyTickers tickers={myCurrentPif} type='pif' currency={currency}/>\r\n            <MyTickers tickers={myCurrentEtf} type='etf' currency={currency}/>\r\n            <div>Облигации</div>\r\n            <MyTickers tickers={myCurrentBonds} type='bonds' currency={currency}/>\r\n            <h1>{auth.currentUser ? auth.currentUser.email : ''}</h1>\r\n            <p>&#8381; {myPortfolioCost ? myPortfolioCost.RUBGrandTotal : ''}</p>\r\n            <p>$ {myPortfolioCost ? myPortfolioCost.USDGrandTotal : ''}</p>\r\n            <p>&euro; {myPortfolioCost ? myPortfolioCost.EURGrandTotal : ''}</p>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React, { useCallback, useEffect, useState } from 'react';\nimport { HashRouter as MyRouter, Link, Route, Switch } from 'react-router-dom';\nimport Main from '../Main';\nimport PrivateRoute from '../../hocs/PrivateRoute';\nimport PublicRoute from '../../hocs/PublicRoute';\nimport { auth } from '../../services/firebase';\nimport { HOMEPAGE } from '../../utils/constants';\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\nimport SignUp from '../SignUp';\nimport LogIn from '../LogIn';\nimport Profile from '../Profile';\n\nfunction Router() {\n    const [authed, setAuthed] = useState(false);\n\n    useEffect(() => {\n\n        const unsubscribe = onAuthStateChanged(auth, (user) => {\n            if (user) {\n                setAuthed(true);\n                console.log(auth.currentUser.email);\n            } else {\n                setAuthed(false);\n            }\n        });\n        return unsubscribe;\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const signOutUser = useCallback(() => {\n\t\tsignOut(auth).then(() => {\n\t\t}).catch((error) => {\n\t\t});\n\t},[]);\n\n    return (\n        <MyRouter>\n            <header>\n                <Link to={`${HOMEPAGE}/`}>Main</Link>\n                <Link to={`${HOMEPAGE}/profile`}>Profile</Link>\n                <Link to={`${HOMEPAGE}/signup`}>Registration</Link>\n                <Link to={`${HOMEPAGE}/login`}>Login</Link>\n                <button onClick={signOutUser}>Sign Out</button>\n            </header>\n            <Switch>\n                <PrivateRoute authenticated={authed} exact path={`${HOMEPAGE}/`}>\n                    <Main />\n                </PrivateRoute>\n                <PrivateRoute authenticated={authed} exact path={`${HOMEPAGE}/profile`}>\n                    <Profile />\n                </PrivateRoute>\n                <PublicRoute authenticated={authed} path={`${HOMEPAGE}/signup`}>\n                    <SignUp />\n                </PublicRoute>\n                <PublicRoute authenticated={authed} path={`${HOMEPAGE}/login`}>\n                    <LogIn />\n                </PublicRoute>\n                <Route>\n                    <h4>404</h4>\n                </Route>\n            </Switch>\n        </MyRouter>\n    );\n}\n\nexport default Router;","const initialState = {\r\n\tuserData: {\r\n\r\n\t},\r\n\tcurrentUserData: {\r\n\t\t\r\n\t},\r\n\tfilteredTickers: {\r\n\r\n\t},\r\n};\r\n\r\nexport default initialState;","export const AUTOCOMPLETE_TICKER_WITH_SAGA = 'TICKERS::AUTOCOMPLETE_TICKER_WITH_SAGA';\r\n\r\nexport const autoCompleteTickerWithSaga = (ticker, date, quantity, currency ) => {\r\n    return {\r\n        type: AUTOCOMPLETE_TICKER_WITH_SAGA,\r\n        ticker, date, quantity, currency\r\n    };\r\n};","import { calculatePortfolio } from '../../Functions/functions';\r\nimport { call, put } from '@redux-saga/core/effects';\r\n\r\nimport { calculatePortfolioCost } from '../actions/calculatePortfolioCost';\r\n\r\nexport const onCalculatePortfolioCostWithSaga = function* (action){\r\n    try {\r\n        const portfolioCost = yield call(calculatePortfolio, action.stock, action.pif, action.etf, action.bonds, action.forex);\r\n        yield put(calculatePortfolioCost(portfolioCost));\r\n    } catch (err) {\r\n        console.log(err);\r\n    };\r\n};","import { auth, db } from '../../services/firebase';\nimport { ref, set, remove } from '@firebase/database';\nimport { addTicker, getTickerInfo } from '../../Functions/functions';\nimport { call, put } from '@redux-saga/core/effects';\nimport { setTickersInfo } from '../actions/setTickersInfo';\nimport { autoCompleteTickerWithSaga } from '../actions/autoComplete';\n\nexport const onAddTickerWithSaga = function* (action) {\n    try {\n        const newTicker = yield ref(db, `${auth.currentUser.uid}/tickers/${action.tickerType}/${action.ticker}/data/${action.date}`);\n        yield set(newTicker, { ticker: action.ticker, description: action.description, quantity: action.quantity, cost: action.cost, total: action.total, roubleCost: action.roubleCost, roubleTotal: action.roubleTotal, currency: action.currency});\n        const tickerCurrent = yield ref(db, `${auth.currentUser.uid}/portfolio/${action.tickerType}/${action.ticker}/`);\n        yield set(tickerCurrent, {ticker: action.ticker, quantity: action.quantity, currency: action.currency, description: action.description});\n        yield put(autoCompleteTickerWithSaga(action.ticker, action.date, action.quantity, action.currency));\n    } catch (err) {\n        console.log(err);\n    };\n};\n\nexport const onDelTickerWithSaga = function* (action) {\n    try {\n        const tickerCurrent = yield ref(db, `${auth.currentUser.uid}/portfolio/${action.marketType}/${action.ticker}`);\n        yield remove(tickerCurrent);\n        const ticker = yield ref(db, `${auth.currentUser.uid}/tickers/${action.marketType}/${action.ticker}`);\n        yield remove(ticker);\n    } catch (err) {\n        console.log(err);\n    };\n};\n\nexport const onAutoCompleteTickersWithSaga = function* (action) {\n    try {\n        if (+(new Date(action.date)) < (+(new Date()) - 604800000)){\n            const autoCompleteAction = yield call(addTicker, action.ticker,  new Date(+(new Date(action.date)) + 604800000), action.quantity, action.currency);\n            yield put(autoCompleteAction);\n        }\n    } catch (err) {\n        console.log(err);\n    };\n};\n\nexport const onSetTickersInfoWithSaga = function* (action){\n    try {\n        const tickerTable = yield call(getTickerInfo, action.tickers, action.tickerType);\n        yield put(setTickersInfo(tickerTable, action.tickerType));\n    } catch (err) {\n        console.log(err);\n    };\n};","import { db } from '../../services/firebase';\r\nimport { ref, onValue } from '@firebase/database';\r\n\r\nimport { store } from '../store';\r\nimport { initUserData } from '../actions/initUserData';\r\n\r\nexport const onInitUserDataWithSaga = function* () {\r\n    try {\r\n        const tickers = yield ref(db);\r\n        yield onValue(tickers, (snapshot) => {\r\n            const data = snapshot.val();\r\n            store.dispatch(initUserData(data || {}));\r\n        });\r\n    } catch (err) {\r\n        console.log(err.message);\r\n    }\r\n};","import { takeLatest, takeEvery } from 'redux-saga/effects';\r\nimport { ADD_TICKER_WITH_SAGA } from './actions/addTicker';\r\nimport { AUTOCOMPLETE_TICKER_WITH_SAGA } from './actions/autoComplete';\r\nimport { CALCULATE_PORTFOLIO_COST_WITH_SAGA } from './actions/calculatePortfolioCost';\r\nimport { DEL_TICKER_WITH_SAGA } from './actions/delTicker';\r\n\r\nimport { INIT_INIT_USER_DATA_WITH_SAGA } from './actions/initUserData';\r\nimport { SET_TICKERS_INFO_WITH_SAGA } from './actions/setTickersInfo';\r\nimport { onCalculatePortfolioCostWithSaga } from './sagas/profileSaga';\r\nimport { onAddTickerWithSaga, onAutoCompleteTickersWithSaga, onDelTickerWithSaga, onSetTickersInfoWithSaga } from './sagas/tickersSaga';\r\nimport { onInitUserDataWithSaga } from './sagas/userDataSaga';\r\n\r\nfunction* mySaga() {\r\n\tyield takeLatest(INIT_INIT_USER_DATA_WITH_SAGA, onInitUserDataWithSaga);\r\n\tyield takeEvery(ADD_TICKER_WITH_SAGA, onAddTickerWithSaga);\r\n\tyield takeLatest(DEL_TICKER_WITH_SAGA, onDelTickerWithSaga);\r\n\tyield takeEvery(AUTOCOMPLETE_TICKER_WITH_SAGA, onAutoCompleteTickersWithSaga);\r\n\tyield takeEvery(SET_TICKERS_INFO_WITH_SAGA, onSetTickersInfoWithSaga);\r\n\tyield takeLatest(CALCULATE_PORTFOLIO_COST_WITH_SAGA, onCalculatePortfolioCostWithSaga);\r\n};\r\n\r\nexport default mySaga;","import { INIT_USER_DATA } from '../actions/initUserData';\nimport initialState from '../initialState';\n\nconst { userData } = initialState;\n\nfunction userDataReducer(state = userData, action) {\n    switch (action.type) {\n        case INIT_USER_DATA:\n            return {\n                ...action.userData\n            };\n\n        default: return state;\n    }\n};\n\nexport default userDataReducer;","\r\nimport { CALCULATE_PORTFOLIO_COST } from '../actions/calculatePortfolioCost';\r\nimport { SET_TICKERS_INFO } from '../actions/setTickersInfo';\r\nimport initialState from '../initialState';\r\n\r\nconst { currentUserData } = initialState;\r\n\r\nfunction currentUserDataReducer(state = currentUserData, action) {\r\n    switch (action.type) {\r\n        case SET_TICKERS_INFO:\r\n            return {\r\n                ...state,\r\n                [action.tickerType]: action.tickerTable\r\n            };\r\n\r\n        case CALCULATE_PORTFOLIO_COST:\r\n            return{\r\n                ...state,\r\n                portfolioCost: action.portfolioCost\r\n            }\r\n\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default currentUserDataReducer;","\r\nimport { ADD_FILTERED_TICKERS } from '../actions/addFilteredTickers';\r\nimport initialState from '../initialState';\r\n\r\nconst { filteredTickers } = initialState;\r\n\r\nfunction filteredTickersReducer(state = filteredTickers, action) {\r\n    switch (action.type) {\r\n        case ADD_FILTERED_TICKERS:\r\n            return {\r\n                ...action.filteredTickers\r\n            };\r\n\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default filteredTickersReducer;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport initialState from './initialState';\r\n\r\nimport mySaga from './sagas.js';\r\nimport userData from './reducers/userDataReducer';\r\nimport currentUserData from './reducers/currentUserDataReducer';\r\nimport filteredTickers from './reducers/filteredTickersReducer';\r\n\r\nexport const combine = combineReducers({ userData, currentUserData, filteredTickers });\r\n\r\nconst onErrorSaga = (error, stack) => { console.log('qqq' + error); console.log(stack) };\r\nconst options = { onError: onErrorSaga };\r\nconst sagaMiddleware = createSagaMiddleware(options);\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst persistConfig = {\r\n\tkey: 'root',\r\n\tstorage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, combine);\r\n\r\nexport const store = createStore(\r\n\tpersistedReducer,\r\n\tinitialState,\r\n\tcomposeEnhancers(applyMiddleware(sagaMiddleware)));\r\n\r\nsagaMiddleware.run(mySaga);\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/es/integration/react';\n\nimport { ThemeProvider, createTheme } from '@material-ui/core/styles';\n\nimport Router from './Components/Router';\nimport { store } from './store/store';\nimport { persistor } from './store/store';\n\nconst mainTheme = createTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: \"#708238\",\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: \"#0098FF\",\n\t\t},\n\t},\n});\n\nfunction App() {\n\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<PersistGate persistor={persistor}>\n\t\t\t\t<ThemeProvider theme={mainTheme}>\n\t\t\t\t\t\t<Router />\n\t\t\t\t</ThemeProvider>\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}