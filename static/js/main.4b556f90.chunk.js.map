{"version":3,"sources":["Components/SearchList/index.js","store/actions/addFilteredTickers.js","store/actions/addTicker.js","Functions/functions.js","Components/SearchForm/index.js","store/actions/delTicker.js","Components/Ticker/index.js","Components/Tickers/index.js","store/actions/initUserData.js","store/selectors/tickersSelectors.js","store/actions/autoComplete.js","store/actions/calculateYearProfit.js","Components/Main/index.js","utils/constants.js","hocs/PrivateRoute.js","hocs/PublicRoute.js","services/firebase.js","Components/SignUp/index.js","Components/LogIn/index.js","store/selectors/profileSelectors.js","store/actions/setTickersInfo.js","Components/MyTickers/index.js","store/actions/calculatePortfolioCost.js","Components/Profile/index.js","Components/Router/index.js","store/initialState.js","store/sagas/profileSaga.js","store/sagas/tickersSaga.js","store/sagas/userDataSaga.js","store/sagas.js","store/reducers/userDataReducer.js","store/reducers/currentUserDataReducer.js","store/reducers/filteredTickersReducer.js","store/store.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","searchListContainer","maxWidth","searchList","listStyle","padding","margin","addButton","border","color","backgroundColor","SearchList","props","classes","className","searchResult","map","item","onClick","event","submitTicker","ticker","descr","classcode","ADD_FILTERED_TICKERS","ADD_TICKER_WITH_SAGA","addTickerWithSaga","description","date","quantity","cost","total","roubleCost","roubleTotal","currency","tickerType","profitCurrencyAbs","profitCurrencyRel","profitRubAbs","profitRubRel","type","getHistoryUrl","startDate","finishDate","Math","round","Date","addTicker","prevData","friday","getDay","tickerUrl","infoUrl","getInfoUrl","currencyTicker","currencyUrl","currencyCourse","fetch","then","result","json","course","errmsg","c","data","s","Error","info","undefined","isNaN","toISOString","slice","toFixed","catch","error","console","log","getTickerInfo","tickers","a","USDUrl","EURUrl","USDresult","USDData","USDCurrency","EURresult","EURData","EURCurrency","tickerTable","RUBCost","RUBTotal","USDTotal","USDCost","EURTotal","EURCost","calculatePortfolio","RUBGrandTotal","USDGrandTotal","EURGrandTotal","args","forEach","list","Object","values","filterData","year","month","filteredData","keys","tickerItems","tickerItem","dates","filter","getMonth","getFullYear","filteredTickers","getYearProfit","allTickers","yearProfit","i","tickerNames","j","sumProfitCurrencyAbsTemp","sumProfitCurrencyRelTemp","sumProfitRubAbsTemp","sumProfitRubRelTemp","sumProfitCurrencyAbs","sumProfitCurrencyRel","sumProfitRubAbs","sumProfitRubRel","form","borderRadius","display","flexDirection","formSubmit","searchItem","marginBottom","SearchForm","useState","setTicker","setQuantity","setDate","search","setSearch","setSearchResult","setCurrency","dispatch","useDispatch","buyTicker","preventDefault","addAction","action","onSubmit","label","disabled","value","onChange","target","required","query","temp","push","symbol","searchedTicker","DEL_TICKER_WITH_SAGA","delTickerWithSaga","marketType","table","overflow","tickerName","width","alignItems","justifyContent","flexShrink","tickerDate","borderLeft","borderRight","tickerHeader","tickerDateCell","borderBottom","green","red","Ticker","lastDate","length","setSumProfitCurrencyAbs","setSumProfitCurrencyRel","setSumProfitRubAbs","setSumProfitRubRel","useEffect","Tickers","filteredTickersNames","delTicker","INIT_USER_DATA","initUserData","userData","INIT_INIT_USER_DATA_WITH_SAGA","getAlltickers","state","getFilteredStocks","stock","getFilteredPif","pif","getFilteredEtf","etf","getFilteredBonds","bonds","getFilteredForex","forex","AUTOCOMPLETE_TICKER_WITH_SAGA","autoCompleteTickerWithSaga","CALCULATE_YEAR_PROFIT","calculateYearProfit","CALCULATE_YEAR_PROFIT_WITH_SAGA","App","mainContainer","Main","filteredForex","useSelector","filteredStocks","filteredPif","filteredEtf","filteredBonds","calculateYearProfitWithSaga","HOMEPAGE","PrivateRoute","authenticated","rest","to","pathname","PublicRoute","auth","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","db","getDatabase","SignUp","email","setEmail","password","setPassword","setError","handlePassChange","useCallback","e","handleEmailChange","handleSubmit","createUserWithEmailAndPassword","message","placeholder","name","LogIn","signInWithEmailAndPassword","getPortfolio","portfolio","getMyCurrentStock","currentUserData","getMyCurrentPif","getMyCurrentEtf","getMyCurrentBonds","getMyCurrentForex","getMyProfileCost","portfolioCost","getMyYearProfit","SET_TICKERS_INFO","setTickersInfo","SET_TICKERS_INFO_WITH_SAGA","setTickersInfoWithSaga","tickerData","flexGrow","tickerDataCell","tickerHeaders","MyTickers","myProfit","CALCULATE_PORTFOLIO_COST","calculatePortfolioCost","CALCULATE_PORTFOLIO_COST_WITH_SAGA","Profile","myCurrentStock","myCurrentPif","myCurrentEtf","myCurrentBonds","myCurrentForex","myPortfolioCost","myYearProfit","calculatePortfolioCostWithSaga","currentUser","Router","authed","setAuthed","onAuthStateChanged","user","signOutUser","signOut","exact","path","initialState","onCalculatePortfolioCostWithSaga","call","put","onCalculateYearProfitWithSaga","onAddTickerWithSaga","ref","uid","newTicker","set","tickerCurrent","onDelTickerWithSaga","remove","onAutoCompleteTickersWithSaga","autoCompleteAction","onSetTickersInfoWithSaga","onInitUserDataWithSaga","onValue","snapshot","val","store","mySaga","takeLatest","takeEvery","userDataReducer","currentUserDataReducer","filteredTickersReducer","combine","combineReducers","options","onError","stack","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","key","storage","persistedReducer","persistReducer","createStore","applyMiddleware","run","persistor","persistStore","mainTheme","createTheme","palette","primary","main","secondary","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b556f90.chunk.js","sourcesContent":["import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n\tsearchListContainer: {\n\t\tmaxWidth: '500px',\n\t},\n\tsearchList: {\n\t\tlistStyle: 'none',\n\t\tpadding: '0',\n\t\tmargin: '0',\n\t},\n\taddButton: {\n\t\tborder: 'none',\n\t\t'&:hover': {\n\t\t\tcolor: '#fff',\n\t\t\tbackgroundColor: '#222',\n\t\t}\n\t},\n}));\n\nfunction SearchList(props) {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={classes.searchListContainer}>\n\t\t\t<ul className={classes.searchList}>\n\t\t\t\t{props.searchResult.map((item) =>\n\t\t\t\t\t<li key={item.ticker + item.classcode}><button onClick={(event) => props.submitTicker(event, item.ticker)} className={classes.addButton}>{item.descr}</button></li>\n\t\t\t\t)}\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n\nexport default SearchList;\n","export const ADD_FILTERED_TICKERS = 'TICKERS::ADD_FILTERED_TICKERS';\r\n\r\nexport const addFilteredTickers = (filteredTickers) => {\r\n    return {\r\n        type: ADD_FILTERED_TICKERS,\r\n        filteredTickers\r\n    };\r\n};","export const ADD_TICKER_WITH_SAGA = 'TICKERS::ADD_TICKER_WITH_SAGA';\n\nexport const addTickerWithSaga = (ticker, description, date, quantity, cost, total, roubleCost, roubleTotal, currency, tickerType, profitCurrencyAbs, profitCurrencyRel, profitRubAbs, profitRubRel) => {\n    return {\n        type: ADD_TICKER_WITH_SAGA,\n        ticker, description, date, quantity, cost, total, roubleCost, roubleTotal, currency, tickerType, profitCurrencyAbs, profitCurrencyRel, profitRubAbs, profitRubRel\n    };\n};","import { addFilteredTickers } from \"../store/actions/addFilteredTickers\";\r\nimport { addTickerWithSaga } from \"../store/actions/addTicker\";\r\n\r\nexport const getSearchUrl = (query) => {\r\n    return `https://api.bcs.ru/udfdatafeed/v1/search?query=${query}&limit=10&fulldescription=on`;\r\n};\r\n\r\nexport const getInfoUrl = (ticker) => {\r\n    return `https://api.bcs.ru/udfdatafeed/v1/symbols?symbol=${ticker}`;\r\n};\r\n\r\nexport const getHistoryUrl = (ticker, startDate, finishDate) => {\r\n    if (+startDate && +finishDate) {\r\n        return `https://api.bcs.ru/udfdatafeed/v1/history?symbol=${ticker}&resolution=d&from=${Math.round((+(new Date(startDate)))/1000)}&to=${Math.round((+(new Date(finishDate)))/1000)}`;\r\n    } else {\r\n        return `https://api.bcs.ru/udfdatafeed/v1/history?symbol=${ticker}&resolution=d&from=${Math.round((+(new Date()))/1000)}&to=${Math.round((+(new Date()))/1000)}`;\r\n    }\r\n    \r\n};\r\n\r\nexport const addTicker = (ticker, date, quantity, currency, prevData) => {\r\n    let friday = +(new Date(date));\r\n    while ((new Date(friday)).getDay() !== 5){\r\n        friday += 86400000;\r\n    }\r\n    const tickerUrl = getHistoryUrl(ticker, friday, friday + 82800000);\r\n    const infoUrl = getInfoUrl(ticker);\r\n    let currencyTicker = '';\r\n    if (currency === 'rur') {currencyTicker = ''} else if (currency === 'usd') {currencyTicker = 'RUR'} else if (currency === 'eur') {currencyTicker = 'EUR_RUB'};\r\n    const currencyUrl = getHistoryUrl(currencyTicker, friday, friday + 82800000);\r\n    let currencyCourse = 1;\r\n    \r\n        return fetch(currencyUrl)\r\n            .then(result => result.json())\r\n            .then(course =>{\r\n                if (course.errmsg === 'unknown_symbol'){\r\n                    currencyCourse = 1;\r\n                } else {\r\n                    currencyCourse = course.c[0];\r\n                }\r\n                return fetch(tickerUrl)\r\n                .then(result => result.json())\r\n                .then(data => {\r\n                    if(data.s === 'no_data'){ throw new Error ('Нет данных')}\r\n                    return fetch(infoUrl)\r\n                        .then(result => result.json())\r\n                        .then((info) => {\r\n                            if(prevData.ticker === undefined){\r\n                                const cost = (info.type !== 'bonds') ? data.c[0] : data.c[0] * 10;\r\n                                const total = (info.type !== 'bonds') ? data.c[0] * quantity : data.c[0] * quantity * 10;\r\n                                const roubleCost = (info.type !== 'bonds') ? data.c[0] * currencyCourse : data.c[0] * currencyCourse * 10;\r\n                                const roubleTotal = (info.type !== 'bonds') ? data.c[0] * currencyCourse * quantity : data.c[0] * currencyCourse * quantity * 10;\r\n                                if (isNaN(data.c[0])) {throw new Error('Нет данных')};\r\n                                return addTickerWithSaga(ticker, \r\n                                    info.description, \r\n                                    (new Date(friday)).toISOString().slice(0, 10), \r\n                                    quantity, \r\n                                    cost.toFixed(2), \r\n                                    total.toFixed(2), \r\n                                    roubleCost.toFixed(2), \r\n                                    roubleTotal.toFixed(2), \r\n                                    currency, \r\n                                    info.type,\r\n                                    0,\r\n                                    0,\r\n                                    0,\r\n                                    0);\r\n                            } else {\r\n                                const cost = (info.type !== 'bonds') ? data.c[0] : data.c[0] * 10;\r\n                                const total = (info.type !== 'bonds') ? data.c[0] * quantity : data.c[0] * quantity * 10;\r\n                                const roubleCost = (info.type !== 'bonds') ? data.c[0] * currencyCourse : data.c[0] * currencyCourse * 10;\r\n                                const roubleTotal = (info.type !== 'bonds') ? data.c[0] * currencyCourse * quantity : data.c[0] * currencyCourse * quantity * 10;\r\n                                const profitCurrencyAbs = (cost - prevData.cost) * prevData.quantity;\r\n                                const profitCurrencyRel = (cost - prevData.cost) / prevData.cost * 100;\r\n                                const profitRubAbs = (roubleCost - prevData.roubleCost) * prevData.quantity;\r\n                                const profitRubRel = (roubleCost - prevData.roubleCost) / prevData.roubleCost * 100;\r\n                                if (isNaN(data.c[0])) {throw new Error('Нет данных')};\r\n                                return addTickerWithSaga(ticker, \r\n                                    info.description, \r\n                                    (new Date(friday)).toISOString().slice(0, 10), \r\n                                    quantity, cost.toFixed(2), \r\n                                    total.toFixed(2), \r\n                                    roubleCost.toFixed(2), \r\n                                    roubleTotal.toFixed(2), \r\n                                    currency, \r\n                                    info.type,\r\n                                    profitCurrencyAbs.toFixed(2),\r\n                                    profitCurrencyRel.toFixed(2),\r\n                                    profitRubAbs.toFixed(2),\r\n                                    profitRubRel.toFixed(2));\r\n                            }\r\n                            \r\n                            \r\n                        })\r\n                        .catch(error => {\r\n                            console.log(error);\r\n                        })\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n};\r\n\r\nexport const getTickerInfo = async (tickers, type) => {\r\n    const USDUrl = getHistoryUrl('RUR',null,null);\r\n    const EURUrl = getHistoryUrl('EUR_RUB',null,null);\r\n    const USDresult = await fetch(USDUrl);\r\n    const USDData = await USDresult.json();\r\n    const USDCurrency = USDData.c[0];\r\n    const EURresult = await fetch(EURUrl);\r\n    const EURData = await EURresult.json();\r\n    const EURCurrency = EURData.c[0];\r\n    let RUBCost;\r\n    let RUBTotal; \r\n    let USDCost;\r\n    let USDTotal;\r\n    let EURCost;\r\n    let EURTotal;\r\n\r\n    let tickerTable = {};\r\n    for (let ticker in tickers) {\r\n        const tickerUrl = getHistoryUrl(ticker,null,null);\r\n        const result = await fetch(tickerUrl);\r\n        const data = await result.json(); \r\n        \r\n        if (tickers[ticker].currency === 'rur'){\r\n            RUBCost = data.c[0];\r\n            RUBTotal = RUBCost * tickers[ticker].quantity; \r\n            USDCost = RUBCost / USDCurrency;\r\n            USDTotal = USDCost * tickers[ticker].quantity;\r\n            EURCost = RUBCost / EURCurrency;\r\n            EURTotal = EURCost  * tickers[ticker].quantity;\r\n        } else if (tickers[ticker].currency === 'usd') {\r\n            USDCost = data.c[0];\r\n            USDTotal = USDCost * tickers[ticker].quantity;\r\n            RUBCost = USDCost * USDCurrency;\r\n            RUBTotal = RUBCost * tickers[ticker].quantity; \r\n            EURCost = RUBCost / EURCurrency;\r\n            EURTotal = EURCost  * tickers[ticker].quantity;\r\n        } else if (tickers[ticker].currency === 'eur') {\r\n            EURCost = data.c[0];\r\n            EURTotal = EURCost * tickers[ticker].quantity;\r\n            RUBCost = EURCost * EURCurrency;\r\n            RUBTotal = RUBCost * tickers[ticker].quantity; \r\n            USDCost = RUBCost / USDCurrency;\r\n            USDTotal = USDCost  * tickers[ticker].quantity;\r\n        }\r\n        if (type === 'bonds'){\r\n            RUBCost *= 10;\r\n            RUBTotal *= 10; \r\n            USDCost *= 10;\r\n            USDTotal *= 10;\r\n            EURCost *= 10;\r\n            EURTotal *= 10;\r\n        }\r\n        \r\n        tickerTable = {...tickerTable, \r\n            [ticker]: {\r\n                quantity: tickers[ticker].quantity, \r\n                RUBCost: RUBCost.toFixed(2), \r\n                RUBTotal: RUBTotal.toFixed(2), \r\n                USDCost: USDCost.toFixed(2), \r\n                USDTotal: USDTotal.toFixed(2),\r\n                EURCost: EURCost.toFixed(2), \r\n                EURTotal: EURTotal.toFixed(2),\r\n                currency: tickers[ticker].currency,\r\n                description: tickers[ticker].description\r\n            },\r\n                }\r\n    }\r\n    return tickerTable;\r\n};\r\n\r\nexport const calculatePortfolio = (...args) => {\r\n    let RUBGrandTotal = 0;\r\n    let USDGrandTotal = 0;\r\n    let EURGrandTotal = 0;\r\n    args.forEach((list) => {\r\n        Object.values(list).forEach((item) => {\r\n            RUBGrandTotal += +item.RUBTotal;\r\n            USDGrandTotal += +item.USDTotal;\r\n            EURGrandTotal += +item.EURTotal;\r\n        })\r\n    });\r\n    return({RUBGrandTotal: RUBGrandTotal.toFixed(1), USDGrandTotal: USDGrandTotal.toFixed(1), EURGrandTotal: EURGrandTotal.toFixed(1)});\r\n};\r\n\r\nexport const filterData = (data, year, month) => {\r\n    \r\n    let filteredData = {};\r\n    const tickerTypes = Object.keys(data);\r\n    tickerTypes.forEach((tickerType) => {\r\n        const tickerItems = Object.keys(data[tickerType]);\r\n        filteredData = {\r\n            ...filteredData,\r\n            [tickerType]: {}\r\n        };\r\n        tickerItems.forEach((tickerItem) => {\r\n            const dates = Object.keys(data[tickerType][tickerItem].data);\r\n            filteredData = {\r\n                ...filteredData,\r\n                [tickerType]: {\r\n                    ...filteredData[tickerType],\r\n                    [tickerItem]: {data:{}}\r\n                }\r\n            };\r\n            const filteredDates = dates.filter(date => ((new Date(date).getMonth() === month) && (new Date(date).getFullYear() === year)));\r\n            filteredDates.forEach((date) => {\r\n                filteredData = {\r\n                    ...filteredData,\r\n                    [tickerType]: {\r\n                        ...filteredData[tickerType],\r\n                        [tickerItem]: {data:{\r\n                            ...filteredData[tickerType][tickerItem].data,\r\n                            [date]: data[tickerType][tickerItem].data[date]\r\n                        }}\r\n                    }\r\n                };\r\n            });\r\n            \r\n        });\r\n    });\r\n    return addFilteredTickers(filteredData);\r\n};\r\n\r\n\r\nexport const getYearProfit = (allTickers) => {\r\n\r\n    let yearProfit = {};\r\n\r\n    Object.values(allTickers).forEach((type, i) => {\r\n        const tickerNames = Object.keys(type);\r\n        yearProfit = {...yearProfit,\r\n            [Object.keys(allTickers)[i]]: {}\r\n        };\r\n        Object.values(type).forEach((ticker, j) => {\r\n            let sumProfitCurrencyAbsTemp = 0;\r\n            let sumProfitCurrencyRelTemp = 1;\r\n            let sumProfitRubAbsTemp = 0;\r\n            let sumProfitRubRelTemp = 1;\r\n            Object.values(ticker.data).forEach((date) => {\r\n                sumProfitCurrencyAbsTemp += +date.profitCurrencyAbs;\r\n                sumProfitCurrencyRelTemp *= 1 + date.profitCurrencyRel/100;\r\n                sumProfitRubAbsTemp += +date.profitRubAbs;\r\n                sumProfitRubRelTemp *= 1 + date.profitRubRel/100;\r\n            });\r\n\r\n            sumProfitCurrencyRelTemp = (sumProfitCurrencyRelTemp - 1) * 100;\r\n            sumProfitRubRelTemp = (sumProfitRubRelTemp - 1) * 100;\r\n\r\n            yearProfit = {...yearProfit,  \r\n                [Object.keys(allTickers)[i]]: {\r\n                    ...yearProfit[Object.keys(allTickers)[i]],\r\n                    [tickerNames[j]]: {\r\n                        sumProfitCurrencyAbs: sumProfitCurrencyAbsTemp.toFixed(2),\r\n                        sumProfitCurrencyRel: sumProfitCurrencyRelTemp.toFixed(2),\r\n                        sumProfitRubAbs: sumProfitRubAbsTemp.toFixed(2),\r\n                        sumProfitRubRel: sumProfitRubRelTemp.toFixed(2)\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n    return yearProfit;\r\n};","import React, { useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core';\nimport SearchList from '../SearchList'\nimport {addTicker, getSearchUrl} from '../../Functions/functions.js';\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        maxWidth: '400px',\n        border: '1px solid black',\n        borderRadius: '10px',\n        display: 'flex',\n        flexDirection: 'column',\n        margin: '10px',\n    },\n    formSubmit: {\n        display: 'block',\n    },\n    searchItem: {\n        margin: '5px 10px',\n        marginBottom: '5px'\n    },\n}));\n\nfunction SearchForm() {\n\n    const [ticker, setTicker] = useState('');\n    const [quantity, setQuantity] = useState('');\n    const [date, setDate] = useState('');\n    const [search, setSearch] = useState('');\n    const [searchResult, setSearchResult] = useState([]);\n    const [currency, setCurrency] = useState('rur');\n\n    const handleTicker = (event) => {\n        setTicker(event.target.value);\n    };\n\n    const handleQuantity = (event) => {\n        setQuantity(event.target.value);\n    };\n\n    const handleDate = (event) => {\n        setDate(event.target.value);\n    };\n\n    const submitTicker = (event, searchedTicker) => {\n        event.preventDefault();\n        setTicker(searchedTicker);\n    }\n\n    const handleCurrency = (event) => {\n        setCurrency(event.target.value);\n    };\n\n    const dispatch = useDispatch();\n\n    const handleSearch = (event) => {\n        setSearch(event.target.value);\n        const search = getSearchUrl(event.target.value);\n        fetch(search)\n            .then(result => result.json())\n            .then(data => {\n                let temp = [];\n                data.forEach((item, i) => {\n                    temp.push({\n                        ticker: item.symbol,\n                        descr: item.description,\n                        classcode: item.classcode\n                    });\n                });\n                setSearchResult(temp);\n            })\n            .catch(error => {\n                console.log(error);\n            })\n\n    };\n\n    const buyTicker = async (event) => {\n        event.preventDefault();\n        setSearchResult([]);\n        const addAction = await addTicker(ticker, date, quantity, currency, {});\n        addAction && dispatch(addAction);\n    };\n\n    const classes = useStyles();\n\n    return (\n        <form action=\"\" onSubmit={buyTicker} className={classes.form} label=\"Ticker\">\n            <input type=\"text\" disabled className={classes.searchItem} value={ticker} onChange={handleTicker} required></input>\n            <select required onChange={handleCurrency} className={classes.searchItem}>\n                <option value='rur'>rur</option>\n                <option value='usd'>usd</option>\n                <option value='eur'>eur</option>\n            </select>\n            <input type=\"number\" className={classes.searchItem} value={quantity} onChange={handleQuantity} required></input>\n            <input type=\"date\" className={classes.searchItem} value={date} onChange={handleDate} required></input>\n            <input type=\"submit\" className={classes.formSubmit + ' ' + classes.searchItem} value=\"Add\"></input>\n            <input type=\"text\" className={classes.searchItem} value={search} onChange={handleSearch}></input>\n            <SearchList className={classes.searchItem} searchResult={searchResult} submitTicker={submitTicker} />\n        </form>\n\n    );\n}\n\nexport default SearchForm;\n","export const DEL_TICKER_WITH_SAGA = 'TICKERS::DEL_TICKER_WITH_SAGA';\r\n\r\nexport const delTickerWithSaga = (ticker, marketType) => {\r\n    return {\r\n        type: DEL_TICKER_WITH_SAGA,\r\n        ticker, marketType\r\n    };\r\n};","import React, { useEffect, useState } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttable: {\r\n\t\tmaxWidth: '100%'\r\n\t},\r\n\tticker: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n\t\tborder: '1px solid black',\r\n\t\tmargin: '10px',\r\n\t\toverflow: 'auto'\r\n\t},\r\n\ttickerName: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\twidth: '110px',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'space-around',\r\n\t\tpadding: '5px',\r\n\t\tflexShrink: '0'\r\n\t},\r\n\ttickerTable: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row'\r\n\t},\r\n\ttickerDate: {\r\n\t\twidth: '100px',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tborderLeft: '1px solid black',\r\n\t\t'&:last-child': {\r\n\t\t\tborderRight: '1px solid black'\r\n\t\t}\r\n\t},\r\n    tickerHeader: {\r\n        width:'170px',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tborderLeft: '1px solid black',\r\n\t\t'&:last-child': {\r\n\t\t\tborderRight: '1px solid black'\r\n\t\t}\r\n\t},\r\n\ttickerDateCell: {\r\n\t\tborderBottom: '1px solid black',\r\n\t\tmargin: '0',\r\n\t\tpadding: '5px',\r\n\t\t'&:last-child': {\r\n\t\t\tborderBottom: 'none'\r\n\t\t}\r\n\t},\r\n\tgreen: {\r\n\t\tbackgroundColor: '\t#66CC66',\r\n\t},\r\n\tred: {\r\n\t\tbackgroundColor: '#FF6666',\r\n\t},\r\n}));\r\n\r\n\r\n\r\nfunction Ticker(props) {\r\n\r\n    const lastDate = Object.keys(props.ticker.data)[Object.keys(props.ticker.data).length - 1];\r\n\r\n\tconst [sumProfitCurrencyAbs, setSumProfitCurrencyAbs] = useState(0);\r\n\tconst [sumProfitCurrencyRel, setSumProfitCurrencyRel] = useState(1);\r\n\tconst [sumProfitRubAbs, setSumProfitRubAbs] = useState(0);\r\n\tconst [sumProfitRubRel, setSumProfitRubRel] = useState(1);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet sumProfitCurrencyAbsTemp = 0;\r\n\t\tlet sumProfitCurrencyRelTemp = 1;\r\n\t\tlet sumProfitRubAbsTemp = 0;\r\n\t\tlet sumProfitRubRelTemp = 1;\r\n\t\tObject.values(props.ticker.data).forEach((date) => {\r\n\t\t\tsumProfitCurrencyAbsTemp += +date.profitCurrencyAbs;\r\n\t\t\tsumProfitCurrencyRelTemp *= 1 + date.profitCurrencyRel/100;\r\n\t\t\tsumProfitRubAbsTemp += +date.profitRubAbs;\r\n\t\t\tsumProfitRubRelTemp *= 1 + date.profitRubRel/100;\r\n\t\t});\r\n\t\tsumProfitCurrencyRelTemp = (sumProfitCurrencyRelTemp - 1) * 100;\r\n\t\tsumProfitRubRelTemp = (sumProfitRubRelTemp - 1) * 100;\r\n\r\n\t\tsetSumProfitCurrencyAbs(sumProfitCurrencyAbsTemp);\r\n\t\tsetSumProfitCurrencyRel(sumProfitCurrencyRelTemp);\r\n\t\tsetSumProfitRubAbs(sumProfitRubAbsTemp);\r\n\t\tsetSumProfitRubRel(sumProfitRubRelTemp);\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\r\n\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div className={classes.tickerTable}>\r\n            <div className={classes.tickerHeader}>\r\n                <p className={classes.tickerDateCell}>Дата</p>\r\n\t\t\t\t<p className={classes.tickerDateCell}>Количество</p>\r\n\t\t\t\t<p className={classes.tickerDateCell}>Стоимость</p>\r\n\t\t\t\t<p className={classes.tickerDateCell}>Общая стоимость</p>\r\n\t\t\t\t{((props.ticker.data[lastDate].currency !== 'rur') ? <p className={classes.tickerDateCell}>Стоимость в Р</p> : '')}\r\n\t\t\t\t{((props.ticker.data[lastDate].currency !== 'rur') ? <p className={classes.tickerDateCell}>Общая стоимость в Р</p> : '')}\r\n\t\t\t\t<p className={classes.tickerDateCell}>Доходность, абс</p>\r\n\t\t\t\t<p className={classes.tickerDateCell}>Доходность, %</p>\r\n\t\t\t\t{((props.ticker.data[lastDate].currency !== 'rur') ? <p className={classes.tickerDateCell}>Доходность в Р, абс</p> : '')}\r\n\t\t\t\t{((props.ticker.data[lastDate].currency !== 'rur') ? <p className={classes.tickerDateCell}>Доходность в Р, %</p> : '')}\r\n            </div>\r\n\t\t\t{Object.values(props.ticker.data).map((date, i) =>\r\n\t\t\t\t<div key={date.ticker + Object.keys(props.ticker.data)[i]} className={classes.tickerDate}>\r\n\t\t\t\t\t<p className={classes.tickerDateCell}>{Object.keys(props.ticker.data)[i]}</p>\r\n\t\t\t\t\t<p className={classes.tickerDateCell}>{date.quantity}</p>\r\n\t\t\t\t\t<p className={classes.tickerDateCell}>{date.cost}</p>\r\n\t\t\t\t\t<p className={classes.tickerDateCell}>{date.total}</p>\r\n\t\t\t\t\t{((date.currency !== 'rur') ? <p className={classes.tickerDateCell}>{date.roubleCost}</p> : '')}\r\n\t\t\t\t\t{((date.currency !== 'rur') ? <p className={classes.tickerDateCell}>{date.roubleTotal}</p> : '')}\r\n\t\t\t\t\t<p className={classes.tickerDateCell + ' ' + (date.profitCurrencyAbs >= 0 ? classes.green : classes.red)}>{date.profitCurrencyAbs + ' ' + date.currency}</p>\r\n\t\t\t\t\t<p className={classes.tickerDateCell + ' ' + (date.profitCurrencyAbs >= 0 ? classes.green : classes.red)}>{date.profitCurrencyRel + ' %'}</p>\r\n\t\t\t\t\t{((date.currency !== 'rur') ? <p className={classes.tickerDateCell + ' ' + (date.profitRubAbs >= 0 ? classes.green : classes.red)}>{date.profitRubAbs + ' Р'}</p> : '')}\r\n\t\t\t\t\t{((date.currency !== 'rur') ? <p className={classes.tickerDateCell + ' ' + (date.profitRubAbs >= 0 ? classes.green : classes.red)}>{date.profitRubRel + ' %'}</p> : '')}\r\n\t\t\t\t</div>\r\n\t    \t)}\r\n\t\t\t<div className={classes.tickerHeader}>\r\n                <p className={classes.tickerDateCell}>-</p>\r\n\t\t\t\t<p className={classes.tickerDateCell}>-</p>\r\n\t\t\t\t<p className={classes.tickerDateCell}>-</p>\r\n\t\t\t\t<p className={classes.tickerDateCell}>-</p>\r\n\t\t\t\t{((props.ticker.data[lastDate].currency !== 'rur') ? <p className={classes.tickerDateCell}>-</p> : '')}\r\n\t\t\t\t{((props.ticker.data[lastDate].currency !== 'rur') ? <p className={classes.tickerDateCell}>-</p> : '')}\r\n\t\t\t\t<p className={classes.tickerDateCell + ' ' + (sumProfitCurrencyAbs >= 0 ? classes.green : classes.red)}>{sumProfitCurrencyAbs.toFixed(2) + ' ' + props.ticker.data[lastDate].currency}</p>\r\n\t\t\t\t<p className={classes.tickerDateCell + ' ' + (sumProfitCurrencyAbs >= 0 ? classes.green : classes.red)}>{sumProfitCurrencyRel.toFixed(2) + ' %'}</p>\r\n\t\t\t\t{((props.ticker.data[lastDate].currency !== 'rur') ? <p className={classes.tickerDateCell + ' ' + (sumProfitRubAbs >= 0 ? classes.green : classes.red)}>{sumProfitRubAbs.toFixed(2) + ' Р'}</p> : '')}\r\n\t\t\t\t{((props.ticker.data[lastDate].currency !== 'rur') ? <p className={classes.tickerDateCell + ' ' + (sumProfitRubAbs >= 0 ? classes.green : classes.red)}>{sumProfitRubRel.toFixed(2) + ' %'}</p> : '')}\r\n            </div>\r\n    \t</div>\r\n\t);\r\n}\r\n\r\nexport default Ticker;","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch } from 'react-redux';\nimport { delTickerWithSaga } from '../../store/actions/delTicker';\nimport Ticker from '../Ticker';\n\nconst useStyles = makeStyles((theme) => ({\n\ttable: {\n\t\tmaxWidth: '100%'\n\t},\n\tticker: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t\tborder: '1px solid black',\n\t\tmargin: '10px',\n\t\toverflow: 'auto'\n\t},\n\tdescription:{\n\t\tmargin: '5px'\n\t},\n\ttickerName: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\twidth: '110px',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'space-around',\n\t\tpadding: '5px',\n\t\tflexShrink: '0'\n\t},\n}));\n\nfunction Tickers(props) {\n\tconst dispatch = useDispatch();\n\n\tconst delTicker = (ticker, marketType) => {\n\t\tdispatch(delTickerWithSaga(ticker, marketType));\n\t};\n\n\tconst classes = useStyles();\n\n\tconst filteredTickers = Object.values(props.filteredTickers || {});\n\tconst filteredTickersNames = Object.keys(props.filteredTickers || {});\n\n\treturn (\n\t\t<div>\n\t\t\t<div className={classes.table}>\n\t\t\t\t{filteredTickers.map((ticker, i) =>\n\t\t\t\t\t(Object.keys(ticker.data).length !== 0)&&(<div key={filteredTickersNames[i]} className={classes.ticker}>\n\t\t\t\t\t\t<div className={classes.tickerName}>\n\t\t\t\t\t\t\t<p className={classes.description}>{filteredTickersNames[i]}</p>\n\t\t\t\t\t\t\t<p className={classes.description}>{ticker.data[Object.keys(ticker.data)[Object.keys(ticker.data).length - 1]].description}</p>\n\t\t\t\t\t\t\t<p className={classes.description}>{ticker.data[Object.keys(ticker.data)[Object.keys(ticker.data).length - 1]].currency}</p>\n\t\t\t\t\t\t\t<button onClick={() => delTicker(filteredTickersNames[i], props.type)}>del</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Ticker ticker={ticker}/>\n\n\t\t\t\t\t</div>)\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Tickers;","export const INIT_USER_DATA = 'USER::INIT_USER_DATA';\n\nexport const initUserData = (userData) => {\n    return {\n        type: INIT_USER_DATA,\n        userData\n    };\n};\n\nexport const INIT_INIT_USER_DATA_WITH_SAGA = 'USER::INIT_USER_DATA_WITH_SAGA';\n\nexport const initUserDataWithSaga = () => {\n    return {\n        type: INIT_INIT_USER_DATA_WITH_SAGA,\n    };\n};","export function getStocks(state) { if (state.userData.stock) { return state.userData.tickers.stock} else { return {} } };\r\nexport function getPif(state) { if (state.userData.pif) {return state.userData.tickers.pif}  else {return {}} };\r\nexport function getEtf(state) { if (state.userData.etf) {return state.userData.tickers.etf}  else {return {}} };\r\nexport function getBonds(state) { if (state.userData.bonds) {return state.userData.tickers.bonds} else {return {}} };\r\nexport function getForex(state) { if (state.userData.forex) {return state.userData.tickers.forex} else { return {}} };\r\nexport function getAlltickers(state) { if (state.userData.tickers) {return state.userData.tickers} else { return {}} };\r\n\r\nexport function getFilteredStocks(state) { if (state.filteredTickers.stock) { return state.filteredTickers.stock} else { return {} } };\r\nexport function getFilteredPif(state) { if (state.filteredTickers.pif) {return state.filteredTickers.pif}  else {return {}} };\r\nexport function getFilteredEtf(state) { if (state.filteredTickers.etf) {return state.filteredTickers.etf}  else {return {}} };\r\nexport function getFilteredBonds(state) { if (state.filteredTickers.bonds) {return state.filteredTickers.bonds} else {return {}} };\r\nexport function getFilteredForex(state) { if (state.filteredTickers.forex) {return state.filteredTickers.forex} else { return {}} };","export const AUTOCOMPLETE_TICKER_WITH_SAGA = 'TICKERS::AUTOCOMPLETE_TICKER_WITH_SAGA';\r\n\r\nexport const autoCompleteTickerWithSaga = (ticker, date, quantity, currency, prevData ) => {\r\n    return {\r\n        type: AUTOCOMPLETE_TICKER_WITH_SAGA,\r\n        ticker, date, quantity, currency, prevData\r\n    };\r\n};","export const CALCULATE_YEAR_PROFIT = 'PROFILE::CALCULATE_YEAR_PROFIT';\r\n\r\nexport const calculateYearProfit = ( yearProfit ) => {\r\n    return {\r\n        type: CALCULATE_YEAR_PROFIT,\r\n        yearProfit\r\n    };\r\n};\r\n\r\nexport const CALCULATE_YEAR_PROFIT_WITH_SAGA = 'PROFILE::CALCULATE_YEAR_PROFIT_WITH_SAGA';\r\n\r\nexport const calculateYearProfitWithSaga = (allTickers ) => {\r\n    return {\r\n        type: CALCULATE_YEAR_PROFIT_WITH_SAGA,\r\n        allTickers  \r\n    };\r\n};","import React, { useEffect, useState } from 'react';\nimport SearchForm from '../SearchForm'\n\nimport Tickers from '../Tickers'\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { initUserDataWithSaga } from '../../store/actions/initUserData';\nimport { getAlltickers, getFilteredBonds, getFilteredEtf, getFilteredForex, getFilteredPif, getFilteredStocks } from '../../store/selectors/tickersSelectors';\nimport { makeStyles } from '@material-ui/core';\nimport { filterData } from '../../Functions/functions';\nimport { autoCompleteTickerWithSaga } from '../../store/actions/autoComplete';\nimport { calculateYearProfitWithSaga } from '../../store/actions/calculateYearProfit';\n\nconst useStyles = makeStyles((theme) => ({\n    App: {\n        margin: '0 auto'\n    },\n    mainContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: '#EEE'\n    },\n}));\n\nfunction Main() {\n\n    const dispatch = useDispatch();\n\n    const filteredForex = useSelector(getFilteredForex);\n    const filteredStocks = useSelector(getFilteredStocks);\n    const filteredPif = useSelector(getFilteredPif);\n    const filteredEtf = useSelector(getFilteredEtf);\n    const filteredBonds = useSelector(getFilteredBonds);\n    const allTickers = useSelector(getAlltickers);\n\n    const [date, setDate] = useState((new Date()).toISOString().slice(0, 7));\n\n    const handleDate = (event) => {\n        setDate(event.target.value);\n    };\n\n    useEffect(() => {\n        dispatch(initUserDataWithSaga());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n\n        Object.values(allTickers).forEach((type) => {\n            Object.values(type).forEach((ticker, i) => {\n                const prevData = {\n                    ticker: Object.keys(type)[i],\n                    quantity: Object.values(ticker.data)[Object.keys(ticker.data).length - 1].quantity,\n                    cost: Object.values(ticker.data)[Object.keys(ticker.data).length - 1].cost,\n                    total:Object.values(ticker.data)[Object.keys(ticker.data).length - 1].total,\n                    roubleCost: Object.values(ticker.data)[Object.keys(ticker.data).length - 1].roubleCost,\n                    roubleTotal: Object.values(ticker.data)[Object.keys(ticker.data).length - 1].roubleTotal\n                };\n                dispatch(autoCompleteTickerWithSaga(Object.keys(type)[i], \n                Object.keys(ticker.data)[Object.keys(ticker.data).length - 1], \n                Object.values(ticker.data)[Object.keys(ticker.data).length - 1].quantity, \n                Object.values(ticker.data)[Object.keys(ticker.data).length - 1].currency),\n                prevData);\n            });\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        dispatch(filterData(allTickers, new Date(date).getFullYear(), new Date(date).getMonth()));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [date]);\n\n    useEffect(() => {\n        dispatch(calculateYearProfitWithSaga(allTickers));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.App + ' ' + classes.mainContainer}>\n            <input type='month' onChange={handleDate} value={date}/>\n            <SearchForm />\n            <div>Валюта</div>\n            <Tickers  filteredTickers={filteredForex} type ='forex'/>\n            <div>Акции</div>\n            <Tickers  filteredTickers={filteredStocks} type ='stock'/>\n            <div>Фонды</div>\n            <Tickers filteredTickers={filteredPif} type ='pif'/>\n            <Tickers filteredTickers={filteredEtf} type ='etf'/>\n            <div>Облигации</div>\n            <Tickers filteredTickers={filteredBonds} type ='bonds'/>\n        </div>\n    );\n}\n\nexport default Main;","export const URL_NEWS = \"https://api.currentsapi.services/v1/latest-news?language=ru&apiKey=6qmiCnF5XcC6Zt8s4fj5gRg9kBKB58XFqw8Rw6QqsYOtD1M8\";\r\nexport const URL_WEATHER = 'https://api.openweathermap.org/data/2.5/weather?id=498817&appid=f0694cc740867c7440b3be0552c0bf8f';\r\n\r\nexport const HOMEPAGE = \"\";\r\n\r\nexport const MKRKETSTACK_APIKEY ='880bb985b6ee8c60422ef715002a485b';","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport {HOMEPAGE} from '../utils/constants';\n\nexport default function PrivateRoute({ authenticated, ...rest }) {\n  return authenticated ? (\n    <Route {...rest} />\n  ) : (\n    <Redirect to={{ pathname: `${HOMEPAGE}/login` }} />\n  );\n};","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { HOMEPAGE } from '../utils/constants';\n\nexport default function PublicRoute({ authenticated, ...rest }) {\n  return !authenticated ? <Route {...rest} /> : <Redirect to={`${HOMEPAGE}/`} />;\n};","import { getAuth } from \"@firebase/auth\";\nimport { getDatabase } from \"@firebase/database\";\nimport { initializeApp } from \"firebase/app\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAS0Sazo-Bbg-TouSxSrenj5hTYa5bnjN8\",\n  authDomain: \"investor-8a0c2.firebaseapp.com\",\n  projectId: \"investor-8a0c2\",\n  storageBucket: \"investor-8a0c2.appspot.com\",\n  messagingSenderId: \"949350207446\",\n  appId: \"1:949350207446:web:c6cf85c9033c3ed2491e77\"\n};\n\nexport const firebaseInitialize = initializeApp(firebaseConfig);\nexport const auth = getAuth();\nexport const db = getDatabase();","import React, { useState, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from '../../services/firebase';\n\nfunction SignUp() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handlePassChange = useCallback((e) => {\n    setPassword(e.target.value);\n  },[]);\n\n  const handleEmailChange = useCallback((e) => {\n    setEmail(e.target.value);\n  },[]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <p>Fill in the form below to register new account.</p>\n        <div>\n          <input\n            placeholder=\"Email\"\n            name=\"email\"\n            type=\"email\"\n            onChange={handleEmailChange}\n            value={email}\n          />\n        </div>\n        <div>\n          <input\n            placeholder=\"Password\"\n            name=\"password\"\n            onChange={handlePassChange}\n            value={password}\n            type=\"password\"\n          />\n        </div>\n        <div>\n          {error && <p>{error}</p>}\n          <button type=\"submit\">Login</button>\n        </div>\n        <hr />\n        <p>\n          Already have an account? <Link to=\"/gbCourse5Hw/login\">Sign in</Link>\n        </p>\n      </form>\n    </div>\n  );\n};\nexport default SignUp;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from '../../services/firebase';\n\nfunction LogIn() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handlePassChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <p>Fill in the form below to login to your account.</p>\n        <div>\n          <input\n            placeholder=\"Email\"\n            name=\"email\"\n            type=\"email\"\n            onChange={handleEmailChange}\n            value={email}\n          />\n        </div>\n        <div>\n          <input\n            placeholder=\"Password\"\n            name=\"password\"\n            onChange={handlePassChange}\n            value={password}\n            type=\"password\"\n          />\n        </div>\n        <div>\n          {error && <p>{error}</p>}\n          <button type=\"submit\">Login</button>\n        </div>\n        <hr />\n        <p>\n          Don't have an account? <Link to=\"/gbCourse5Hw/signup\">Sign up</Link>\n        </p>\n      </form>\n    </div>\n  );\n};\nexport default LogIn;","export function getPortfolio(state) { if (state.userData.portfolio) { return state.userData.portfolio} else { return {} } };\r\n\r\nexport function getMyCurrentStock(state) { if (state.currentUserData.stock) { return state.currentUserData.stock} else { return {} } };\r\nexport function getMyCurrentPif(state) { if (state.currentUserData.pif) { return state.currentUserData.pif} else { return {} } };\r\nexport function getMyCurrentEtf(state) { if (state.currentUserData.etf) { return state.currentUserData.etf} else { return {} } };\r\nexport function getMyCurrentBonds(state) { if (state.currentUserData.bonds) { return state.currentUserData.bonds} else { return {} } };\r\nexport function getMyCurrentForex(state) { if (state.currentUserData.forex) { return state.currentUserData.forex} else { return {} } };\r\n\r\nexport function getMyProfileCost(state) { if (state.currentUserData.portfolioCost) { return state.currentUserData.portfolioCost} else { return {} } };\r\n\r\nexport function getMyYearProfit(state) { if (state.currentUserData.yearProfit) { return state.currentUserData.yearProfit} else { return {} } }","export const SET_TICKERS_INFO = 'PROFILE::SET_TICKERS_INFO';\r\n\r\nexport const setTickersInfo = ( tickerTable, tickerType) => {\r\n    return {\r\n        type: SET_TICKERS_INFO,\r\n        tickerTable,\r\n        tickerType\r\n    };\r\n};\r\n\r\nexport const SET_TICKERS_INFO_WITH_SAGA = 'PROFILE::SET_TICKERS_INFO_WITH_SAGA';\r\n\r\nexport const setTickersInfoWithSaga = (tickers, tickerType ) => {\r\n    return {\r\n        type: SET_TICKERS_INFO_WITH_SAGA,\r\n        tickers,\r\n        tickerType   \r\n    };\r\n};","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch } from 'react-redux';\r\nimport { delTickerWithSaga } from '../../store/actions/delTicker';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttable: {\r\n\t\tmaxWidth: '400px'\r\n\t},\r\n\tticker: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n\t\tborder: '1px solid black',\r\n\t\tmargin: '10px',\r\n\t},\r\n\ttickerName: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\twidth: '110px',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'space-around',\r\n\t\tpadding: '5px',\r\n\t\tflexShrink: '0'\r\n\t},\r\n\ttickerTable: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row'\r\n\t},\r\n\ttickerData: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tborderLeft: '1px solid black',\r\n        flexGrow: '1'\r\n\t},\r\n\ttickerDataCell: {\r\n\t\tborderBottom: '1px solid black',\r\n\t\tmargin: '0',\r\n\t\tpadding: '5px',\r\n\t\t'&:last-child': {\r\n\t\t\tborderBottom: 'none'\r\n\t\t}\r\n\t},\r\n    tickerHeaders: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tborderLeft: '1px solid black',\r\n        flexGrow: '0'\r\n\t},\r\n\ttickerHeader: {\r\n\t\tborderBottom: '1px solid black',\r\n\t\tmargin: '0',\r\n\t\tpadding: '5px',\r\n\t\t'&:last-child': {\r\n\t\t\tborderBottom: 'none'\r\n\t\t}\r\n\t},\r\n}));\r\n\r\nfunction MyTickers(props) {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst delTicker = (ticker, marketType) => {\r\n\t\tdispatch(delTickerWithSaga(ticker, marketType));\r\n\t};\r\n\r\n\tconst classes = useStyles();\r\n\r\n\tconst tickers = Object.keys(props.tickers || {});\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={classes.table}>\r\n\t\t\t\t{tickers.map((ticker) =>\r\n\t\t\t\t\t<div key={ticker} className={classes.ticker}>\r\n\t\t\t\t\t\t<div className={classes.tickerName}>\r\n\t\t\t\t\t\t\t<p>{ticker}</p>\r\n                            <p>{props.tickers[ticker].description}</p>\r\n\t\t\t\t\t\t\t<button onClick={() => delTicker(ticker, props.type)}>del</button>\r\n\t\t\t\t\t\t</div>\r\n                        <div className={classes.tickerHeaders}>\r\n\t\t\t\t\t\t\t<p className={classes.tickerHeader}>Количество</p>\r\n\t\t\t\t\t\t\t<p className={classes.tickerHeader}>Цена,  {(((props.currency === 'rur') && <span>&#8381;</span>) || ((props.currency === 'usd') && <span>$</span>) || ((props.currency === 'eur') && <span>&euro;</span>))}</p>\r\n\t\t\t\t\t\t\t<p className={classes.tickerHeader}>Сумма,  {(((props.currency === 'rur') && <span>&#8381;</span>) || ((props.currency === 'usd') && <span>$</span>) || ((props.currency === 'eur') && <span>&euro;</span>))}</p>\r\n\t\t\t\t\t\t\t<p className={classes.tickerHeader}>Годовая доходность, {(((props.currency === 'rur') && <span>&#8381;</span>) || ((props.currency === 'usd') && <span>$</span>) || ((props.currency === 'eur') && <span>&euro;</span>))}</p>\r\n\t\t\t\t\t\t\t<p className={classes.tickerHeader}>Годовая доходность,  %</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={classes.tickerData}>\r\n\t\t\t\t\t\t\t<p className={classes.tickerDataCell}>{props.tickers[ticker].quantity}</p>\r\n\t\t\t\t\t\t\t<p className={classes.tickerDataCell}>{(((props.currency === 'rur') && <span>{props.tickers[ticker].RUBCost}</span>) || ((props.currency === 'usd') && <span>{props.tickers[ticker].USDCost}</span>) || ((props.currency === 'eur') && <span>{props.tickers[ticker].EURCost}</span>))}</p>\r\n\t\t\t\t\t\t\t<p className={classes.tickerDataCell}>{(((props.currency === 'rur') && <span>{props.tickers[ticker].RUBTotal}</span>) || ((props.currency === 'usd') && <span>{props.tickers[ticker].USDTotal}</span>) || ((props.currency === 'eur') && <span>{props.tickers[ticker].EURTotal}</span>))}</p>\r\n\t\t\t\t\t\t\t<p className={classes.tickerDataCell}>{(((props.currency === 'rur') && <span>{props.myProfit && props.myProfit[ticker].sumProfitRubAbs}</span>) || (((props.currency === 'usd') || (props.currency === 'eur')) && <span>{props.myProfit && props.myProfit[ticker].sumProfitCurrencyAbs}</span>))}</p>\r\n\t\t\t\t\t\t\t<p className={classes.tickerDataCell}>{(((props.currency === 'rur') && <span>{props.myProfit && props.myProfit[ticker].sumProfitRubRel}</span>) || (((props.currency === 'usd') || (props.currency === 'eur')) && <span>{props.myProfit && props.myProfit[ticker].sumProfitCurrencyRel}</span>))}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default MyTickers;","export const CALCULATE_PORTFOLIO_COST = 'PROFILE::CALCULATE_PORTFOLIO_COST';\r\n\r\nexport const calculatePortfolioCost = ( portfolioCost ) => {\r\n    return {\r\n        type: CALCULATE_PORTFOLIO_COST,\r\n        portfolioCost\r\n    };\r\n};\r\n\r\nexport const CALCULATE_PORTFOLIO_COST_WITH_SAGA = 'PROFILE::CALCULATE_PORTFOLIO_COST_WITH_SAGA';\r\n\r\nexport const calculatePortfolioCostWithSaga = (stock, pif, etf, bonds, forex ) => {\r\n    return {\r\n        type: CALCULATE_PORTFOLIO_COST_WITH_SAGA,\r\n        stock,\r\n        pif,\r\n        etf,\r\n        bonds,\r\n        forex   \r\n    };\r\n};","import React, { useEffect, useState } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport {  getMyCurrentBonds, getMyCurrentEtf, getMyCurrentForex, getMyCurrentPif, getMyCurrentStock, getMyProfileCost, getMyYearProfit, getPortfolio } from '../../store/selectors/profileSelectors';\r\nimport { auth } from '../../services/firebase';\r\nimport { setTickersInfoWithSaga } from '../../store/actions/setTickersInfo';\r\nimport MyTickers from '../MyTickers';\r\nimport { calculatePortfolioCostWithSaga } from '../../store/actions/calculatePortfolioCost';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    App: {\r\n        margin: '0 auto'\r\n    },\r\n    mainContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        backgroundColor: '#EEE'\r\n    },\r\n}));\r\n\r\nfunction Profile() {\r\n    const [currency, setCurrency] = useState('rur');\r\n    const portfolio = useSelector(getPortfolio);\r\n    const { stock, bonds, forex, pif, etf } = portfolio;\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleCurrency = (event) => {\r\n        setCurrency(event.target.value);\r\n    };\r\n\r\n    const myCurrentStock = useSelector(getMyCurrentStock);\r\n    const myCurrentPif = useSelector(getMyCurrentPif);\r\n    const myCurrentEtf = useSelector(getMyCurrentEtf);\r\n    const myCurrentBonds = useSelector(getMyCurrentBonds);\r\n    const myCurrentForex = useSelector(getMyCurrentForex);\r\n    const myPortfolioCost = useSelector(getMyProfileCost);\r\n\r\n    const myYearProfit = useSelector(getMyYearProfit);\r\n\r\n    useEffect(() => {\r\n        dispatch(setTickersInfoWithSaga(stock, 'stock'));\r\n        dispatch(setTickersInfoWithSaga(pif, 'pif'));\r\n        dispatch(setTickersInfoWithSaga(etf, 'etf'));\r\n        dispatch(setTickersInfoWithSaga(bonds, 'bonds'));\r\n        dispatch(setTickersInfoWithSaga(forex, 'forex'));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        dispatch(calculatePortfolioCostWithSaga(myCurrentStock, myCurrentPif, myCurrentEtf, myCurrentBonds, myCurrentForex));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div>\r\n            <select required onChange={handleCurrency} className={classes.searchItem}>\r\n                <option value='rur'>rur</option>\r\n                <option value='usd'>usd</option>\r\n                <option value='eur'>eur</option>\r\n            </select>\r\n            <div>Валюта</div>\r\n            <MyTickers tickers={myCurrentForex} myProfit={myYearProfit.forex} type='forex' currency={currency}/>\r\n            <div>Акции</div>\r\n            <MyTickers tickers={myCurrentStock} myProfit={myYearProfit.stock} type='stock' currency={currency}/>\r\n            <div>Фонды</div>\r\n            <MyTickers tickers={myCurrentPif} myProfit={myYearProfit.pif} type='pif' currency={currency}/>\r\n            <MyTickers tickers={myCurrentEtf} myProfit={myYearProfit.etf} type='etf' currency={currency}/>\r\n            <div>Облигации</div>\r\n            <MyTickers tickers={myCurrentBonds} myProfit={myYearProfit.bonds} type='bonds' currency={currency}/>\r\n            <h1>{auth.currentUser ? auth.currentUser.email : ''}</h1>\r\n            <p>&#8381; {myPortfolioCost ? myPortfolioCost.RUBGrandTotal : ''}</p>\r\n            <p>$ {myPortfolioCost ? myPortfolioCost.USDGrandTotal : ''}</p>\r\n            <p>&euro; {myPortfolioCost ? myPortfolioCost.EURGrandTotal : ''}</p>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React, { useCallback, useEffect, useState } from 'react';\nimport { HashRouter as MyRouter, Link, Route, Switch } from 'react-router-dom';\nimport Main from '../Main';\nimport PrivateRoute from '../../hocs/PrivateRoute';\nimport PublicRoute from '../../hocs/PublicRoute';\nimport { auth } from '../../services/firebase';\nimport { HOMEPAGE } from '../../utils/constants';\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\nimport SignUp from '../SignUp';\nimport LogIn from '../LogIn';\nimport Profile from '../Profile';\n\nfunction Router() {\n    const [authed, setAuthed] = useState(false);\n\n    useEffect(() => {\n\n        const unsubscribe = onAuthStateChanged(auth, (user) => {\n            if (user) {\n                setAuthed(true);\n                console.log(auth.currentUser.email);\n            } else {\n                setAuthed(false);\n            }\n        });\n        return unsubscribe;\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const signOutUser = useCallback(() => {\n\t\tsignOut(auth).then(() => {\n\t\t}).catch((error) => {\n\t\t});\n\t},[]);\n\n    return (\n        <MyRouter>\n            <header>\n                <Link to={`${HOMEPAGE}/`}>Main</Link>\n                <Link to={`${HOMEPAGE}/profile`}>Profile</Link>\n                <Link to={`${HOMEPAGE}/signup`}>Registration</Link>\n                <Link to={`${HOMEPAGE}/login`}>Login</Link>\n                <button onClick={signOutUser}>Sign Out</button>\n            </header>\n            <Switch>\n                <PrivateRoute authenticated={authed} exact path={`${HOMEPAGE}/`}>\n                    <Main />\n                </PrivateRoute>\n                <PrivateRoute authenticated={authed} exact path={`${HOMEPAGE}/profile`}>\n                    <Profile />\n                </PrivateRoute>\n                <PublicRoute authenticated={authed} path={`${HOMEPAGE}/signup`}>\n                    <SignUp />\n                </PublicRoute>\n                <PublicRoute authenticated={authed} path={`${HOMEPAGE}/login`}>\n                    <LogIn />\n                </PublicRoute>\n                <Route>\n                    <h4>404</h4>\n                </Route>\n            </Switch>\n        </MyRouter>\n    );\n}\n\nexport default Router;","const initialState = {\r\n\tuserData: {\r\n\r\n\t},\r\n\tcurrentUserData: {\r\n\t\t\r\n\t},\r\n\tfilteredTickers: {\r\n\r\n\t},\r\n};\r\n\r\nexport default initialState;","import { calculatePortfolio, getYearProfit } from '../../Functions/functions';\r\nimport { call, put } from '@redux-saga/core/effects';\r\n\r\nimport { calculatePortfolioCost } from '../actions/calculatePortfolioCost';\r\nimport { calculateYearProfit } from '../actions/calculateYearProfit';\r\n\r\nexport const onCalculatePortfolioCostWithSaga = function* (action){\r\n    try {\r\n        const portfolioCost = yield call(calculatePortfolio, action.stock, action.pif, action.etf, action.bonds, action.forex);\r\n        yield put(calculatePortfolioCost(portfolioCost));\r\n    } catch (err) {\r\n        console.log(err);\r\n    };\r\n};\r\n\r\nexport const onCalculateYearProfitWithSaga = function* (action){\r\n    try {\r\n        const yearProfit = yield call(getYearProfit, action.allTickers);\r\n        yield put(calculateYearProfit(yearProfit));\r\n    } catch (err) {\r\n        console.log(err);\r\n    };\r\n};","import { auth, db } from '../../services/firebase';\nimport { ref, set, remove } from '@firebase/database';\nimport { addTicker, getTickerInfo } from '../../Functions/functions';\nimport { call, put } from '@redux-saga/core/effects';\nimport { setTickersInfo } from '../actions/setTickersInfo';\nimport { autoCompleteTickerWithSaga } from '../actions/autoComplete';\n\nexport const onAddTickerWithSaga = function* (action) {\n    try {\n        const newTicker = yield ref(db, `${auth.currentUser.uid}/tickers/${action.tickerType}/${action.ticker}/data/${action.date}`);\n        yield set(newTicker, { \n            ticker: action.ticker, \n            description: action.description, \n            quantity: action.quantity, \n            cost: action.cost, \n            total: action.total, \n            roubleCost: action.roubleCost, \n            roubleTotal: action.roubleTotal, \n            currency: action.currency,\n            profitCurrencyAbs: action.profitCurrencyAbs,\n            profitCurrencyRel: action.profitCurrencyRel,\n            profitRubAbs: action.profitRubAbs,\n            profitRubRel: action.profitRubRel\n        });\n        const tickerCurrent = yield ref(db, `${auth.currentUser.uid}/portfolio/${action.tickerType}/${action.ticker}/`);\n        yield set(tickerCurrent, {ticker: action.ticker, quantity: action.quantity, currency: action.currency, description: action.description});\n        const prevData = yield {\n            ticker: action.ticker,\n            quantity: action.quantity,\n            cost: action.cost,\n            total: action.total,\n            roubleCost: action.roubleCost,\n            roubleTotal: action.roubleTotal\n        };\n        yield put(autoCompleteTickerWithSaga(action.ticker, action.date, action.quantity, action.currency, prevData));\n    } catch (err) {\n        console.log(err);\n    };\n};\n\nexport const onDelTickerWithSaga = function* (action) {\n    try {\n        const tickerCurrent = yield ref(db, `${auth.currentUser.uid}/portfolio/${action.marketType}/${action.ticker}`);\n        yield remove(tickerCurrent);\n        const ticker = yield ref(db, `${auth.currentUser.uid}/tickers/${action.marketType}/${action.ticker}`);\n        yield remove(ticker);\n    } catch (err) {\n        console.log(err);\n    };\n};\n\nexport const onAutoCompleteTickersWithSaga = function* (action) {\n    try {\n        if (+(new Date(action.date)) < (+(new Date()) - 691200000)){\n            const autoCompleteAction = yield call(addTicker, action.ticker,  new Date(+(new Date(action.date)) + 604800000), action.quantity, action.currency, action.prevData);\n            yield put(autoCompleteAction);\n        }\n    } catch (err) {\n        console.log(err);\n    };\n};\n\nexport const onSetTickersInfoWithSaga = function* (action){\n    try {\n        const tickerTable = yield call(getTickerInfo, action.tickers, action.tickerType);\n        yield put(setTickersInfo(tickerTable, action.tickerType));\n    } catch (err) {\n        console.log(err);\n    };\n};","import { auth, db } from '../../services/firebase';\r\nimport { ref, onValue } from '@firebase/database';\r\n\r\nimport { store } from '../store';\r\nimport { initUserData } from '../actions/initUserData';\r\n\r\nexport const onInitUserDataWithSaga = function* () {\r\n    try {\r\n        const tickers = yield ref(db, `${auth.currentUser.uid}`);\r\n        yield onValue(tickers, (snapshot) => {\r\n            const data = snapshot.val();\r\n            store.dispatch(initUserData(data || {}));\r\n        });\r\n    } catch (err) {\r\n        console.log(err.message);\r\n    }\r\n};","import { takeLatest, takeEvery } from 'redux-saga/effects';\r\nimport { ADD_TICKER_WITH_SAGA } from './actions/addTicker';\r\nimport { AUTOCOMPLETE_TICKER_WITH_SAGA } from './actions/autoComplete';\r\nimport { CALCULATE_PORTFOLIO_COST_WITH_SAGA } from './actions/calculatePortfolioCost';\r\nimport { CALCULATE_YEAR_PROFIT_WITH_SAGA } from './actions/calculateYearProfit';\r\nimport { DEL_TICKER_WITH_SAGA } from './actions/delTicker';\r\n\r\nimport { INIT_INIT_USER_DATA_WITH_SAGA } from './actions/initUserData';\r\nimport { SET_TICKERS_INFO_WITH_SAGA } from './actions/setTickersInfo';\r\nimport { onCalculatePortfolioCostWithSaga, onCalculateYearProfitWithSaga } from './sagas/profileSaga';\r\nimport { onAddTickerWithSaga, onAutoCompleteTickersWithSaga, onDelTickerWithSaga, onSetTickersInfoWithSaga } from './sagas/tickersSaga';\r\nimport { onInitUserDataWithSaga } from './sagas/userDataSaga';\r\n\r\nfunction* mySaga() {\r\n\tyield takeLatest(INIT_INIT_USER_DATA_WITH_SAGA, onInitUserDataWithSaga);\r\n\tyield takeEvery(ADD_TICKER_WITH_SAGA, onAddTickerWithSaga);\r\n\tyield takeLatest(DEL_TICKER_WITH_SAGA, onDelTickerWithSaga);\r\n\tyield takeEvery(AUTOCOMPLETE_TICKER_WITH_SAGA, onAutoCompleteTickersWithSaga);\r\n\tyield takeEvery(SET_TICKERS_INFO_WITH_SAGA, onSetTickersInfoWithSaga);\r\n\tyield takeLatest(CALCULATE_PORTFOLIO_COST_WITH_SAGA, onCalculatePortfolioCostWithSaga);\r\n\tyield takeLatest(CALCULATE_YEAR_PROFIT_WITH_SAGA, onCalculateYearProfitWithSaga);\r\n};\r\n\r\nexport default mySaga;","import { INIT_USER_DATA } from '../actions/initUserData';\nimport initialState from '../initialState';\n\nconst { userData } = initialState;\n\nfunction userDataReducer(state = userData, action) {\n    switch (action.type) {\n        case INIT_USER_DATA:\n            return {\n                ...action.userData\n            };\n\n        default: return state;\n    }\n};\n\nexport default userDataReducer;","\r\nimport { CALCULATE_PORTFOLIO_COST } from '../actions/calculatePortfolioCost';\r\nimport { CALCULATE_YEAR_PROFIT } from '../actions/calculateYearProfit';\r\nimport { SET_TICKERS_INFO } from '../actions/setTickersInfo';\r\nimport initialState from '../initialState';\r\n\r\nconst { currentUserData } = initialState;\r\n\r\nfunction currentUserDataReducer(state = currentUserData, action) {\r\n    switch (action.type) {\r\n        case SET_TICKERS_INFO:\r\n            return {\r\n                ...state,\r\n                [action.tickerType]: action.tickerTable\r\n            };\r\n\r\n        case CALCULATE_PORTFOLIO_COST:\r\n            return{\r\n                ...state,\r\n                portfolioCost: action.portfolioCost\r\n            }\r\n\r\n        case CALCULATE_YEAR_PROFIT:\r\n            return {\r\n                ...state,\r\n                yearProfit: action.yearProfit,\r\n            }\r\n\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default currentUserDataReducer;","\r\nimport { ADD_FILTERED_TICKERS } from '../actions/addFilteredTickers';\r\nimport initialState from '../initialState';\r\n\r\nconst { filteredTickers } = initialState;\r\n\r\nfunction filteredTickersReducer(state = filteredTickers, action) {\r\n    switch (action.type) {\r\n        case ADD_FILTERED_TICKERS:\r\n            return {\r\n                ...action.filteredTickers\r\n            };\r\n\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default filteredTickersReducer;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport initialState from './initialState';\r\n\r\nimport mySaga from './sagas.js';\r\nimport userData from './reducers/userDataReducer';\r\nimport currentUserData from './reducers/currentUserDataReducer';\r\nimport filteredTickers from './reducers/filteredTickersReducer';\r\n\r\nexport const combine = combineReducers({ userData, currentUserData, filteredTickers });\r\n\r\nconst onErrorSaga = (error, stack) => { console.log('qqq' + error); console.log(stack) };\r\nconst options = { onError: onErrorSaga };\r\nconst sagaMiddleware = createSagaMiddleware(options);\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst persistConfig = {\r\n\tkey: 'root',\r\n\tstorage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, combine);\r\n\r\nexport const store = createStore(\r\n\tpersistedReducer,\r\n\tinitialState,\r\n\tcomposeEnhancers(applyMiddleware(sagaMiddleware)));\r\n\r\nsagaMiddleware.run(mySaga);\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/es/integration/react';\n\nimport { ThemeProvider, createTheme } from '@material-ui/core/styles';\n\nimport Router from './Components/Router';\nimport { store } from './store/store';\nimport { persistor } from './store/store';\n\nconst mainTheme = createTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: \"#708238\",\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: \"#0098FF\",\n\t\t},\n\t},\n});\n\nfunction App() {\n\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<PersistGate persistor={persistor}>\n\t\t\t\t<ThemeProvider theme={mainTheme}>\n\t\t\t\t\t\t<Router />\n\t\t\t\t</ThemeProvider>\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}